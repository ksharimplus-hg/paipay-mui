{"version":3,"names":["React","Keyboard","Platform","useIsKeyboardShown","onShow","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","OS","addListener","remove","removeListener"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n\tonShow: () => void;\n\tonHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n\tReact.useEffect(() => {\n\t\tlet willShowSubscription: NativeEventSubscription | undefined;\n\t\tlet willHideSubscription: NativeEventSubscription | undefined;\n\t\tlet didShowSubscription: NativeEventSubscription | undefined;\n\t\tlet didHideSubscription: NativeEventSubscription | undefined;\n\n\t\tif (Platform.OS === 'ios') {\n\t\t\twillShowSubscription = Keyboard.addListener(\n\t\t\t\t'keyboardWillShow',\n\t\t\t\tonShow\n\t\t\t);\n\t\t\twillHideSubscription = Keyboard.addListener(\n\t\t\t\t'keyboardWillHide',\n\t\t\t\tonHide\n\t\t\t);\n\t\t} else {\n\t\t\tdidShowSubscription = Keyboard.addListener(\n\t\t\t\t'keyboardDidShow',\n\t\t\t\tonShow\n\t\t\t);\n\t\t\tdidHideSubscription = Keyboard.addListener(\n\t\t\t\t'keyboardDidHide',\n\t\t\t\tonHide\n\t\t\t);\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (Platform.OS === 'ios') {\n\t\t\t\tif (willShowSubscription?.remove) {\n\t\t\t\t\twillShowSubscription.remove();\n\t\t\t\t} else {\n\t\t\t\t\t/* @ts-ignore */\n\t\t\t\t\tKeyboard.removeListener('keyboardWillShow', onShow);\n\t\t\t\t}\n\n\t\t\t\tif (willHideSubscription?.remove) {\n\t\t\t\t\twillHideSubscription.remove();\n\t\t\t\t} else {\n\t\t\t\t\t/* @ts-ignore */\n\t\t\t\t\tKeyboard.removeListener('keyboardWillHide', onHide);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (didShowSubscription?.remove) {\n\t\t\t\t\tdidShowSubscription.remove();\n\t\t\t\t} else {\n\t\t\t\t\t/* @ts-ignore */\n\t\t\t\t\tKeyboard.removeListener('keyboardDidShow', onShow);\n\t\t\t\t}\n\n\t\t\t\tif (didHideSubscription?.remove) {\n\t\t\t\t\tdidHideSubscription.remove();\n\t\t\t\t} else {\n\t\t\t\t\t/* @ts-ignore */\n\t\t\t\t\tKeyboard.removeListener('keyboardDidHide', onHide);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, [onHide, onShow]);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAA2BC,QAAQ,QAAQ,cAAc;AAM1E,eAAe,SAASC,kBAAkB,OAA4B;EAAA,IAA3B;IAAEC,MAAM;IAAEC;EAAc,CAAC;EACnEL,KAAK,CAACM,SAAS,CAAC,MAAM;IACrB,IAAIC,oBAAyD;IAC7D,IAAIC,oBAAyD;IAC7D,IAAIC,mBAAwD;IAC5D,IAAIC,mBAAwD;IAE5D,IAAIR,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;MAC1BJ,oBAAoB,GAAGN,QAAQ,CAACW,WAAW,CAC1C,kBAAkB,EAClBR,MAAM,CACN;MACDI,oBAAoB,GAAGP,QAAQ,CAACW,WAAW,CAC1C,kBAAkB,EAClBP,MAAM,CACN;IACF,CAAC,MAAM;MACNI,mBAAmB,GAAGR,QAAQ,CAACW,WAAW,CACzC,iBAAiB,EACjBR,MAAM,CACN;MACDM,mBAAmB,GAAGT,QAAQ,CAACW,WAAW,CACzC,iBAAiB,EACjBP,MAAM,CACN;IACF;IAEA,OAAO,MAAM;MACZ,IAAIH,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;QAAA;QAC1B,6BAAIJ,oBAAoB,kDAApB,sBAAsBM,MAAM,EAAE;UACjCN,oBAAoB,CAACM,MAAM,EAAE;QAC9B,CAAC,MAAM;UACN;UACAZ,QAAQ,CAACa,cAAc,CAAC,kBAAkB,EAAEV,MAAM,CAAC;QACpD;QAEA,6BAAII,oBAAoB,kDAApB,sBAAsBK,MAAM,EAAE;UACjCL,oBAAoB,CAACK,MAAM,EAAE;QAC9B,CAAC,MAAM;UACN;UACAZ,QAAQ,CAACa,cAAc,CAAC,kBAAkB,EAAET,MAAM,CAAC;QACpD;MACD,CAAC,MAAM;QAAA;QACN,4BAAII,mBAAmB,iDAAnB,qBAAqBI,MAAM,EAAE;UAChCJ,mBAAmB,CAACI,MAAM,EAAE;QAC7B,CAAC,MAAM;UACN;UACAZ,QAAQ,CAACa,cAAc,CAAC,iBAAiB,EAAEV,MAAM,CAAC;QACnD;QAEA,4BAAIM,mBAAmB,iDAAnB,qBAAqBG,MAAM,EAAE;UAChCH,mBAAmB,CAACG,MAAM,EAAE;QAC7B,CAAC,MAAM;UACN;UACAZ,QAAQ,CAACa,cAAc,CAAC,iBAAiB,EAAET,MAAM,CAAC;QACnD;MACD;IACD,CAAC;EACF,CAAC,EAAE,CAACA,MAAM,EAAED,MAAM,CAAC,CAAC;AACrB"}