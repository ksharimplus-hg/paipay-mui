{"version":3,"names":["MD3TypescaleKey","ElevationLevels"],"sources":["types.tsx"],"sourcesContent":["import type * as React from 'react';\n\nimport type { $DeepPartial } from '@callstack/react-theme-provider';\n\nexport type Font = {\n\tfontFamily: string;\n\tfontWeight?:\n\t\t| 'normal'\n\t\t| 'bold'\n\t\t| '100'\n\t\t| '200'\n\t\t| '300'\n\t\t| '400'\n\t\t| '500'\n\t\t| '600'\n\t\t| '700'\n\t\t| '800'\n\t\t| '900';\n};\n\nexport type Fonts = {\n\tregular: Font;\n\tmedium: Font;\n\tlight: Font;\n\tthin: Font;\n};\n\ntype Mode = 'adaptive' | 'exact';\n\nexport type MD2Colors = {\n\tprimary: string;\n\tbackground: string;\n\tsurface: string;\n\taccent: string;\n\terror: string;\n\ttext: string;\n\tonSurface: string;\n\tdisabled: string;\n\tplaceholder: string;\n\tbackdrop: string;\n\tnotification: string;\n\ttooltip: string;\n};\n\nexport type MD3Colors = {\n\tprimary: string;\n\tprimaryContainer: string;\n\tsecondary: string;\n\tsecondaryContainer: string;\n\ttertiary: string;\n\ttertiaryContainer: string;\n\tsurface: string;\n\tsurfaceVariant: string;\n\tsurfaceDisabled: string;\n\tbackground: string;\n\terror: string;\n\terrorContainer: string;\n\tonPrimary: string;\n\tonPrimaryContainer: string;\n\tonSecondary: string;\n\tonSecondaryContainer: string;\n\tonTertiary: string;\n\tonTertiaryContainer: string;\n\tonSurface: string;\n\tonSurfaceVariant: string;\n\tonSurfaceDisabled: string;\n\tonError: string;\n\tonErrorContainer: string;\n\tonBackground: string;\n\toutline: string;\n\toutlineVariant: string;\n\tinverseSurface: string;\n\tinverseOnSurface: string;\n\tinversePrimary: string;\n\tshadow: string;\n\tscrim: string;\n\tbackdrop: string;\n\televation: MD3ElevationColors;\n};\n\nexport type MD3AndroidColors = {\n\tprimary: number;\n\tprimaryContainer: number;\n\tsecondary: number;\n\tsecondaryContainer: number;\n\ttertiary: number;\n\ttertiaryContainer: number;\n\tsurface: number;\n\tsurfaceVariant: number;\n\tbackground: number;\n\terror: number;\n\terrorContainer: number;\n\tonPrimary: number;\n\tonPrimaryContainer: number;\n\tonSecondary: number;\n\tonSecondaryContainer: number;\n\tonTertiary: number;\n\tonTertiaryContainer: number;\n\tonSurface: number;\n\tonSurfaceVariant: number;\n\tonError: number;\n\tonErrorContainer: number;\n\tonBackground: number;\n\toutline: number;\n\toutlineVariant: number;\n\tinverseSurface: number;\n\tinverseOnSurface: number;\n\tinversePrimary: number;\n\tshadow: number;\n\tscrim: number;\n};\n\nexport type MD3Palette = {};\n\nexport type ThemeProp = $DeepPartial<InternalTheme>;\n\nexport type ThemeBase = {\n\tdark: boolean;\n\tmode?: Mode;\n\troundness: number;\n\tanimation: {\n\t\tscale: number;\n\t};\n};\n\nexport type MD3Theme = ThemeBase & {\n\tversion: 3;\n\tisV3: true;\n\tcolors: MD3Colors;\n\tfonts: MD3Typescale;\n};\n\nexport type MD2Theme = ThemeBase & {\n\tversion: 2;\n\tisV3: false;\n\tcolors: MD2Colors;\n\tfonts: Fonts;\n};\n\nexport type InternalTheme = MD2Theme | MD3Theme;\n\n// MD3 types\nexport enum MD3TypescaleKey {\n\tdisplayLarge = 'displayLarge',\n\tdisplayMedium = 'displayMedium',\n\tdisplaySmall = 'displaySmall',\n\n\theadlineLarge = 'headlineLarge',\n\theadlineMedium = 'headlineMedium',\n\theadlineSmall = 'headlineSmall',\n\n\ttitleLarge = 'titleLarge',\n\ttitleMedium = 'titleMedium',\n\ttitleSmall = 'titleSmall',\n\n\tlabelLarge = 'labelLarge',\n\tlabelMedium = 'labelMedium',\n\tlabelSmall = 'labelSmall',\n\n\tbodyLarge = 'bodyLarge',\n\tbodyMedium = 'bodyMedium',\n\tbodySmall = 'bodySmall',\n}\n\nexport type MD3Type = {\n\tfontFamily: string;\n\tletterSpacing: number;\n\tfontWeight: Font['fontWeight'];\n\tlineHeight: number;\n\tfontSize: number;\n};\n\nexport type MD3Typescale =\n\t| {\n\t\t\t[key in MD3TypescaleKey]: MD3Type;\n\t  } & {\n\t\t\t['default']: Omit<MD3Type, 'lineHeight' | 'fontSize'>;\n\t  };\n\nexport type MD3Elevation = 0 | 1 | 2 | 3 | 4 | 5;\n\nexport enum ElevationLevels {\n\t'level0',\n\t'level1',\n\t'level2',\n\t'level3',\n\t'level4',\n\t'level5',\n}\n\nexport type MD3ElevationColors = {\n\t[key in keyof typeof ElevationLevels]: string;\n};\n\nexport type $Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\nexport type $RemoveChildren<T extends React.ComponentType<any>> = $Omit<\n\tReact.ComponentPropsWithoutRef<T>,\n\t'children'\n>;\n\nexport type EllipsizeProp = 'head' | 'middle' | 'tail' | 'clip';\n\nexport type NavigationTheme = {\n\tdark: boolean;\n\tcolors: {\n\t\tprimary: string;\n\t\tbackground: string;\n\t\tcard: string;\n\t\ttext: string;\n\t\tborder: string;\n\t\tnotification: string;\n\t};\n};\n"],"mappings":"AA6IA;AACA,WAAYA,eAAe;AAoB1B,WApBWA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe;AAuC3B,WAAYC,eAAe;AAO1B,WAPWA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe"}