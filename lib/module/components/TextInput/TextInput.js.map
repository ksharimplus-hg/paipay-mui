{"version":3,"names":["React","Animated","TextInput","NativeTextInput","TextInputAffix","TextInputIcon","TextInputFlat","TextInputOutlined","withInternalTheme","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","forwardRef","ref","mode","dense","disabled","error","errorProp","multiline","editable","contentStyle","render","props","rest","isControlled","value","undefined","validInputValue","defaultValue","current","labeled","useRef","Value","focused","setFocused","useState","placeholder","setPlaceholder","uncontrolledValue","setUncontrolledValue","labelLayout","setLabelLayout","measured","width","height","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","clear","setNativeProps","args","isFocused","blur","forceFocus","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","onFocus","handleBlur","onBlur","handleChangeText","onChangeText","handleLayoutAnimatedText","e","maxFontSizeMultiplier","Icon","Affix"],"sources":["TextInput.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tAnimated,\r\n\tLayoutChangeEvent,\r\n\tStyleProp,\r\n\tTextInput as NativeTextInput,\r\n\tTextStyle,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport TextInputAffix, {\r\n\tProps as TextInputAffixProps,\r\n} from './Adornment/TextInputAffix';\r\nimport TextInputIcon, {\r\n\tProps as TextInputIconProps,\r\n} from './Adornment/TextInputIcon';\r\nimport TextInputFlat from './TextInputFlat';\r\nimport TextInputOutlined from './TextInputOutlined';\r\nimport type { RenderProps, TextInputLabelProp } from './types';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { InternalTheme } from '../../types';\r\n\r\nconst BLUR_ANIMATION_DURATION = 180;\r\nconst FOCUS_ANIMATION_DURATION = 150;\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\r\n\t/**\r\n\t * Mode of the TextInput.\r\n\t * - `flat` - flat input with an underline.\r\n\t * - `outlined` - input with an outline.\r\n\t *\r\n\t * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\r\n\t * This component render TextInputOutlined or TextInputFlat based on that props\r\n\t */\r\n\tmode?: 'flat' | 'outlined';\r\n\tleft?: React.ReactNode;\r\n\tright?: React.ReactNode;\r\n\t/**\r\n\t * If true, user won't be able to interact with the component.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * The text or component to use for the floating label.\r\n\t */\r\n\tlabel?: TextInputLabelProp;\r\n\t/**\r\n\t * Placeholder for the input.\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * Whether to style the TextInput with error style.\r\n\t */\r\n\terror?: boolean;\r\n\t/**\r\n\t * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\r\n\t */\r\n\tonChangeText?: Function;\r\n\t/**\r\n\t * Selection color of the input.\r\n\t */\r\n\tselectionColor?: string;\r\n\t/**\r\n\t * Inactive underline color of the input.\r\n\t */\r\n\tunderlineColor?: string;\r\n\t/**\r\n\t * Active underline color of the input.\r\n\t */\r\n\tactiveUnderlineColor?: string;\r\n\t/**\r\n\t * Inactive outline color of the input.\r\n\t */\r\n\toutlineColor?: string;\r\n\t/**\r\n\t * Active outline color of the input.\r\n\t */\r\n\tactiveOutlineColor?: string;\r\n\t/**\r\n\t * Color of the text in the input.\r\n\t */\r\n\ttextColor?: string;\r\n\t/**\r\n\t * Sets min height with densed layout. For `TextInput` in `flat` mode\r\n\t * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\r\n\t * For `TextInput` in `outlined` mode\r\n\t * height is `56dp` or in dense layout - `40dp` regardless of label.\r\n\t * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\r\n\t */\r\n\tdense?: boolean;\r\n\t/**\r\n\t * Whether the input can have multiple lines.\r\n\t */\r\n\tmultiline?: boolean;\r\n\t/**\r\n\t * The number of lines to show in the input (Android only).\r\n\t */\r\n\tnumberOfLines?: number;\r\n\t/**\r\n\t * Callback that is called when the text input is focused.\r\n\t */\r\n\tonFocus?: (args: any) => void;\r\n\t/**\r\n\t * Callback that is called when the text input is blurred.\r\n\t */\r\n\tonBlur?: (args: any) => void;\r\n\t/**\r\n\t *\r\n\t * Callback to render a custom input component such as `react-native-text-input-mask`\r\n\t * instead of the default `TextInput` component from `react-native`.\r\n\t *\r\n\t * Example:\r\n\t * ```js\r\n\t * <TextInput\r\n\t *   label=\"Phone number\"\r\n\t *   render={props =>\r\n\t *     <TextInputMask\r\n\t *       {...props}\r\n\t *       mask=\"+[00] [000] [000] [000]\"\r\n\t *     />\r\n\t *   }\r\n\t * />\r\n\t * ```\r\n\t */\r\n\trender?: (props: RenderProps) => React.ReactNode;\r\n\t/**\r\n\t * Value of the text input.\r\n\t */\r\n\tvalue?: string;\r\n\t/**\r\n\t * Pass `fontSize` prop to modify the font size inside `TextInput`.\r\n\t * Pass `height` prop to set `TextInput` height. When `height` is passed,\r\n\t * `dense` prop will affect only input's `paddingVertical`.\r\n\t * Pass `paddingHorizontal` to modify horizontal padding.\r\n\t * This can be used to get MD Guidelines v1 TextInput look.\r\n\t */\r\n\tstyle?: StyleProp<TextStyle>;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * testID to be used on tests.\r\n\t */\r\n\ttestID?: string;\r\n\t/**\r\n\t * Pass custom style directly to the input itself.\r\n\t * Overrides input style\r\n\t * Example: `paddingLeft`, `backgroundColor`\r\n\t */\r\n\tcontentStyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * Pass style to override the default style of outlined wrapper.\r\n\t * Overrides style when mode is set to `outlined`\r\n\t * Example: `borderRadius`, `borderColor`\r\n\t */\r\n\toutlineStyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * Pass style to override the default style of underlined wrapper.\r\n\t * Overrides style when mode is set to `flat`\r\n\t * Example: `borderRadius`, `borderColor`\r\n\t */\r\n\tunderlineStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\ninterface CompoundedComponent\r\n\textends React.ForwardRefExoticComponent<\r\n\t\tProps & React.RefAttributes<TextInputHandles>\r\n\t> {\r\n\tIcon: React.FunctionComponent<TextInputIconProps>;\r\n\tAffix: React.FunctionComponent<Partial<TextInputAffixProps>>;\r\n}\r\n\r\ntype TextInputHandles = Pick<\r\n\tNativeTextInput,\r\n\t'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\r\n>;\r\n\r\n/**\r\n * A component to allow users to input text.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/textinput-flat.focused.png\" />\r\n *     <figcaption>Flat (focused)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/textinput-flat.disabled.png\" />\r\n *     <figcaption>Flat (disabled)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/textinput-outlined.focused.png\" />\r\n *     <figcaption>Outlined (focused)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/textinput-outlined.disabled.png\" />\r\n *     <figcaption>Outlined (disabled)</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { TextInput } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [text, setText] = React.useState(\"\");\r\n *\r\n *   return (\r\n *     <TextInput\r\n *       label=\"Email\"\r\n *       value={text}\r\n *       onChangeText={text => setText(text)}\r\n *     />\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n *\r\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\r\n */\r\n\r\nconst TextInput = React.forwardRef<TextInputHandles, Props>(\r\n\t(\r\n\t\t{\r\n\t\t\tmode = 'flat',\r\n\t\t\tdense = false,\r\n\t\t\tdisabled = false,\r\n\t\t\terror: errorProp = false,\r\n\t\t\tmultiline = false,\r\n\t\t\teditable = true,\r\n\t\t\tcontentStyle,\r\n\t\t\trender = (props: RenderProps) => <NativeTextInput {...props} />,\r\n\t\t\t...rest\r\n\t\t}: Props,\r\n\t\tref\r\n\t) => {\r\n\t\tconst isControlled = rest.value !== undefined;\r\n\t\tconst validInputValue = isControlled ? rest.value : rest.defaultValue;\r\n\r\n\t\tconst { current: labeled } = React.useRef<Animated.Value>(\r\n\t\t\tnew Animated.Value(validInputValue ? 0 : 1)\r\n\t\t);\r\n\t\tconst { current: error } = React.useRef<Animated.Value>(\r\n\t\t\tnew Animated.Value(errorProp ? 1 : 0)\r\n\t\t);\r\n\t\tconst [focused, setFocused] = React.useState<boolean>(false);\r\n\t\tconst [placeholder, setPlaceholder] = React.useState<\r\n\t\t\tstring | undefined\r\n\t\t>(' ');\r\n\t\tconst [uncontrolledValue, setUncontrolledValue] = React.useState<\r\n\t\t\tstring | undefined\r\n\t\t>(validInputValue);\r\n\t\t// Use value from props instead of local state when input is controlled\r\n\t\tconst value = isControlled ? rest.value : uncontrolledValue;\r\n\r\n\t\tconst [labelLayout, setLabelLayout] = React.useState<{\r\n\t\t\tmeasured: boolean;\r\n\t\t\twidth: number;\r\n\t\t\theight: number;\r\n\t\t}>({\r\n\t\t\tmeasured: false,\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t});\r\n\t\tconst [leftLayout, setLeftLayout] = React.useState<{\r\n\t\t\theight: number | null;\r\n\t\t\twidth: number | null;\r\n\t\t}>({\r\n\t\t\twidth: null,\r\n\t\t\theight: null,\r\n\t\t});\r\n\t\tconst [rightLayout, setRightLayout] = React.useState<{\r\n\t\t\theight: number | null;\r\n\t\t\twidth: number | null;\r\n\t\t}>({\r\n\t\t\twidth: null,\r\n\t\t\theight: null,\r\n\t\t});\r\n\r\n\t\tconst timer = React.useRef<NodeJS.Timeout | undefined>();\r\n\r\n\t\tconst root = React.useRef<NativeTextInput | undefined | null>();\r\n\r\n\t\tconst { scale } = rest.theme.animation;\r\n\r\n\t\tReact.useImperativeHandle(ref, () => ({\r\n\t\t\tfocus: () => root.current?.focus(),\r\n\t\t\tclear: () => root.current?.clear(),\r\n\t\t\tsetNativeProps: (args: Object) =>\r\n\t\t\t\troot.current?.setNativeProps(args),\r\n\t\t\tisFocused: () => root.current?.isFocused() || false,\r\n\t\t\tblur: () => root.current?.blur(),\r\n\t\t\tforceFocus: () => root.current?.focus(),\r\n\t\t}));\r\n\r\n\t\tReact.useEffect(() => {\r\n\t\t\t// When the input has an error, we wiggle the label and apply error styles\r\n\t\t\tif (errorProp) {\r\n\t\t\t\t// show error\r\n\t\t\t\tAnimated.timing(error, {\r\n\t\t\t\t\ttoValue: 1,\r\n\t\t\t\t\tduration: FOCUS_ANIMATION_DURATION * scale,\r\n\t\t\t\t\t// To prevent this - https://github.com/callstack/react-native-paper/issues/941\r\n\t\t\t\t\tuseNativeDriver: true,\r\n\t\t\t\t}).start();\r\n\t\t\t} else {\r\n\t\t\t\t// hide error\r\n\t\t\t\t{\r\n\t\t\t\t\tAnimated.timing(error, {\r\n\t\t\t\t\t\ttoValue: 0,\r\n\t\t\t\t\t\tduration: BLUR_ANIMATION_DURATION * scale,\r\n\t\t\t\t\t\t// To prevent this - https://github.com/callstack/react-native-paper/issues/941\r\n\t\t\t\t\t\tuseNativeDriver: true,\r\n\t\t\t\t\t}).start();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, [errorProp, scale, error]);\r\n\r\n\t\tReact.useEffect(() => {\r\n\t\t\t// Show placeholder text only if the input is focused, or there's no label\r\n\t\t\t// We don't show placeholder if there's a label because the label acts as placeholder\r\n\t\t\t// When focused, the label moves up, so we can show a placeholder\r\n\t\t\tif (focused || !rest.label) {\r\n\t\t\t\t// If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\r\n\t\t\t\t// This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\r\n\t\t\t\tif (rest.placeholder) {\r\n\t\t\t\t\t// Set the placeholder in a delay to offset the label animation\r\n\t\t\t\t\t// If we show it immediately, they'll overlap and look ugly\r\n\t\t\t\t\ttimer.current = setTimeout(\r\n\t\t\t\t\t\t() => setPlaceholder(rest.placeholder),\r\n\t\t\t\t\t\t50\r\n\t\t\t\t\t) as unknown as NodeJS.Timeout;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// hidePlaceholder\r\n\r\n\t\t\t\t// Issue: https://github.com/callstack/react-native-paper/issues/3138\r\n\t\t\t\t// Description:   Changing the placeholder text value dynamically,\r\n\t\t\t\t//                within multiline input on iOS, doesn't work properly –\r\n\t\t\t\t//                the placeholder is not displayed initially.\r\n\t\t\t\t// Root cause:    Placeholder initial value, which has length 0.\r\n\t\t\t\t// More context:  The issue was also reproduced in react-native, using its own TextInput.\r\n\t\t\t\t// Workaround:    Set an empty space character in the default value.\r\n\t\t\t\tsetPlaceholder(' ');\r\n\t\t\t}\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tif (timer.current) {\r\n\t\t\t\t\tclearTimeout(timer.current);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}, [focused, rest.label, rest.placeholder]);\r\n\r\n\t\tReact.useEffect(() => {\r\n\t\t\t// The label should be minimized if the text input is focused, or has text\r\n\t\t\t// In minimized mode, the label moves up and becomes small\r\n\t\t\t// workaround for animated regression for react native > 0.61\r\n\t\t\t// https://github.com/callstack/react-native-paper/pull/1440\r\n\t\t\tif (value || focused) {\r\n\t\t\t\t// minimize label\r\n\t\t\t\tAnimated.timing(labeled, {\r\n\t\t\t\t\ttoValue: 0,\r\n\t\t\t\t\tduration: BLUR_ANIMATION_DURATION * scale,\r\n\t\t\t\t\t// To prevent this - https://github.com/callstack/react-native-paper/issues/941\r\n\t\t\t\t\tuseNativeDriver: true,\r\n\t\t\t\t}).start();\r\n\t\t\t} else {\r\n\t\t\t\t// restore label\r\n\t\t\t\t{\r\n\t\t\t\t\tAnimated.timing(labeled, {\r\n\t\t\t\t\t\ttoValue: 1,\r\n\t\t\t\t\t\tduration: FOCUS_ANIMATION_DURATION * scale,\r\n\t\t\t\t\t\t// To prevent this - https://github.com/callstack/react-native-paper/issues/941\r\n\t\t\t\t\t\tuseNativeDriver: true,\r\n\t\t\t\t\t}).start();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, [focused, value, labeled, scale]);\r\n\r\n\t\tconst onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\r\n\t\t\tsetLeftLayout({\r\n\t\t\t\theight: event.nativeEvent.layout.height,\r\n\t\t\t\twidth: event.nativeEvent.layout.width,\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\r\n\t\t\tsetRightLayout({\r\n\t\t\t\twidth: event.nativeEvent.layout.width,\r\n\t\t\t\theight: event.nativeEvent.layout.height,\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tconst handleFocus = (args: any) => {\r\n\t\t\tif (disabled || !editable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetFocused(true);\r\n\r\n\t\t\trest.onFocus?.(args);\r\n\t\t};\r\n\r\n\t\tconst handleBlur = (args: Object) => {\r\n\t\t\tif (!editable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetFocused(false);\r\n\t\t\trest.onBlur?.(args);\r\n\t\t};\r\n\r\n\t\tconst handleChangeText = (value: string) => {\r\n\t\t\tif (!editable || disabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isControlled) {\r\n\t\t\t\t// Keep track of value in local state when input is not controlled\r\n\t\t\t\tsetUncontrolledValue(value);\r\n\t\t\t}\r\n\t\t\trest.onChangeText?.(value);\r\n\t\t};\r\n\r\n\t\tconst handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\r\n\t\t\tsetLabelLayout({\r\n\t\t\t\twidth: e.nativeEvent.layout.width,\r\n\t\t\t\theight: e.nativeEvent.layout.height,\r\n\t\t\t\tmeasured: true,\r\n\t\t\t});\r\n\t\t};\r\n\t\tconst forceFocus = () => root.current?.focus();\r\n\r\n\t\tconst { maxFontSizeMultiplier = 1.5 } = rest;\r\n\r\n\t\tif (mode === 'outlined') {\r\n\t\t\treturn (\r\n\t\t\t\t<TextInputOutlined\r\n\t\t\t\t\tdense={dense}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\terror={errorProp}\r\n\t\t\t\t\tmultiline={multiline}\r\n\t\t\t\t\teditable={editable}\r\n\t\t\t\t\trender={render}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tparentState={{\r\n\t\t\t\t\t\tlabeled,\r\n\t\t\t\t\t\terror,\r\n\t\t\t\t\t\tfocused,\r\n\t\t\t\t\t\tplaceholder,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tlabelLayout,\r\n\t\t\t\t\t\tleftLayout,\r\n\t\t\t\t\t\trightLayout,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tinnerRef={(ref) => {\r\n\t\t\t\t\t\troot.current = ref;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\tforceFocus={forceFocus}\r\n\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\tonChangeText={handleChangeText}\r\n\t\t\t\t\tonLayoutAnimatedText={handleLayoutAnimatedText}\r\n\t\t\t\t\tonLeftAffixLayoutChange={onLeftAffixLayoutChange}\r\n\t\t\t\t\tonRightAffixLayoutChange={onRightAffixLayoutChange}\r\n\t\t\t\t\tmaxFontSizeMultiplier={maxFontSizeMultiplier}\r\n\t\t\t\t\tcontentStyle={contentStyle}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<TextInputFlat\r\n\t\t\t\tdense={dense}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\terror={errorProp}\r\n\t\t\t\tmultiline={multiline}\r\n\t\t\t\teditable={editable}\r\n\t\t\t\trender={render}\r\n\t\t\t\t{...rest}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tparentState={{\r\n\t\t\t\t\tlabeled,\r\n\t\t\t\t\terror,\r\n\t\t\t\t\tfocused,\r\n\t\t\t\t\tplaceholder,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tlabelLayout,\r\n\t\t\t\t\tleftLayout,\r\n\t\t\t\t\trightLayout,\r\n\t\t\t\t}}\r\n\t\t\t\tinnerRef={(ref) => {\r\n\t\t\t\t\troot.current = ref;\r\n\t\t\t\t}}\r\n\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\tforceFocus={forceFocus}\r\n\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\tonChangeText={handleChangeText}\r\n\t\t\t\tonLayoutAnimatedText={handleLayoutAnimatedText}\r\n\t\t\t\tonLeftAffixLayoutChange={onLeftAffixLayoutChange}\r\n\t\t\t\tonRightAffixLayoutChange={onRightAffixLayoutChange}\r\n\t\t\t\tmaxFontSizeMultiplier={maxFontSizeMultiplier}\r\n\t\t\t\tcontentStyle={contentStyle}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n) as CompoundedComponent;\r\n// @component ./Adornment/TextInputIcon.tsx\r\nTextInput.Icon = TextInputIcon;\r\n\r\n// @component ./Adornment/TextInputAffix.tsx\r\n// @ts-ignore Types of property 'theme' are incompatible.\r\nTextInput.Affix = TextInputAffix;\r\n\r\nexport default withInternalTheme(TextInput);\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACCC,QAAQ,EAGRC,SAAS,IAAIC,eAAe,QAGtB,cAAc;AAErB,OAAOC,cAAc,MAEd,4BAA4B;AACnC,OAAOC,aAAa,MAEb,2BAA2B;AAClC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,SAASC,iBAAiB,QAAQ,oBAAoB;AAGtD,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,wBAAwB,GAAG,GAAG;AA0JpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMR,SAAS,gBAAGF,KAAK,CAACW,UAAU,CACjC,OAYCC,GAAG,KACC;EAAA,IAZJ;IACCC,IAAI,GAAG,MAAM;IACbC,KAAK,GAAG,KAAK;IACbC,QAAQ,GAAG,KAAK;IAChBC,KAAK,EAAEC,SAAS,GAAG,KAAK;IACxBC,SAAS,GAAG,KAAK;IACjBC,QAAQ,GAAG,IAAI;IACfC,YAAY;IACZC,MAAM,GAAIC,KAAkB,iBAAK,oBAAC,eAAe,EAAKA,KAAK,CAAI;IAC/D,GAAGC;EACG,CAAC;EAGR,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAK,KAAKC,SAAS;EAC7C,MAAMC,eAAe,GAAGH,YAAY,GAAGD,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACK,YAAY;EAErE,MAAM;IAAEC,OAAO,EAAEC;EAAQ,CAAC,GAAG9B,KAAK,CAAC+B,MAAM,CACxC,IAAI9B,QAAQ,CAAC+B,KAAK,CAACL,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC,CAC3C;EACD,MAAM;IAAEE,OAAO,EAAEb;EAAM,CAAC,GAAGhB,KAAK,CAAC+B,MAAM,CACtC,IAAI9B,QAAQ,CAAC+B,KAAK,CAACf,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CACrC;EACD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGlC,KAAK,CAACmC,QAAQ,CAAU,KAAK,CAAC;EAC5D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,KAAK,CAACmC,QAAQ,CAElD,GAAG,CAAC;EACN,MAAM,CAACG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,KAAK,CAACmC,QAAQ,CAE9DR,eAAe,CAAC;EAClB;EACA,MAAMF,KAAK,GAAGD,YAAY,GAAGD,IAAI,CAACE,KAAK,GAAGa,iBAAiB;EAE3D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGzC,KAAK,CAACmC,QAAQ,CAIjD;IACFO,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG9C,KAAK,CAACmC,QAAQ,CAG/C;IACFQ,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGhD,KAAK,CAACmC,QAAQ,CAGjD;IACFQ,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAGjD,KAAK,CAAC+B,MAAM,EAA8B;EAExD,MAAMmB,IAAI,GAAGlD,KAAK,CAAC+B,MAAM,EAAsC;EAE/D,MAAM;IAAEoB;EAAM,CAAC,GAAG5B,IAAI,CAAC6B,KAAK,CAACC,SAAS;EAEtCrD,KAAK,CAACsD,mBAAmB,CAAC1C,GAAG,EAAE,OAAO;IACrC2C,KAAK,EAAE;MAAA;MAAA,wBAAML,IAAI,CAACrB,OAAO,kDAAZ,cAAc0B,KAAK,EAAE;IAAA;IAClCC,KAAK,EAAE;MAAA;MAAA,yBAAMN,IAAI,CAACrB,OAAO,mDAAZ,eAAc2B,KAAK,EAAE;IAAA;IAClCC,cAAc,EAAGC,IAAY;MAAA;MAAA,yBAC5BR,IAAI,CAACrB,OAAO,mDAAZ,eAAc4B,cAAc,CAACC,IAAI,CAAC;IAAA;IACnCC,SAAS,EAAE;MAAA;MAAA,OAAM,mBAAAT,IAAI,CAACrB,OAAO,mDAAZ,eAAc8B,SAAS,EAAE,KAAI,KAAK;IAAA;IACnDC,IAAI,EAAE;MAAA;MAAA,yBAAMV,IAAI,CAACrB,OAAO,mDAAZ,eAAc+B,IAAI,EAAE;IAAA;IAChCC,UAAU,EAAE;MAAA;MAAA,yBAAMX,IAAI,CAACrB,OAAO,mDAAZ,eAAc0B,KAAK,EAAE;IAAA;EACxC,CAAC,CAAC,CAAC;EAEHvD,KAAK,CAAC8D,SAAS,CAAC,MAAM;IACrB;IACA,IAAI7C,SAAS,EAAE;MACd;MACAhB,QAAQ,CAAC8D,MAAM,CAAC/C,KAAK,EAAE;QACtBgD,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAEvD,wBAAwB,GAAGyC,KAAK;QAC1C;QACAe,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX,CAAC,MAAM;MACN;MACA;QACClE,QAAQ,CAAC8D,MAAM,CAAC/C,KAAK,EAAE;UACtBgD,OAAO,EAAE,CAAC;UACVC,QAAQ,EAAExD,uBAAuB,GAAG0C,KAAK;UACzC;UACAe,eAAe,EAAE;QAClB,CAAC,CAAC,CAACC,KAAK,EAAE;MACX;IACD;EACD,CAAC,EAAE,CAAClD,SAAS,EAAEkC,KAAK,EAAEnC,KAAK,CAAC,CAAC;EAE7BhB,KAAK,CAAC8D,SAAS,CAAC,MAAM;IACrB;IACA;IACA;IACA,IAAI7B,OAAO,IAAI,CAACV,IAAI,CAAC6C,KAAK,EAAE;MAC3B;MACA;MACA,IAAI7C,IAAI,CAACa,WAAW,EAAE;QACrB;QACA;QACAa,KAAK,CAACpB,OAAO,GAAGwC,UAAU,CACzB,MAAMhC,cAAc,CAACd,IAAI,CAACa,WAAW,CAAC,EACtC,EAAE,CAC2B;MAC/B;IACD,CAAC,MAAM;MACN;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,cAAc,CAAC,GAAG,CAAC;IACpB;IAEA,OAAO,MAAM;MACZ,IAAIY,KAAK,CAACpB,OAAO,EAAE;QAClByC,YAAY,CAACrB,KAAK,CAACpB,OAAO,CAAC;MAC5B;IACD,CAAC;EACF,CAAC,EAAE,CAACI,OAAO,EAAEV,IAAI,CAAC6C,KAAK,EAAE7C,IAAI,CAACa,WAAW,CAAC,CAAC;EAE3CpC,KAAK,CAAC8D,SAAS,CAAC,MAAM;IACrB;IACA;IACA;IACA;IACA,IAAIrC,KAAK,IAAIQ,OAAO,EAAE;MACrB;MACAhC,QAAQ,CAAC8D,MAAM,CAACjC,OAAO,EAAE;QACxBkC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAExD,uBAAuB,GAAG0C,KAAK;QACzC;QACAe,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX,CAAC,MAAM;MACN;MACA;QACClE,QAAQ,CAAC8D,MAAM,CAACjC,OAAO,EAAE;UACxBkC,OAAO,EAAE,CAAC;UACVC,QAAQ,EAAEvD,wBAAwB,GAAGyC,KAAK;UAC1C;UACAe,eAAe,EAAE;QAClB,CAAC,CAAC,CAACC,KAAK,EAAE;MACX;IACD;EACD,CAAC,EAAE,CAAClC,OAAO,EAAER,KAAK,EAAEK,OAAO,EAAEqB,KAAK,CAAC,CAAC;EAEpC,MAAMoB,uBAAuB,GAAIC,KAAwB,IAAK;IAC7D1B,aAAa,CAAC;MACbF,MAAM,EAAE4B,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC9B,MAAM;MACvCD,KAAK,EAAE6B,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC/B;IACjC,CAAC,CAAC;EACH,CAAC;EAED,MAAMgC,wBAAwB,GAAIH,KAAwB,IAAK;IAC9DxB,cAAc,CAAC;MACdL,KAAK,EAAE6B,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC/B,KAAK;MACrCC,MAAM,EAAE4B,KAAK,CAACC,WAAW,CAACC,MAAM,CAAC9B;IAClC,CAAC,CAAC;EACH,CAAC;EAED,MAAMgC,WAAW,GAAIlB,IAAS,IAAK;IAAA;IAClC,IAAI3C,QAAQ,IAAI,CAACI,QAAQ,EAAE;MAC1B;IACD;IAEAe,UAAU,CAAC,IAAI,CAAC;IAEhB,iBAAAX,IAAI,CAACsD,OAAO,kDAAZ,mBAAAtD,IAAI,EAAWmC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMoB,UAAU,GAAIpB,IAAY,IAAK;IAAA;IACpC,IAAI,CAACvC,QAAQ,EAAE;MACd;IACD;IAEAe,UAAU,CAAC,KAAK,CAAC;IACjB,gBAAAX,IAAI,CAACwD,MAAM,iDAAX,kBAAAxD,IAAI,EAAUmC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMsB,gBAAgB,GAAIvD,KAAa,IAAK;IAAA;IAC3C,IAAI,CAACN,QAAQ,IAAIJ,QAAQ,EAAE;MAC1B;IACD;IAEA,IAAI,CAACS,YAAY,EAAE;MAClB;MACAe,oBAAoB,CAACd,KAAK,CAAC;IAC5B;IACA,sBAAAF,IAAI,CAAC0D,YAAY,uDAAjB,wBAAA1D,IAAI,EAAgBE,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMyD,wBAAwB,GAAIC,CAAoB,IAAK;IAC1D1C,cAAc,CAAC;MACdE,KAAK,EAAEwC,CAAC,CAACV,WAAW,CAACC,MAAM,CAAC/B,KAAK;MACjCC,MAAM,EAAEuC,CAAC,CAACV,WAAW,CAACC,MAAM,CAAC9B,MAAM;MACnCF,QAAQ,EAAE;IACX,CAAC,CAAC;EACH,CAAC;EACD,MAAMmB,UAAU,GAAG;IAAA;IAAA,yBAAMX,IAAI,CAACrB,OAAO,mDAAZ,eAAc0B,KAAK,EAAE;EAAA;EAE9C,MAAM;IAAE6B,qBAAqB,GAAG;EAAI,CAAC,GAAG7D,IAAI;EAE5C,IAAIV,IAAI,KAAK,UAAU,EAAE;IACxB,oBACC,oBAAC,iBAAiB;MACjB,KAAK,EAAEC,KAAM;MACb,QAAQ,EAAEC,QAAS;MACnB,KAAK,EAAEE,SAAU;MACjB,SAAS,EAAEC,SAAU;MACrB,QAAQ,EAAEC,QAAS;MACnB,MAAM,EAAEE;IAAO,GACXE,IAAI;MACR,KAAK,EAAEE,KAAM;MACb,WAAW,EAAE;QACZK,OAAO;QACPd,KAAK;QACLiB,OAAO;QACPG,WAAW;QACXX,KAAK;QACLe,WAAW;QACXK,UAAU;QACVE;MACD,CAAE;MACF,QAAQ,EAAGnC,GAAG,IAAK;QAClBsC,IAAI,CAACrB,OAAO,GAAGjB,GAAG;MACnB,CAAE;MACF,OAAO,EAAEgE,WAAY;MACrB,UAAU,EAAEf,UAAW;MACvB,MAAM,EAAEiB,UAAW;MACnB,YAAY,EAAEE,gBAAiB;MAC/B,oBAAoB,EAAEE,wBAAyB;MAC/C,uBAAuB,EAAEX,uBAAwB;MACjD,wBAAwB,EAAEI,wBAAyB;MACnD,qBAAqB,EAAES,qBAAsB;MAC7C,YAAY,EAAEhE;IAAa,GAC1B;EAEJ;EAEA,oBACC,oBAAC,aAAa;IACb,KAAK,EAAEN,KAAM;IACb,QAAQ,EAAEC,QAAS;IACnB,KAAK,EAAEE,SAAU;IACjB,SAAS,EAAEC,SAAU;IACrB,QAAQ,EAAEC,QAAS;IACnB,MAAM,EAAEE;EAAO,GACXE,IAAI;IACR,KAAK,EAAEE,KAAM;IACb,WAAW,EAAE;MACZK,OAAO;MACPd,KAAK;MACLiB,OAAO;MACPG,WAAW;MACXX,KAAK;MACLe,WAAW;MACXK,UAAU;MACVE;IACD,CAAE;IACF,QAAQ,EAAGnC,GAAG,IAAK;MAClBsC,IAAI,CAACrB,OAAO,GAAGjB,GAAG;IACnB,CAAE;IACF,OAAO,EAAEgE,WAAY;IACrB,UAAU,EAAEf,UAAW;IACvB,MAAM,EAAEiB,UAAW;IACnB,YAAY,EAAEE,gBAAiB;IAC/B,oBAAoB,EAAEE,wBAAyB;IAC/C,uBAAuB,EAAEX,uBAAwB;IACjD,wBAAwB,EAAEI,wBAAyB;IACnD,qBAAqB,EAAES,qBAAsB;IAC7C,YAAY,EAAEhE;EAAa,GAC1B;AAEJ,CAAC,CACsB;AACxB;AACAlB,SAAS,CAACmF,IAAI,GAAGhF,aAAa;;AAE9B;AACA;AACAH,SAAS,CAACoF,KAAK,GAAGlF,cAAc;AAEhC,eAAeI,iBAAiB,CAACN,SAAS,CAAC"}