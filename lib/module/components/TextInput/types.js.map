{"version":3,"names":[],"sources":["types.tsx"],"sourcesContent":["import type {\n\tTextInput as NativeTextInput,\n\tAnimated,\n\tTextStyle,\n\tLayoutChangeEvent,\n\tColorValue,\n\tStyleProp,\n\tViewProps,\n} from 'react-native';\n\nimport type { $Omit } from './../../types';\nimport type { Props as TextInputProps } from './TextInput';\n\nexport type TextInputLabelProp = string | React.ReactElement;\n\nexport type RenderProps = {\n\tref: (a?: NativeTextInput | null) => void;\n\tonChangeText?: (a: string) => void;\n\tplaceholder?: string;\n\tplaceholderTextColor?: ColorValue;\n\teditable?: boolean;\n\tselectionColor?: string;\n\tonFocus?: (args: any) => void;\n\tonBlur?: (args: any) => void;\n\tunderlineColorAndroid?: string;\n\tstyle: any;\n\tmultiline?: boolean;\n\tnumberOfLines?: number;\n\tvalue?: string;\n\tadjustsFontSizeToFit?: boolean;\n\ttestID?: string;\n};\ntype TextInputTypesWithoutMode = $Omit<TextInputProps, 'mode'>;\nexport type State = {\n\tlabeled: Animated.Value;\n\terror: Animated.Value;\n\tfocused: boolean;\n\tplaceholder?: string;\n\tvalue?: string;\n\tlabelLayout: { measured: boolean; width: number; height: number };\n\tleftLayout: { height: number | null; width: number | null };\n\trightLayout: { height: number | null; width: number | null };\n\tcontentStyle?: StyleProp<ViewProps>;\n};\nexport type ChildTextInputProps = {\n\tparentState: State;\n\tinnerRef: (ref?: NativeTextInput | null) => void;\n\tonFocus?: (args: any) => void;\n\tonBlur?: (args: any) => void;\n\tforceFocus: () => void;\n\tonChangeText?: (value: string) => void;\n\tonLayoutAnimatedText: (args: any) => void;\n\tonLeftAffixLayoutChange: (event: LayoutChangeEvent) => void;\n\tonRightAffixLayoutChange: (event: LayoutChangeEvent) => void;\n} & TextInputTypesWithoutMode;\nexport type LabelProps = {\n\tmode?: 'flat' | 'outlined';\n\tplaceholderStyle: any;\n\tplaceholderOpacity: any;\n\tbaseLabelTranslateX: number;\n\tbaseLabelTranslateY: number;\n\twiggleOffsetX: number;\n\tlabelScale: number;\n\tfontSize: number;\n\tlineHeight?: number | undefined;\n\tfontWeight: TextStyle['fontWeight'];\n\tfont: any;\n\ttopPosition: number;\n\tpaddingOffset?: { paddingLeft: number; paddingRight: number } | null;\n\tlabelTranslationXOffset?: number;\n\tplaceholderColor: string | null;\n\tbackgroundColor?: ColorValue;\n\tlabel?: TextInputLabelProp | null;\n\thasActiveOutline?: boolean | null;\n\tactiveColor: string;\n\terrorColor?: string;\n\terror?: boolean | null;\n\tonLayoutAnimatedText: (args: any) => void;\n\troundness: number;\n\tmaxFontSizeMultiplier?: number | undefined | null;\n\ttestID?: string;\n\tcontentStyle?: StyleProp<ViewProps>;\n};\nexport type InputLabelProps = {\n\tparentState: State;\n\tlabelProps: LabelProps;\n\tlabelBackground?: any;\n\tmaxFontSizeMultiplier?: number | undefined | null;\n};\n\nexport type LabelBackgroundProps = {\n\tlabelProps: LabelProps;\n\tlabelStyle: any;\n\tparentState: State;\n\tmaxFontSizeMultiplier?: number | undefined | null;\n};\n"],"mappings":""}