{"version":3,"names":["React","Animated","StyleSheet","View","RadioButtonContext","handlePress","isChecked","withInternalTheme","getAndroidSelectionControlColor","TouchableRipple","BORDER_WIDTH","RadioButtonAndroid","disabled","onPress","theme","value","status","testID","rest","current","borderAnim","useRef","Value","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","context","checked","contextValue","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","undefined","event","onValueChange","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","RadioButtonAndroidWithTheme"],"sources":["RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Animated, StyleSheet, View } from 'react-native';\r\n\r\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\r\nimport { handlePress, isChecked } from './utils';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { $RemoveChildren, InternalTheme } from '../../types';\r\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\n\r\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\r\n\t/**\r\n\t * Value of the radio button\r\n\t */\r\n\tvalue: string;\r\n\t/**\r\n\t * Status of radio button.\r\n\t */\r\n\tstatus?: 'checked' | 'unchecked';\r\n\t/**\r\n\t * Whether radio is disabled.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (param?: any) => void;\r\n\t/**\r\n\t * Custom color for unchecked radio.\r\n\t */\r\n\tuncheckedColor?: string;\r\n\t/**\r\n\t * Custom color for radio.\r\n\t */\r\n\tcolor?: string;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * testID to be used on tests.\r\n\t */\r\n\ttestID?: string;\r\n};\r\n\r\nconst BORDER_WIDTH = 2;\r\n\r\n/**\r\n * Radio buttons allow the selection a single option from a set.\r\n * This component follows platform guidelines for Android, but can be used\r\n * on any platform.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/radio-enabled.android.png\" />\r\n *     <figcaption>Enabled</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/radio-disabled.android.png\" />\r\n *     <figcaption>Disabled</figcaption>\r\n *   </figure>\r\n * </div>\r\n */\r\nconst RadioButtonAndroid = ({\r\n\tdisabled,\r\n\tonPress,\r\n\ttheme,\r\n\tvalue,\r\n\tstatus,\r\n\ttestID,\r\n\t...rest\r\n}: Props) => {\r\n\tconst { current: borderAnim } = React.useRef<Animated.Value>(\r\n\t\tnew Animated.Value(BORDER_WIDTH)\r\n\t);\r\n\r\n\tconst { current: radioAnim } = React.useRef<Animated.Value>(\r\n\t\tnew Animated.Value(1)\r\n\t);\r\n\r\n\tconst isFirstRendering = React.useRef<boolean>(true);\r\n\r\n\tconst { scale } = theme.animation;\r\n\r\n\tReact.useEffect(() => {\r\n\t\t// Do not run animation on very first rendering\r\n\t\tif (isFirstRendering.current) {\r\n\t\t\tisFirstRendering.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (status === 'checked') {\r\n\t\t\tradioAnim.setValue(1.2);\r\n\r\n\t\t\tAnimated.timing(radioAnim, {\r\n\t\t\t\ttoValue: 1,\r\n\t\t\t\tduration: 150 * scale,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t}).start();\r\n\t\t} else {\r\n\t\t\tborderAnim.setValue(10);\r\n\r\n\t\t\tAnimated.timing(borderAnim, {\r\n\t\t\t\ttoValue: BORDER_WIDTH,\r\n\t\t\t\tduration: 150 * scale,\r\n\t\t\t\tuseNativeDriver: false,\r\n\t\t\t}).start();\r\n\t\t}\r\n\t}, [status, borderAnim, radioAnim, scale]);\r\n\r\n\treturn (\r\n\t\t<RadioButtonContext.Consumer>\r\n\t\t\t{(context?: RadioButtonContextType) => {\r\n\t\t\t\tconst checked =\r\n\t\t\t\t\tisChecked({\r\n\t\t\t\t\t\tcontextValue: context?.value,\r\n\t\t\t\t\t\tstatus,\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t}) === 'checked';\r\n\r\n\t\t\t\tconst { rippleColor, selectionControlColor } =\r\n\t\t\t\t\tgetAndroidSelectionControlColor({\r\n\t\t\t\t\t\ttheme,\r\n\t\t\t\t\t\tdisabled,\r\n\t\t\t\t\t\tchecked,\r\n\t\t\t\t\t\tcustomColor: rest.color,\r\n\t\t\t\t\t\tcustomUncheckedColor: rest.uncheckedColor,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TouchableRipple\r\n\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\tborderless\r\n\t\t\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\t\t\tonPress={\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t? undefined\r\n\t\t\t\t\t\t\t\t: (event) => {\r\n\t\t\t\t\t\t\t\t\t\thandlePress({\r\n\t\t\t\t\t\t\t\t\t\t\tonPress,\r\n\t\t\t\t\t\t\t\t\t\t\tonValueChange:\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontext?.onValueChange,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\t\tevent,\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taccessibilityRole=\"radio\"\r\n\t\t\t\t\t\taccessibilityState={{ disabled, checked }}\r\n\t\t\t\t\t\taccessibilityLiveRegion=\"polite\"\r\n\t\t\t\t\t\tstyle={styles.container}\r\n\t\t\t\t\t\ttestID={testID}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Animated.View\r\n\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\tstyles.radio,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tborderColor: selectionControlColor,\r\n\t\t\t\t\t\t\t\t\tborderWidth: borderAnim,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{checked ? (\r\n\t\t\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\tStyleSheet.absoluteFill,\r\n\t\t\t\t\t\t\t\t\t\tstyles.radioContainer,\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Animated.View\r\n\t\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\t\tstyles.dot,\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectionControlColor,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttransform: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ scale: radioAnim },\r\n\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t</TouchableRipple>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</RadioButtonContext.Consumer>\r\n\t);\r\n};\r\n\r\nRadioButtonAndroid.displayName = 'RadioButton.Android';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tborderRadius: 18,\r\n\t},\r\n\tradioContainer: {\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tradio: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tborderRadius: 10,\r\n\t\tmargin: 8,\r\n\t},\r\n\tdot: {\r\n\t\theight: 10,\r\n\t\twidth: 10,\r\n\t\tborderRadius: 5,\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(RadioButtonAndroid);\r\n\r\n// @component-docs ignore-next-line\r\nconst RadioButtonAndroidWithTheme = withInternalTheme(RadioButtonAndroid);\r\n// @component-docs ignore-next-line\r\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,QAAQ,cAAc;AAEzD,SAASC,kBAAkB,QAAgC,oBAAoB;AAC/E,SAASC,WAAW,EAAEC,SAAS,QAAQ,SAAS;AAChD,SAASC,iBAAiB,QAAQ,oBAAoB;AAEtD,SAASC,+BAA+B,QAAQ,mBAAmB;AACnE,OAAOC,eAAe,MAAM,oCAAoC;AAqChE,MAAMC,YAAY,GAAG,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG,QAQd;EAAA,IARe;IAC3BC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,MAAM;IACN,GAAGC;EACG,CAAC;EACP,MAAM;IAAEC,OAAO,EAAEC;EAAW,CAAC,GAAGpB,KAAK,CAACqB,MAAM,CAC3C,IAAIpB,QAAQ,CAACqB,KAAK,CAACZ,YAAY,CAAC,CAChC;EAED,MAAM;IAAES,OAAO,EAAEI;EAAU,CAAC,GAAGvB,KAAK,CAACqB,MAAM,CAC1C,IAAIpB,QAAQ,CAACqB,KAAK,CAAC,CAAC,CAAC,CACrB;EAED,MAAME,gBAAgB,GAAGxB,KAAK,CAACqB,MAAM,CAAU,IAAI,CAAC;EAEpD,MAAM;IAAEI;EAAM,CAAC,GAAGX,KAAK,CAACY,SAAS;EAEjC1B,KAAK,CAAC2B,SAAS,CAAC,MAAM;IACrB;IACA,IAAIH,gBAAgB,CAACL,OAAO,EAAE;MAC7BK,gBAAgB,CAACL,OAAO,GAAG,KAAK;MAChC;IACD;IAEA,IAAIH,MAAM,KAAK,SAAS,EAAE;MACzBO,SAAS,CAACK,QAAQ,CAAC,GAAG,CAAC;MAEvB3B,QAAQ,CAAC4B,MAAM,CAACN,SAAS,EAAE;QAC1BO,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,GAAG,GAAGN,KAAK;QACrBO,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX,CAAC,MAAM;MACNb,UAAU,CAACQ,QAAQ,CAAC,EAAE,CAAC;MAEvB3B,QAAQ,CAAC4B,MAAM,CAACT,UAAU,EAAE;QAC3BU,OAAO,EAAEpB,YAAY;QACrBqB,QAAQ,EAAE,GAAG,GAAGN,KAAK;QACrBO,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX;EACD,CAAC,EAAE,CAACjB,MAAM,EAAEI,UAAU,EAAEG,SAAS,EAAEE,KAAK,CAAC,CAAC;EAE1C,oBACC,oBAAC,kBAAkB,CAAC,QAAQ,QACzBS,OAAgC,IAAK;IACtC,MAAMC,OAAO,GACZ7B,SAAS,CAAC;MACT8B,YAAY,EAAEF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEnB,KAAK;MAC5BC,MAAM;MACND;IACD,CAAC,CAAC,KAAK,SAAS;IAEjB,MAAM;MAAEsB,WAAW;MAAEC;IAAsB,CAAC,GAC3C9B,+BAA+B,CAAC;MAC/BM,KAAK;MACLF,QAAQ;MACRuB,OAAO;MACPI,WAAW,EAAErB,IAAI,CAACsB,KAAK;MACvBC,oBAAoB,EAAEvB,IAAI,CAACwB;IAC5B,CAAC,CAAC;IAEH,oBACC,oBAAC,eAAe,eACXxB,IAAI;MACR,UAAU;MACV,WAAW,EAAEmB,WAAY;MACzB,OAAO,EACNzB,QAAQ,GACL+B,SAAS,GACRC,KAAK,IAAK;QACXvC,WAAW,CAAC;UACXQ,OAAO;UACPgC,aAAa,EACZX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,aAAa;UACvB9B,KAAK;UACL6B;QACD,CAAC,CAAC;MACF,CACH;MACD,iBAAiB,EAAC,OAAO;MACzB,kBAAkB,EAAE;QAAEhC,QAAQ;QAAEuB;MAAQ,CAAE;MAC1C,uBAAuB,EAAC,QAAQ;MAChC,KAAK,EAAEW,MAAM,CAACC,SAAU;MACxB,MAAM,EAAE9B;IAAO,iBAEf,oBAAC,QAAQ,CAAC,IAAI;MACb,KAAK,EAAE,CACN6B,MAAM,CAACE,KAAK,EACZ;QACCC,WAAW,EAAEX,qBAAqB;QAClCY,WAAW,EAAE9B;MACd,CAAC;IACA,GAEDe,OAAO,gBACP,oBAAC,IAAI;MACJ,KAAK,EAAE,CACNjC,UAAU,CAACiD,YAAY,EACvBL,MAAM,CAACM,cAAc;IACpB,gBAEF,oBAAC,QAAQ,CAAC,IAAI;MACb,KAAK,EAAE,CACNN,MAAM,CAACO,GAAG,EACV;QACCC,eAAe,EACdhB,qBAAqB;QACtBiB,SAAS,EAAE,CACV;UAAE9B,KAAK,EAAEF;QAAU,CAAC;MAEtB,CAAC;IACA,EACD,CACI,GACJ,IAAI,CACO,CACC;EAEpB,CAAC,CAC4B;AAEhC,CAAC;AAEDZ,kBAAkB,CAAC6C,WAAW,GAAG,qBAAqB;AAEtD,MAAMV,MAAM,GAAG5C,UAAU,CAACuD,MAAM,CAAC;EAChCV,SAAS,EAAE;IACVW,YAAY,EAAE;EACf,CAAC;EACDN,cAAc,EAAE;IACfO,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACjB,CAAC;EACDZ,KAAK,EAAE;IACNa,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTJ,YAAY,EAAE,EAAE;IAChBK,MAAM,EAAE;EACT,CAAC;EACDV,GAAG,EAAE;IACJQ,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTJ,YAAY,EAAE;EACf;AACD,CAAC,CAAC;AAEF,eAAenD,iBAAiB,CAACI,kBAAkB,CAAC;;AAEpD;AACA,MAAMqD,2BAA2B,GAAGzD,iBAAiB,CAACI,kBAAkB,CAAC;AACzE;AACA,SAASqD,2BAA2B,IAAIrD,kBAAkB"}