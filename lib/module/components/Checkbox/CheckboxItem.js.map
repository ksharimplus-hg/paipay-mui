{"version":3,"names":["React","StyleSheet","View","Checkbox","CheckboxAndroid","CheckboxIOS","withInternalTheme","TouchableRipple","Text","CheckboxItem","style","status","label","onPress","labelStyle","theme","testID","mode","position","accessibilityLabel","disabled","labelVariant","props","checkboxProps","isLeading","checkbox","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","color","checked","styles","container","font","displayName","CheckboxItemWithTheme","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["CheckboxItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tGestureResponderEvent,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tTextStyle,\r\n\tView,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport Checkbox from './Checkbox';\r\nimport CheckboxAndroid from './CheckboxAndroid';\r\nimport CheckboxIOS from './CheckboxIOS';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { InternalTheme, MD3TypescaleKey } from '../../types';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = {\r\n\t/**\r\n\t * Status of checkbox.\r\n\t */\r\n\tstatus: 'checked' | 'unchecked' | 'indeterminate';\r\n\t/**\r\n\t * Whether checkbox is disabled.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Label to be displayed on the item.\r\n\t */\r\n\tlabel: string;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\r\n\t */\r\n\taccessibilityLabel?: string;\r\n\t/**\r\n\t * Custom color for unchecked checkbox.\r\n\t */\r\n\tuncheckedColor?: string;\r\n\t/**\r\n\t * Custom color for checkbox.\r\n\t */\r\n\tcolor?: string;\r\n\t/**\r\n\t * Additional styles for container View.\r\n\t */\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * Style that is passed to Label element.\r\n\t */\r\n\tlabelStyle?: StyleProp<TextStyle>;\r\n\t/**\r\n\t * @supported Available in v5.x with theme version 3\r\n\t *\r\n\t * Label text variant defines appropriate text styles for type role and its size.\r\n\t * Available variants:\r\n\t *\r\n\t *  Display: `displayLarge`, `displayMedium`, `displaySmall`\r\n\t *\r\n\t *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\r\n\t *\r\n\t *  Title: `titleLarge`, `titleMedium`, `titleSmall`\r\n\t *\r\n\t *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\r\n\t *\r\n\t *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\r\n\t */\r\n\tlabelVariant?: keyof typeof MD3TypescaleKey;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * testID to be used on tests.\r\n\t */\r\n\ttestID?: string;\r\n\t/**\r\n\t * Checkbox control position.\r\n\t */\r\n\tposition?: 'leading' | 'trailing';\r\n\t/**\r\n\t * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\r\n\t * Left undefined `<Checkbox />` will be used.\r\n\t */\r\n\tmode?: 'android' | 'ios';\r\n};\r\n\r\n/**\r\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Checkbox } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <View>\r\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\r\n *   </View>\r\n * );\r\n *\r\n * export default MyComponent;\r\n *```\r\n */\r\n\r\nconst CheckboxItem = ({\r\n\tstyle,\r\n\tstatus,\r\n\tlabel,\r\n\tonPress,\r\n\tlabelStyle,\r\n\ttheme,\r\n\ttestID,\r\n\tmode,\r\n\tposition = 'trailing',\r\n\taccessibilityLabel = label,\r\n\tdisabled,\r\n\tlabelVariant = 'bodyLarge',\r\n\t...props\r\n}: Props) => {\r\n\tconst checkboxProps = { ...props, status, theme, disabled };\r\n\tconst isLeading = position === 'leading';\r\n\tlet checkbox;\r\n\r\n\tif (mode === 'android') {\r\n\t\tcheckbox = <CheckboxAndroid {...checkboxProps} />;\r\n\t} else if (mode === 'ios') {\r\n\t\tcheckbox = <CheckboxIOS {...checkboxProps} />;\r\n\t} else {\r\n\t\tcheckbox = <Checkbox {...checkboxProps} />;\r\n\t}\r\n\r\n\tconst textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\r\n\tconst disabledTextColor = theme.isV3\r\n\t\t? theme.colors.onSurfaceDisabled\r\n\t\t: theme.colors.disabled;\r\n\tconst textAlign = isLeading ? 'right' : 'left';\r\n\r\n\tconst computedStyle = {\r\n\t\tcolor: disabled ? disabledTextColor : textColor,\r\n\t\ttextAlign,\r\n\t} as TextStyle;\r\n\r\n\treturn (\r\n\t\t<TouchableRipple\r\n\t\t\taccessibilityLabel={accessibilityLabel}\r\n\t\t\taccessibilityRole=\"checkbox\"\r\n\t\t\taccessibilityState={{\r\n\t\t\t\tchecked: status === 'checked',\r\n\t\t\t\tdisabled,\r\n\t\t\t}}\r\n\t\t\tonPress={onPress}\r\n\t\t\ttestID={testID}\r\n\t\t\tdisabled={disabled}\r\n\t\t>\r\n\t\t\t<View\r\n\t\t\t\tstyle={[styles.container, style]}\r\n\t\t\t\tpointerEvents=\"none\"\r\n\t\t\t\timportantForAccessibility=\"no-hide-descendants\"\r\n\t\t\t>\r\n\t\t\t\t{isLeading && checkbox}\r\n\t\t\t\t<Text\r\n\t\t\t\t\tvariant={labelVariant}\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tstyles.label,\r\n\t\t\t\t\t\t!theme.isV3 && styles.font,\r\n\t\t\t\t\t\tcomputedStyle,\r\n\t\t\t\t\t\tlabelStyle,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</Text>\r\n\t\t\t\t{!isLeading && checkbox}\r\n\t\t\t</View>\r\n\t\t</TouchableRipple>\r\n\t);\r\n};\r\n\r\nCheckboxItem.displayName = 'Checkbox.Item';\r\n\r\nexport default withInternalTheme(CheckboxItem);\r\n\r\n// @component-docs ignore-next-line\r\nconst CheckboxItemWithTheme = withInternalTheme(CheckboxItem);\r\n// @component-docs ignore-next-line\r\nexport { CheckboxItemWithTheme as CheckboxItem };\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpaddingVertical: 8,\r\n\t\tpaddingHorizontal: 16,\r\n\t},\r\n\tlabel: {\r\n\t\tflexShrink: 1,\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tfont: {\r\n\t\tfontSize: 16,\r\n\t},\r\n});\r\n"],"mappings":"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"}