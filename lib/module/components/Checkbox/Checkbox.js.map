{"version":3,"names":["React","Platform","CheckboxAndroid","CheckboxIOS","withInternalTheme","Checkbox","props","OS","CheckboxWithTheme"],"sources":["Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\n\nexport type Props = {\n\t/**\n\t * Status of checkbox.\n\t */\n\tstatus: 'checked' | 'unchecked' | 'indeterminate';\n\t/**\n\t * Whether checkbox is disabled.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\t/**\n\t * Custom color for unchecked checkbox.\n\t */\n\tuncheckedColor?: string;\n\t/**\n\t * Custom color for checkbox.\n\t */\n\tcolor?: string;\n\t/**\n\t * @optional\n\t */\n\ttheme: InternalTheme;\n\t/**\n\t * testID to be used on tests.\n\t */\n\ttestID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = (props: Props) =>\n\tPlatform.OS === 'ios' ? (\n\t\t<CheckboxIOS {...props} />\n\t) : (\n\t\t<CheckboxAndroid {...props} />\n\t);\n\nexport default withInternalTheme(Checkbox);\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = withInternalTheme(Checkbox);\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAgCC,QAAQ,QAAQ,cAAc;AAE9D,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,oBAAoB;AAkCtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAIC,KAAY,IAC7BL,QAAQ,CAACM,EAAE,KAAK,KAAK,gBACpB,oBAAC,WAAW,EAAKD,KAAK,CAAI,gBAE1B,oBAAC,eAAe,EAAKA,KAAK,CAC1B;AAEF,eAAeF,iBAAiB,CAACC,QAAQ,CAAC;;AAE1C;AACA,MAAMG,iBAAiB,GAAGJ,iBAAiB,CAACC,QAAQ,CAAC;AACrD;AACA,SAASG,iBAAiB,IAAIH,QAAQ"}