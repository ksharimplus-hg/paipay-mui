{"version":3,"names":["React","StyleSheet","getIconButtonColor","useInternalTheme","CrossFadeIcon","Icon","Surface","TouchableRipple","PADDING","IconButton","forwardRef","ref","icon","iconColor","customIconColor","containerColor","customContainerColor","size","accessibilityLabel","disabled","onPress","selected","animated","mode","style","rest","theme","isV3","IconComponent","rippleColor","backgroundColor","borderColor","buttonSize","borderWidth","borderRadius","flatten","borderStyles","width","height","styles","container","elevation","touchable","supported","top","left","bottom","right","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity"],"sources":["IconButton.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tGestureResponderEvent,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tViewStyle,\r\n\tView,\r\n} from 'react-native';\r\n\r\nimport { getIconButtonColor } from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { $RemoveChildren, ThemeProp } from '../../types';\r\nimport CrossFadeIcon from '../CrossFadeIcon';\r\nimport Icon, { IconSource } from '../Icon';\r\nimport Surface from '../Surface';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\n\r\nconst PADDING = 8;\r\n\r\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\r\n\r\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\r\n\t/**\r\n\t * Icon to display.\r\n\t */\r\n\ticon: IconSource;\r\n\t/**\r\n\t * @supported Available in v5.x with theme version 3\r\n\t * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\r\n\t */\r\n\tmode?: IconButtonMode;\r\n\t/**\r\n\t * @renamed Renamed from 'color' to 'iconColor' in v5.x\r\n\t * Color of the icon.\r\n\t */\r\n\ticonColor?: string;\r\n\t/**\r\n\t * Background color of the icon container.\r\n\t */\r\n\tcontainerColor?: string;\r\n\t/**\r\n\t * @supported Available in v5.x with theme version 3\r\n\t * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\r\n\t */\r\n\tselected?: boolean;\r\n\t/**\r\n\t * Size of the icon.\r\n\t */\r\n\tsize?: number;\r\n\t/**\r\n\t * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Whether an icon change is animated.\r\n\t */\r\n\tanimated?: boolean;\r\n\t/**\r\n\t * Accessibility label for the button. This is read by the screen reader when the user taps the button.\r\n\t */\r\n\taccessibilityLabel?: string;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (e: GestureResponderEvent) => void;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\tref?: React.RefObject<View>;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme?: ThemeProp;\r\n};\r\n\r\n/**\r\n * An icon button is a button which displays only an icon without a label.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/icon-button-1.png\" />\r\n *     <figcaption>Default icon button</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/icon-button-2.png\" />\r\n *     <figcaption>Contained icon button</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/icon-button-3.png\" />\r\n *     <figcaption>Contained-tonal icon button</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/icon-button-4.png\" />\r\n *     <figcaption>Outlined icon button</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { IconButton, MD3Colors } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <IconButton\r\n *     icon=\"camera\"\r\n *     iconColor={MD3Colors.error50}\r\n *     size={20}\r\n *     onPress={() => console.log('Pressed')}\r\n *   />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n *\r\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\r\n */\r\nconst IconButton = React.forwardRef<View, Props>(\r\n\t(\r\n\t\t{\r\n\t\t\ticon,\r\n\t\t\ticonColor: customIconColor,\r\n\t\t\tcontainerColor: customContainerColor,\r\n\t\t\tsize = 24,\r\n\t\t\taccessibilityLabel,\r\n\t\t\tdisabled,\r\n\t\t\tonPress,\r\n\t\t\tselected = false,\r\n\t\t\tanimated = false,\r\n\t\t\tmode,\r\n\t\t\tstyle,\r\n\t\t\t...rest\r\n\t\t}: Props,\r\n\t\tref\r\n\t) => {\r\n\t\tconst theme = useInternalTheme();\r\n\t\tconst { isV3 } = theme;\r\n\r\n\t\tconst IconComponent = animated ? CrossFadeIcon : Icon;\r\n\r\n\t\tconst { iconColor, rippleColor, backgroundColor, borderColor } =\r\n\t\t\tgetIconButtonColor({\r\n\t\t\t\ttheme,\r\n\t\t\t\tdisabled,\r\n\t\t\t\tselected,\r\n\t\t\t\tmode,\r\n\t\t\t\tcustomIconColor,\r\n\t\t\t\tcustomContainerColor,\r\n\t\t\t});\r\n\r\n\t\tconst buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\r\n\r\n\t\tconst {\r\n\t\t\tborderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\r\n\t\t\tborderRadius = buttonSize / 2,\r\n\t\t} = (StyleSheet.flatten(style) || {}) as ViewStyle;\r\n\r\n\t\tconst borderStyles = {\r\n\t\t\tborderWidth,\r\n\t\t\tborderRadius,\r\n\t\t\tborderColor,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<Surface\r\n\t\t\t\tref={ref}\r\n\t\t\t\tstyle={\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbackgroundColor,\r\n\t\t\t\t\t\t\twidth: buttonSize,\r\n\t\t\t\t\t\t\theight: buttonSize,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyles.container,\r\n\t\t\t\t\t\tborderStyles,\r\n\t\t\t\t\t\t!isV3 && disabled && styles.disabled,\r\n\t\t\t\t\t\tstyle,\r\n\t\t\t\t\t] as StyleProp<ViewStyle>\r\n\t\t\t\t}\r\n\t\t\t\t{...(isV3 && { elevation: 0 })}\r\n\t\t\t>\r\n\t\t\t\t<TouchableRipple\r\n\t\t\t\t\tborderless\r\n\t\t\t\t\tcentered\r\n\t\t\t\t\tonPress={onPress}\r\n\t\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\t\taccessibilityLabel={accessibilityLabel}\r\n\t\t\t\t\tstyle={[styles.touchable, { borderRadius }]}\r\n\t\t\t\t\t/* @ts-ignore */\r\n\t\t\t\t\taccessibilityTraits={\r\n\t\t\t\t\t\tdisabled ? ['button', 'disabled'] : 'button'\r\n\t\t\t\t\t}\r\n\t\t\t\t\taccessibilityComponentType=\"button\"\r\n\t\t\t\t\taccessibilityRole=\"button\"\r\n\t\t\t\t\taccessibilityState={{ disabled }}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\thitSlop={\r\n\t\t\t\t\t\tTouchableRipple.supported\r\n\t\t\t\t\t\t\t? { top: 10, left: 10, bottom: 10, right: 10 }\r\n\t\t\t\t\t\t\t: { top: 6, left: 6, bottom: 6, right: 6 }\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconComponent\r\n\t\t\t\t\t\tcolor={iconColor}\r\n\t\t\t\t\t\tsource={icon}\r\n\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TouchableRipple>\r\n\t\t\t</Surface>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\toverflow: 'hidden',\r\n\t\tmargin: 6,\r\n\t\televation: 0,\r\n\t},\r\n\ttouchable: {\r\n\t\tflexGrow: 1,\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tdisabled: {\r\n\t\topacity: 0.32,\r\n\t},\r\n});\r\n\r\nexport default IconButton;\r\n"],"mappings":"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"}