{"version":3,"names":["React","StyleSheet","View","useInternalTheme","DialogScrollArea","props","theme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","hairlineWidth","borderBottomWidth","styles","container","v3Container","style","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n\t/**\r\n\t * Content of the `DialogScrollArea`.\r\n\t */\r\n\tchildren: React.ReactNode;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\n/**\r\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\r\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"small\" src=\"screenshots/dialog-scroll-area.gif\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ScrollView } from 'react-native';\r\n * import { Dialog, Portal, Text } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(false);\r\n *\r\n *   const hideDialog = () => setVisible(false);\r\n *\r\n *   return (\r\n *     <Portal>\r\n *       <Dialog visible={visible} onDismiss={hideDialog}>\r\n *         <Dialog.ScrollArea>\r\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\r\n *             <Text>This is a scrollable area</Text>\r\n *           </ScrollView>\r\n *         </Dialog.ScrollArea>\r\n *       </Dialog>\r\n *     </Portal>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst DialogScrollArea = (props: Props) => {\r\n\tconst theme = useInternalTheme();\r\n\tconst borderStyles = {\r\n\t\tborderColor: theme.isV3\r\n\t\t\t? theme.colors.surfaceVariant\r\n\t\t\t: 'rgba(0, 0, 0, .12)',\r\n\t\tborderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\r\n\t\tborderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\r\n\t};\r\n\treturn (\r\n\t\t<View\r\n\t\t\t{...props}\r\n\t\t\tstyle={[\r\n\t\t\t\tstyles.container,\r\n\t\t\t\tborderStyles,\r\n\t\t\t\ttheme.isV3 && styles.v3Container,\r\n\t\t\t\tprops.style,\r\n\t\t\t]}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingHorizontal: 24,\r\n\t\tflexGrow: 1,\r\n\t\tflexShrink: 1,\r\n\t},\r\n\tv3Container: {\r\n\t\tmarginBottom: 24,\r\n\t},\r\n});\r\n\r\nexport default DialogScrollArea;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAoBC,UAAU,EAAEC,IAAI,QAAmB,cAAc;AAErE,SAASC,gBAAgB,QAAQ,oBAAoB;AAUrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,KAAY,IAAK;EAC1C,MAAMC,KAAK,GAAGH,gBAAgB,EAAE;EAChC,MAAMI,YAAY,GAAG;IACpBC,WAAW,EAAEF,KAAK,CAACG,IAAI,GACpBH,KAAK,CAACI,MAAM,CAACC,cAAc,GAC3B,oBAAoB;IACvBC,cAAc,EAAEN,KAAK,CAACG,IAAI,GAAG,CAAC,GAAGR,UAAU,CAACY,aAAa;IACzDC,iBAAiB,EAAER,KAAK,CAACG,IAAI,GAAG,CAAC,GAAGR,UAAU,CAACY;EAChD,CAAC;EACD,oBACC,oBAAC,IAAI,eACAR,KAAK;IACT,KAAK,EAAE,CACNU,MAAM,CAACC,SAAS,EAChBT,YAAY,EACZD,KAAK,CAACG,IAAI,IAAIM,MAAM,CAACE,WAAW,EAChCZ,KAAK,CAACa,KAAK;EACV,IAEDb,KAAK,CAACc,QAAQ,CACT;AAET,CAAC;AAEDf,gBAAgB,CAACgB,WAAW,GAAG,mBAAmB;AAElD,MAAML,MAAM,GAAGd,UAAU,CAACoB,MAAM,CAAC;EAChCL,SAAS,EAAE;IACVM,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE;EACb,CAAC;EACDP,WAAW,EAAE;IACZQ,YAAY,EAAE;EACf;AACD,CAAC,CAAC;AAEF,eAAerB,gBAAgB"}