{"version":3,"names":["React","I18nManager","StyleSheet","Text","NativeText","useInternalTheme","MD3TypescaleKey","ref","style","variant","theme","initialTheme","rest","root","useRef","writingDirection","getConstants","isRTL","useImperativeHandle","setNativeProps","args","current","isV3","stylesByVariant","Object","keys","reduce","acc","key","fontSize","fontWeight","lineHeight","letterSpacing","fontFamily","fonts","color","colors","onSurface","styleForVariant","styles","text","font","default","regular","textStyle","create","textAlign","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n\tI18nManager,\n\tStyleProp,\n\tStyleSheet,\n\tText as NativeText,\n\tTextStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { Font, MD3TypescaleKey, ThemeProp } from '../../types';\n\nexport type Props = React.ComponentProps<typeof NativeText> & {\n\t/**\n\t * @supported Available in v5.x with theme version 3\n\t *\n\t * Variant defines appropriate text styles for type role and its size.\n\t * Available variants:\n\t *\n\t *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n\t *\n\t *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n\t *\n\t *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n\t *\n\t *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n\t *\n\t *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n\t */\n\tvariant?: keyof typeof MD3TypescaleKey;\n\tchildren: React.ReactNode;\n\ttheme?: ThemeProp;\n\tstyle?: StyleProp<TextStyle>;\n};\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/typography.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n\t{ style, variant, theme: initialTheme, ...rest }: Props,\n\tref\n) => {\n\tconst root = React.useRef<NativeText | null>(null);\n\t// FIXME: destructure it in TS 4.6+\n\tconst theme = useInternalTheme(initialTheme);\n\tconst writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n\tReact.useImperativeHandle(ref, () => ({\n\t\tsetNativeProps: (args: Object) => root.current?.setNativeProps(args),\n\t}));\n\n\tif (theme.isV3 && variant) {\n\t\tconst stylesByVariant = Object.keys(MD3TypescaleKey).reduce(\n\t\t\t(acc, key) => {\n\t\t\t\tconst {\n\t\t\t\t\tfontSize,\n\t\t\t\t\tfontWeight,\n\t\t\t\t\tlineHeight,\n\t\t\t\t\tletterSpacing,\n\t\t\t\t\tfontFamily,\n\t\t\t\t} = theme.fonts[key as keyof typeof MD3TypescaleKey];\n\n\t\t\t\treturn {\n\t\t\t\t\t...acc,\n\t\t\t\t\t[key]: {\n\t\t\t\t\t\tfontFamily,\n\t\t\t\t\t\tfontSize,\n\t\t\t\t\t\tfontWeight,\n\t\t\t\t\t\tlineHeight,\n\t\t\t\t\t\tletterSpacing,\n\t\t\t\t\t\tcolor: theme.colors.onSurface,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t},\n\t\t\t{} as {\n\t\t\t\t[key in MD3TypescaleKey]: {\n\t\t\t\t\tfontSize: number;\n\t\t\t\t\tfontWeight: Font['fontWeight'];\n\t\t\t\t\tlineHeight: number;\n\t\t\t\t\tletterSpacing: number;\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tconst styleForVariant = stylesByVariant[variant];\n\n\t\treturn (\n\t\t\t<NativeText\n\t\t\t\tref={root}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyleForVariant,\n\t\t\t\t\tstyles.text,\n\t\t\t\t\t{ writingDirection },\n\t\t\t\t\tstyle,\n\t\t\t\t]}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\tconst font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n\t\tconst textStyle = {\n\t\t\t...font,\n\t\t\tcolor: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n\t\t};\n\t\treturn (\n\t\t\t<NativeText\n\t\t\t\t{...rest}\n\t\t\t\tref={root}\n\t\t\t\tstyle={[styles.text, textStyle, { writingDirection }, style]}\n\t\t\t/>\n\t\t);\n\t}\n};\n\nconst styles = StyleSheet.create({\n\ttext: {\n\t\ttextAlign: 'left',\n\t},\n});\n\nexport default React.forwardRef(Text);\n"],"mappings":"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"}