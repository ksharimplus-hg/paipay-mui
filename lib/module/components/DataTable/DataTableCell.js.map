{"version":3,"names":["React","StyleSheet","TouchableRipple","Text","DataTableCell","children","textStyle","style","numeric","rest","styles","container","right","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n\tStyleSheet,\n\tStyleProp,\n\tViewStyle,\n\tTextStyle,\n\tGestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n\t/**\n\t * Content of the `DataTableCell`.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * Align the text to the right. Generally monetary or number fields are aligned to right.\n\t */\n\tnumeric?: boolean;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\tstyle?: StyleProp<ViewStyle>;\n\t/**\n\t * Text content style of the `DataTableCell`.\n\t */\n\ttextStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({\n\tchildren,\n\ttextStyle,\n\tstyle,\n\tnumeric,\n\t...rest\n}: Props) => (\n\t<TouchableRipple\n\t\t{...rest}\n\t\tstyle={[styles.container, numeric && styles.right, style]}\n\t>\n\t\t<Text style={textStyle} numberOfLines={1}>\n\t\t\t{children}\n\t\t</Text>\n\t</TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t},\n\n\tright: {\n\t\tjustifyContent: 'flex-end',\n\t},\n});\n\nexport default DataTableCell;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACCC,UAAU,QAKJ,cAAc;AAGrB,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,IAAI,MAAM,oBAAoB;AAsBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;EAAA,IAAC;IACtBC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,OAAO;IACP,GAAGC;EACG,CAAC;EAAA,oBACP,oBAAC,eAAe,eACXA,IAAI;IACR,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEH,OAAO,IAAIE,MAAM,CAACE,KAAK,EAAEL,KAAK;EAAE,iBAE1D,oBAAC,IAAI;IAAC,KAAK,EAAED,SAAU;IAAC,aAAa,EAAE;EAAE,GACvCD,QAAQ,CACH,CACU;AAAA,CAClB;AAEDD,aAAa,CAACS,WAAW,GAAG,gBAAgB;AAE5C,MAAMH,MAAM,GAAGT,UAAU,CAACa,MAAM,CAAC;EAChCH,SAAS,EAAE;IACVI,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACb,CAAC;EAEDL,KAAK,EAAE;IACNM,cAAc,EAAE;EACjB;AACD,CAAC,CAAC;AAEF,eAAed,aAAa"}