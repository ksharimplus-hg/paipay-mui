{"version":3,"names":["React","StyleSheet","View","ToggleButton","ToggleButtonGroup","ToggleButtonRow","value","onValueChange","children","style","count","Children","styles","row","map","child","i","type","cloneElement","button","first","last","middle","props","displayName","create","flexDirection","borderWidth","hairlineWidth","borderTopRightRadius","borderBottomRightRadius","borderRadius","borderLeftWidth","borderTopLeftRadius","borderBottomLeftRadius"],"sources":["ToggleButtonRow.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\r\n\r\nimport ToggleButton from './ToggleButton';\r\nimport ToggleButtonGroup from './ToggleButtonGroup';\r\n\r\nexport type Props = {\r\n\t/**\r\n\t * Function to execute on selection change.\r\n\t */\r\n\tonValueChange: (value: string) => void;\r\n\t/**\r\n\t * Value of the currently selected toggle button.\r\n\t */\r\n\tvalue: string;\r\n\t/**\r\n\t * React elements containing toggle buttons.\r\n\t */\r\n\tchildren: React.ReactNode;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\n/**\r\n * Toggle button row renders a group of toggle buttons in a row.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/toggle-button-row.gif\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ToggleButton } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [value, setValue] = React.useState('left');\r\n *\r\n *   return (\r\n *     <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\r\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\r\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\r\n *     </ToggleButton.Row>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n *\r\n *```\r\n */\r\nconst ToggleButtonRow = ({ value, onValueChange, children, style }: Props) => {\r\n\tconst count = React.Children.count(children);\r\n\r\n\treturn (\r\n\t\t<ToggleButtonGroup value={value} onValueChange={onValueChange}>\r\n\t\t\t<View style={[styles.row, style]}>\r\n\t\t\t\t{React.Children.map(children, (child, i) => {\r\n\t\t\t\t\t/* @ts-ignore */\r\n\t\t\t\t\tif (child && child.type === ToggleButton) {\r\n\t\t\t\t\t\t/* @ts-ignore */\r\n\t\t\t\t\t\treturn React.cloneElement(child, {\r\n\t\t\t\t\t\t\tstyle: [\r\n\t\t\t\t\t\t\t\tstyles.button,\r\n\t\t\t\t\t\t\t\ti === 0\r\n\t\t\t\t\t\t\t\t\t? styles.first\r\n\t\t\t\t\t\t\t\t\t: i === count - 1\r\n\t\t\t\t\t\t\t\t\t? styles.last\r\n\t\t\t\t\t\t\t\t\t: styles.middle,\r\n\t\t\t\t\t\t\t\t/* @ts-ignore */\r\n\t\t\t\t\t\t\t\tchild.props.style,\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn child;\r\n\t\t\t\t})}\r\n\t\t\t</View>\r\n\t\t</ToggleButtonGroup>\r\n\t);\r\n};\r\n\r\nToggleButtonRow.displayName = 'ToggleButton.Row';\r\n\r\nconst styles = StyleSheet.create({\r\n\trow: {\r\n\t\tflexDirection: 'row',\r\n\t},\r\n\tbutton: {\r\n\t\tborderWidth: StyleSheet.hairlineWidth,\r\n\t},\r\n\r\n\tfirst: {\r\n\t\tborderTopRightRadius: 0,\r\n\t\tborderBottomRightRadius: 0,\r\n\t},\r\n\r\n\tmiddle: {\r\n\t\tborderRadius: 0,\r\n\t\tborderLeftWidth: 0,\r\n\t},\r\n\r\n\tlast: {\r\n\t\tborderLeftWidth: 0,\r\n\t\tborderTopLeftRadius: 0,\r\n\t\tborderBottomLeftRadius: 0,\r\n\t},\r\n});\r\n\r\nexport default ToggleButtonRow;\r\n\r\n// @component-docs ignore-next-line\r\nexport { ToggleButtonRow };\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,IAAI,QAA8B,cAAc;AAErE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AAkBnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,QAAsD;EAAA,IAArD;IAAEC,KAAK;IAAEC,aAAa;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EACxE,MAAMC,KAAK,GAAGV,KAAK,CAACW,QAAQ,CAACD,KAAK,CAACF,QAAQ,CAAC;EAE5C,oBACC,oBAAC,iBAAiB;IAAC,KAAK,EAAEF,KAAM;IAAC,aAAa,EAAEC;EAAc,gBAC7D,oBAAC,IAAI;IAAC,KAAK,EAAE,CAACK,MAAM,CAACC,GAAG,EAAEJ,KAAK;EAAE,GAC/BT,KAAK,CAACW,QAAQ,CAACG,GAAG,CAACN,QAAQ,EAAE,CAACO,KAAK,EAAEC,CAAC,KAAK;IAC3C;IACA,IAAID,KAAK,IAAIA,KAAK,CAACE,IAAI,KAAKd,YAAY,EAAE;MACzC;MACA,oBAAOH,KAAK,CAACkB,YAAY,CAACH,KAAK,EAAE;QAChCN,KAAK,EAAE,CACNG,MAAM,CAACO,MAAM,EACbH,CAAC,KAAK,CAAC,GACJJ,MAAM,CAACQ,KAAK,GACZJ,CAAC,KAAKN,KAAK,GAAG,CAAC,GACfE,MAAM,CAACS,IAAI,GACXT,MAAM,CAACU,MAAM,EAChB;QACAP,KAAK,CAACQ,KAAK,CAACd,KAAK;MAEnB,CAAC,CAAC;IACH;IAEA,OAAOM,KAAK;EACb,CAAC,CAAC,CACI,CACY;AAEtB,CAAC;AAEDV,eAAe,CAACmB,WAAW,GAAG,kBAAkB;AAEhD,MAAMZ,MAAM,GAAGX,UAAU,CAACwB,MAAM,CAAC;EAChCZ,GAAG,EAAE;IACJa,aAAa,EAAE;EAChB,CAAC;EACDP,MAAM,EAAE;IACPQ,WAAW,EAAE1B,UAAU,CAAC2B;EACzB,CAAC;EAEDR,KAAK,EAAE;IACNS,oBAAoB,EAAE,CAAC;IACvBC,uBAAuB,EAAE;EAC1B,CAAC;EAEDR,MAAM,EAAE;IACPS,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EAClB,CAAC;EAEDX,IAAI,EAAE;IACLW,eAAe,EAAE,CAAC;IAClBC,mBAAmB,EAAE,CAAC;IACtBC,sBAAsB,EAAE;EACzB;AACD,CAAC,CAAC;AAEF,eAAe7B,eAAe;;AAE9B;AACA,SAASA,eAAe"}