{"version":3,"names":["React","ToggleButtonGroupContext","createContext","ToggleButtonGroup","value","onValueChange","children","displayName"],"sources":["ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport type Props<Value = string> = {\n\t/**\n\t * Function to execute on selection change.\n\t */\n\tonValueChange: (value: Value) => void;\n\t/**\n\t * Value of the currently selected toggle button.\n\t */\n\tvalue: Value | null;\n\t/**\n\t * React elements containing toggle buttons.\n\t */\n\tchildren: React.ReactNode;\n};\n\ntype ToggleButtonContextType<Value> = {\n\tvalue: Value | null;\n\tonValueChange: (item: Value) => void;\n};\n\nexport const ToggleButtonGroupContext =\n\t//@ts-expect-error: TS can't ensure the type from Group to children\n\tReact.createContext<ToggleButtonContextType>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out <a href=\"toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-group.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst ToggleButtonGroup = <Value = string,>({\n\tvalue,\n\tonValueChange,\n\tchildren,\n}: Props<Value>) => (\n\t<ToggleButtonGroupContext.Provider\n\t\tvalue={{\n\t\t\tvalue,\n\t\t\tonValueChange,\n\t\t}}\n\t>\n\t\t{children}\n\t</ToggleButtonGroupContext.Provider>\n);\n\nToggleButtonGroup.displayName = 'ToggleButton.Group';\n\nexport default ToggleButtonGroup;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonGroup };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAsB9B,OAAO,MAAMC,wBAAwB;AAAA;AACpC;AACAD,KAAK,CAACE,aAAa,CAA0B,IAAI,CAAQ;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG;EAAA,IAAkB;IAC3CC,KAAK;IACLC,aAAa;IACbC;EACa,CAAC;EAAA,oBACd,oBAAC,wBAAwB,CAAC,QAAQ;IACjC,KAAK,EAAE;MACNF,KAAK;MACLC;IACD;EAAE,GAEDC,QAAQ,CAC0B;AAAA,CACpC;AAEDH,iBAAiB,CAACI,WAAW,GAAG,oBAAoB;AAEpD,eAAeJ,iBAAiB;;AAEhC;AACA,SAASA,iBAAiB"}