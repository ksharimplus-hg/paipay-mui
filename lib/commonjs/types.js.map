{"version":3,"names":["MD3TypescaleKey","ElevationLevels"],"sources":["types.tsx"],"sourcesContent":["import type * as React from 'react';\r\n\r\nimport type { $DeepPartial } from '@callstack/react-theme-provider';\r\n\r\nexport type Font = {\r\n\tfontFamily: string;\r\n\tfontWeight?:\r\n\t\t| 'normal'\r\n\t\t| 'bold'\r\n\t\t| '100'\r\n\t\t| '200'\r\n\t\t| '300'\r\n\t\t| '400'\r\n\t\t| '500'\r\n\t\t| '600'\r\n\t\t| '700'\r\n\t\t| '800'\r\n\t\t| '900';\r\n};\r\n\r\nexport type Fonts = {\r\n\tregular: Font;\r\n\tmedium: Font;\r\n\tlight: Font;\r\n\tthin: Font;\r\n};\r\n\r\ntype Mode = 'adaptive' | 'exact';\r\n\r\nexport type MD2Colors = {\r\n\tprimary: string;\r\n\tbackground: string;\r\n\tsurface: string;\r\n\taccent: string;\r\n\terror: string;\r\n\ttext: string;\r\n\tonSurface: string;\r\n\tdisabled: string;\r\n\tplaceholder: string;\r\n\tbackdrop: string;\r\n\tnotification: string;\r\n\ttooltip: string;\r\n};\r\n\r\nexport type MD3Colors = {\r\n\tprimary: string;\r\n\tprimaryContainer: string;\r\n\tsecondary: string;\r\n\tsecondaryContainer: string;\r\n\ttertiary: string;\r\n\ttertiaryContainer: string;\r\n\tsurface: string;\r\n\tsurfaceVariant: string;\r\n\tsurfaceDisabled: string;\r\n\tbackground: string;\r\n\terror: string;\r\n\terrorContainer: string;\r\n\tonPrimary: string;\r\n\tonPrimaryContainer: string;\r\n\tonSecondary: string;\r\n\tonSecondaryContainer: string;\r\n\tonTertiary: string;\r\n\tonTertiaryContainer: string;\r\n\tonSurface: string;\r\n\tonSurfaceVariant: string;\r\n\tonSurfaceDisabled: string;\r\n\tonError: string;\r\n\tonErrorContainer: string;\r\n\tonBackground: string;\r\n\toutline: string;\r\n\toutlineVariant: string;\r\n\tinverseSurface: string;\r\n\tinverseOnSurface: string;\r\n\tinversePrimary: string;\r\n\tshadow: string;\r\n\tscrim: string;\r\n\tbackdrop: string;\r\n\televation: MD3ElevationColors;\r\n};\r\n\r\nexport type MD3AndroidColors = {\r\n\tprimary: number;\r\n\tprimaryContainer: number;\r\n\tsecondary: number;\r\n\tsecondaryContainer: number;\r\n\ttertiary: number;\r\n\ttertiaryContainer: number;\r\n\tsurface: number;\r\n\tsurfaceVariant: number;\r\n\tbackground: number;\r\n\terror: number;\r\n\terrorContainer: number;\r\n\tonPrimary: number;\r\n\tonPrimaryContainer: number;\r\n\tonSecondary: number;\r\n\tonSecondaryContainer: number;\r\n\tonTertiary: number;\r\n\tonTertiaryContainer: number;\r\n\tonSurface: number;\r\n\tonSurfaceVariant: number;\r\n\tonError: number;\r\n\tonErrorContainer: number;\r\n\tonBackground: number;\r\n\toutline: number;\r\n\toutlineVariant: number;\r\n\tinverseSurface: number;\r\n\tinverseOnSurface: number;\r\n\tinversePrimary: number;\r\n\tshadow: number;\r\n\tscrim: number;\r\n};\r\n\r\nexport type MD3Palette = {};\r\n\r\nexport type ThemeProp = $DeepPartial<InternalTheme>;\r\n\r\nexport type ThemeBase = {\r\n\tdark: boolean;\r\n\tmode?: Mode;\r\n\troundness: number;\r\n\tanimation: {\r\n\t\tscale: number;\r\n\t};\r\n};\r\n\r\nexport type MD3Theme = ThemeBase & {\r\n\tversion: 3;\r\n\tisV3: true;\r\n\tcolors: MD3Colors;\r\n\tfonts: MD3Typescale;\r\n};\r\n\r\nexport type MD2Theme = ThemeBase & {\r\n\tversion: 2;\r\n\tisV3: false;\r\n\tcolors: MD2Colors;\r\n\tfonts: Fonts;\r\n};\r\n\r\nexport type InternalTheme = MD2Theme | MD3Theme;\r\n\r\n// MD3 types\r\nexport enum MD3TypescaleKey {\r\n\tdisplayLarge = 'displayLarge',\r\n\tdisplayMedium = 'displayMedium',\r\n\tdisplaySmall = 'displaySmall',\r\n\r\n\theadlineLarge = 'headlineLarge',\r\n\theadlineMedium = 'headlineMedium',\r\n\theadlineSmall = 'headlineSmall',\r\n\r\n\ttitleLarge = 'titleLarge',\r\n\ttitleMedium = 'titleMedium',\r\n\ttitleSmall = 'titleSmall',\r\n\r\n\tlabelLarge = 'labelLarge',\r\n\tlabelMedium = 'labelMedium',\r\n\tlabelSmall = 'labelSmall',\r\n\r\n\tbodyLarge = 'bodyLarge',\r\n\tbodyMedium = 'bodyMedium',\r\n\tbodySmall = 'bodySmall',\r\n}\r\n\r\nexport type MD3Type = {\r\n\tfontFamily: string;\r\n\tletterSpacing: number;\r\n\tfontWeight: Font['fontWeight'];\r\n\tlineHeight: number;\r\n\tfontSize: number;\r\n};\r\n\r\nexport type MD3Typescale =\r\n\t| {\r\n\t\t\t[key in MD3TypescaleKey]: MD3Type;\r\n\t  } & {\r\n\t\t\t['default']: Omit<MD3Type, 'lineHeight' | 'fontSize'>;\r\n\t  };\r\n\r\nexport type MD3Elevation = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\nexport enum ElevationLevels {\r\n\t'level0',\r\n\t'level1',\r\n\t'level2',\r\n\t'level3',\r\n\t'level4',\r\n\t'level5',\r\n}\r\n\r\nexport type MD3ElevationColors = {\r\n\t[key in keyof typeof ElevationLevels]: string;\r\n};\r\n\r\nexport type $Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\r\nexport type $RemoveChildren<T extends React.ComponentType<any>> = $Omit<\r\n\tReact.ComponentPropsWithoutRef<T>,\r\n\t'children'\r\n>;\r\n\r\nexport type EllipsizeProp = 'head' | 'middle' | 'tail' | 'clip';\r\n\r\nexport type NavigationTheme = {\r\n\tdark: boolean;\r\n\tcolors: {\r\n\t\tprimary: string;\r\n\t\tbackground: string;\r\n\t\tcard: string;\r\n\t\ttext: string;\r\n\t\tborder: string;\r\n\t\tnotification: string;\r\n\t};\r\n};\r\n"],"mappings":";;;;;;AA6IA;AAAA,IACYA,eAAe;AAAA;AAAA,WAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,+BAAfA,eAAe;AAAA,IAuCfC,eAAe;AAAA;AAAA,WAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;AAAA,GAAfA,eAAe,+BAAfA,eAAe"}