{"version":3,"names":["screenWidth","Dimensions","get","width","screenHeight","height","widthPercentageToDP","widthPercent","elemWidth","parseFloat","PixelRatio","roundToNearestPixel","heightPercentageToDP","heightPercent","elemHeight"],"sources":["responsive.ts"],"sourcesContent":["import { Dimensions, PixelRatio } from 'react-native';\r\n\r\nlet screenWidth = Dimensions.get('window').width;\r\nlet screenHeight = Dimensions.get('window').height;\r\n\r\nconst widthPercentageToDP = (widthPercent: number | string) => {\r\n\tconst elemWidth =\r\n\t\ttypeof widthPercent === 'number'\r\n\t\t\t? widthPercent\r\n\t\t\t: parseFloat(widthPercent);\r\n\treturn PixelRatio.roundToNearestPixel((screenWidth * elemWidth) / 100);\r\n};\r\n\r\nconst heightPercentageToDP = (heightPercent: number | string) => {\r\n\tconst elemHeight =\r\n\t\ttypeof heightPercent === 'number'\r\n\t\t\t? heightPercent\r\n\t\t\t: parseFloat(heightPercent);\r\n\treturn PixelRatio.roundToNearestPixel((screenHeight * elemHeight) / 100);\r\n};\r\n\r\nexport { widthPercentageToDP, heightPercentageToDP };\r\n"],"mappings":";;;;;;AAAA;AAEA,IAAIA,WAAW,GAAGC,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAChD,IAAIC,YAAY,GAAGH,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AAElD,MAAMC,mBAAmB,GAAIC,YAA6B,IAAK;EAC9D,MAAMC,SAAS,GACd,OAAOD,YAAY,KAAK,QAAQ,GAC7BA,YAAY,GACZE,UAAU,CAACF,YAAY,CAAC;EAC5B,OAAOG,uBAAU,CAACC,mBAAmB,CAAEX,WAAW,GAAGQ,SAAS,GAAI,GAAG,CAAC;AACvE,CAAC;AAAC;AAEF,MAAMI,oBAAoB,GAAIC,aAA8B,IAAK;EAChE,MAAMC,UAAU,GACf,OAAOD,aAAa,KAAK,QAAQ,GAC9BA,aAAa,GACbJ,UAAU,CAACI,aAAa,CAAC;EAC7B,OAAOH,uBAAU,CAACC,mBAAmB,CAAEP,YAAY,GAAGU,UAAU,GAAI,GAAG,CAAC;AACzE,CAAC;AAAC"}