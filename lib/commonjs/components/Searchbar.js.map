{"version":3,"names":["Searchbar","React","forwardRef","ref","clearAccessibilityLabel","clearIcon","icon","iconColor","customIconColor","inputStyle","onIconPress","placeholder","searchAccessibilityLabel","elevation","style","theme","value","loading","testID","rest","root","useRef","useImperativeHandle","input","current","focus","clear","setNativeProps","args","isFocused","blur","noop","Error","handleClearPress","onChangeText","colors","roundness","dark","isV3","textColor","onSurface","text","color","alpha","rgb","string","rippleColor","borderRadius","styles","container","size","I18nManager","getConstants","isRTL","fonts","default","regular","Platform","select","web","outline","primary","loader","StyleSheet","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","margin","withInternalTheme"],"sources":["Searchbar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tAnimated,\r\n\tGestureResponderEvent,\r\n\tI18nManager,\r\n\tPlatform,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tTextInput,\r\n\tTextInputProps,\r\n\tTextStyle,\r\n\tView,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport ActivityIndicator from './ActivityIndicator';\r\nimport type { IconSource } from './Icon';\r\nimport IconButton from './IconButton/IconButton';\r\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\r\nimport Surface from './Surface';\r\nimport { withInternalTheme } from '../core/theming';\r\nimport type { InternalTheme } from '../types';\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof TextInput> & {\r\n\t/**\r\n\t * Accessibility label for the button. This is read by the screen reader when the user taps the button.\r\n\t */\r\n\tclearAccessibilityLabel?: string;\r\n\t/**\r\n\t * Accessibility label for the button. This is read by the screen reader when the user taps the button.\r\n\t */\r\n\tsearchAccessibilityLabel?: string;\r\n\t/**\r\n\t * Hint text shown when the input is empty.\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * The value of the text input.\r\n\t */\r\n\tvalue: string;\r\n\t/**\r\n\t * Icon name for the left icon button (see `onIconPress`).\r\n\t */\r\n\ticon?: IconSource;\r\n\t/**\r\n\t * Callback that is called when the text input's text changes.\r\n\t */\r\n\tonChangeText?: (query: string) => void;\r\n\t/**\r\n\t * Callback to execute if we want the left icon to act as button.\r\n\t */\r\n\tonIconPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * @supported Available in v5.x with theme version 3\r\n\t * Changes Searchbar shadow and background on iOS and Android.\r\n\t */\r\n\televation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\r\n\t/**\r\n\t * Set style of the TextInput component inside the searchbar\r\n\t */\r\n\tinputStyle?: StyleProp<TextStyle>;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * Custom color for icon, default will be derived from theme\r\n\t */\r\n\ticonColor?: string;\r\n\t/**\r\n\t * Custom icon for clear button, default will be icon close\r\n\t */\r\n\tclearIcon?: IconSource;\r\n\t/**\r\n\t * Custom flag for replacing clear button with activity indicator.\r\n\t */\r\n\tloading?: Boolean;\r\n\t/**\r\n\t * TestID used for testing purposes\r\n\t */\r\n\ttestID?: string;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n};\r\n\r\ntype TextInputHandles = Pick<\r\n\tTextInput,\r\n\t'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus'\r\n>;\r\n\r\n/**\r\n * Searchbar is a simple input box where users can type search queries.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"small\" src=\"screenshots/searchbar.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Searchbar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [searchQuery, setSearchQuery] = React.useState('');\r\n *\r\n *   const onChangeSearch = query => setSearchQuery(query);\r\n *\r\n *   return (\r\n *     <Searchbar\r\n *       placeholder=\"Search\"\r\n *       onChangeText={onChangeSearch}\r\n *       value={searchQuery}\r\n *     />\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n\r\n * ```\r\n */\r\nconst Searchbar = React.forwardRef<TextInputHandles, Props>(\r\n\t(\r\n\t\t{\r\n\t\t\tclearAccessibilityLabel = 'clear',\r\n\t\t\tclearIcon,\r\n\t\t\ticon,\r\n\t\t\ticonColor: customIconColor,\r\n\t\t\tinputStyle,\r\n\t\t\tonIconPress,\r\n\t\t\tplaceholder,\r\n\t\t\tsearchAccessibilityLabel = 'search',\r\n\t\t\televation = 1,\r\n\t\t\tstyle,\r\n\t\t\ttheme,\r\n\t\t\tvalue,\r\n\t\t\tloading = false,\r\n\t\t\ttestID = 'search-bar',\r\n\t\t\t...rest\r\n\t\t}: Props,\r\n\t\tref\r\n\t) => {\r\n\t\tconst root = React.useRef<TextInput>(null);\r\n\r\n\t\tReact.useImperativeHandle(ref, () => {\r\n\t\t\tconst input = root.current;\r\n\r\n\t\t\tif (input) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tfocus: () => input.focus(),\r\n\t\t\t\t\tclear: () => input.clear(),\r\n\t\t\t\t\tsetNativeProps: (args: TextInputProps) =>\r\n\t\t\t\t\t\tinput.setNativeProps(args),\r\n\t\t\t\t\tisFocused: () => input.isFocused(),\r\n\t\t\t\t\tblur: () => input.blur(),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst noop = () => {\r\n\t\t\t\tthrow new Error('TextInput is not available');\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tfocus: noop,\r\n\t\t\t\tclear: noop,\r\n\t\t\t\tsetNativeProps: noop,\r\n\t\t\t\tisFocused: noop,\r\n\t\t\t\tblur: noop,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst handleClearPress = () => {\r\n\t\t\troot.current?.clear();\r\n\t\t\trest.onChangeText?.('');\r\n\t\t};\r\n\r\n\t\tconst { colors, roundness, dark, isV3 } = theme;\r\n\t\tconst textColor = isV3 ? theme.colors.onSurface : theme.colors.text;\r\n\t\tconst iconColor =\r\n\t\t\tcustomIconColor ||\r\n\t\t\t(dark ? textColor : color(textColor).alpha(0.54).rgb().string());\r\n\t\tconst rippleColor = color(textColor).alpha(0.32).rgb().string();\r\n\r\n\t\treturn (\r\n\t\t\t<Surface\r\n\t\t\t\tstyle={[\r\n\t\t\t\t\t{ borderRadius: roundness },\r\n\t\t\t\t\t!isV3 && styles.elevation,\r\n\t\t\t\t\tstyles.container,\r\n\t\t\t\t\tstyle,\r\n\t\t\t\t]}\r\n\t\t\t\t{...(theme.isV3 && { elevation })}\r\n\t\t\t>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taccessibilityRole=\"button\"\r\n\t\t\t\t\tborderless\r\n\t\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\t\tonPress={onIconPress}\r\n\t\t\t\t\ticonColor={iconColor}\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\ticon ||\r\n\t\t\t\t\t\t(({ size, color }) => (\r\n\t\t\t\t\t\t\t<MaterialCommunityIcon\r\n\t\t\t\t\t\t\t\tname=\"magnify\"\r\n\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t\tdirection={\r\n\t\t\t\t\t\t\t\t\tI18nManager.getConstants().isRTL\r\n\t\t\t\t\t\t\t\t\t\t? 'rtl'\r\n\t\t\t\t\t\t\t\t\t\t: 'ltr'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\taccessibilityLabel={searchAccessibilityLabel}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tstyles.input,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolor: textColor,\r\n\t\t\t\t\t\t\t...(theme.isV3\r\n\t\t\t\t\t\t\t\t? theme.fonts.default\r\n\t\t\t\t\t\t\t\t: theme.fonts.regular),\r\n\t\t\t\t\t\t\t...Platform.select({ web: { outline: 'none' } }),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinputStyle,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tplaceholder={placeholder || ''}\r\n\t\t\t\t\tplaceholderTextColor={\r\n\t\t\t\t\t\ttheme.isV3\r\n\t\t\t\t\t\t\t? theme.colors.onSurface\r\n\t\t\t\t\t\t\t: theme.colors?.placeholder\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselectionColor={colors?.primary}\r\n\t\t\t\t\tunderlineColorAndroid=\"transparent\"\r\n\t\t\t\t\treturnKeyType=\"search\"\r\n\t\t\t\t\tkeyboardAppearance={dark ? 'dark' : 'light'}\r\n\t\t\t\t\taccessibilityRole=\"search\"\r\n\t\t\t\t\tref={root}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\ttestID={testID}\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t/>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<ActivityIndicator\r\n\t\t\t\t\t\ttestID=\"activity-indicator\"\r\n\t\t\t\t\t\tstyle={styles.loader}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Clear icon should be always rendered within Searchbar â€“ it's transparent,\r\n\t\t\t\t\t// without touch events, when there is no value. It's done to avoid issues\r\n\t\t\t\t\t// with the abruptly stopping ripple effect and changing bar width on web,\r\n\t\t\t\t\t// when clearing the value.\r\n\t\t\t\t\t<View\r\n\t\t\t\t\t\tpointerEvents={value ? 'auto' : 'none'}\r\n\t\t\t\t\t\ttestID={`${testID}-icon-wrapper`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tborderless\r\n\t\t\t\t\t\t\taccessibilityLabel={clearAccessibilityLabel}\r\n\t\t\t\t\t\t\ticonColor={\r\n\t\t\t\t\t\t\t\tvalue ? iconColor : 'rgba(255, 255, 255, 0)'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\t\t\t\tonPress={handleClearPress}\r\n\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\tclearIcon ||\r\n\t\t\t\t\t\t\t\t(({ size, color }) => (\r\n\t\t\t\t\t\t\t\t\t<MaterialCommunityIcon\r\n\t\t\t\t\t\t\t\t\t\tname=\"close\"\r\n\t\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t\t\t\tdirection={\r\n\t\t\t\t\t\t\t\t\t\t\tI18nManager.getConstants().isRTL\r\n\t\t\t\t\t\t\t\t\t\t\t\t? 'rtl'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 'ltr'\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\taccessibilityRole=\"button\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t)}\r\n\t\t\t</Surface>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tinput: {\r\n\t\tflex: 1,\r\n\t\tfontSize: 18,\r\n\t\tpaddingLeft: 8,\r\n\t\talignSelf: 'stretch',\r\n\t\ttextAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\r\n\t\tminWidth: 0,\r\n\t},\r\n\televation: {\r\n\t\televation: 4,\r\n\t},\r\n\tloader: {\r\n\t\tmargin: 10,\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(Searchbar);\r\n"],"mappings":"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"}