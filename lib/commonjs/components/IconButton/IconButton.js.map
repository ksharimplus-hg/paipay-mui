{"version":3,"names":["PADDING","IconButton","React","forwardRef","ref","icon","iconColor","customIconColor","containerColor","customContainerColor","size","accessibilityLabel","disabled","onPress","selected","animated","mode","style","rest","theme","useInternalTheme","isV3","IconComponent","CrossFadeIcon","Icon","rippleColor","backgroundColor","borderColor","getIconButtonColor","buttonSize","borderWidth","borderRadius","StyleSheet","flatten","borderStyles","width","height","styles","container","elevation","touchable","TouchableRipple","supported","top","left","bottom","right","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity"],"sources":["IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n\tGestureResponderEvent,\n\tStyleProp,\n\tStyleSheet,\n\tViewStyle,\n\tView,\n} from 'react-native';\n\nimport { getIconButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n\t/**\n\t * Icon to display.\n\t */\n\ticon: IconSource;\n\t/**\n\t * @supported Available in v5.x with theme version 3\n\t * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n\t */\n\tmode?: IconButtonMode;\n\t/**\n\t * @renamed Renamed from 'color' to 'iconColor' in v5.x\n\t * Color of the icon.\n\t */\n\ticonColor?: string;\n\t/**\n\t * Background color of the icon container.\n\t */\n\tcontainerColor?: string;\n\t/**\n\t * @supported Available in v5.x with theme version 3\n\t * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n\t */\n\tselected?: boolean;\n\t/**\n\t * Size of the icon.\n\t */\n\tsize?: number;\n\t/**\n\t * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Whether an icon change is animated.\n\t */\n\tanimated?: boolean;\n\t/**\n\t * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n\t */\n\taccessibilityLabel?: string;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\tstyle?: StyleProp<ViewStyle>;\n\tref?: React.RefObject<View>;\n\t/**\n\t * @optional\n\t */\n\ttheme?: ThemeProp;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-1.png\" />\n *     <figcaption>Default icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-2.png\" />\n *     <figcaption>Contained icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-3.png\" />\n *     <figcaption>Contained-tonal icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-4.png\" />\n *     <figcaption>Outlined icon button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst IconButton = React.forwardRef<View, Props>(\n\t(\n\t\t{\n\t\t\ticon,\n\t\t\ticonColor: customIconColor,\n\t\t\tcontainerColor: customContainerColor,\n\t\t\tsize = 24,\n\t\t\taccessibilityLabel,\n\t\t\tdisabled,\n\t\t\tonPress,\n\t\t\tselected = false,\n\t\t\tanimated = false,\n\t\t\tmode,\n\t\t\tstyle,\n\t\t\t...rest\n\t\t}: Props,\n\t\tref\n\t) => {\n\t\tconst theme = useInternalTheme();\n\t\tconst { isV3 } = theme;\n\n\t\tconst IconComponent = animated ? CrossFadeIcon : Icon;\n\n\t\tconst { iconColor, rippleColor, backgroundColor, borderColor } =\n\t\t\tgetIconButtonColor({\n\t\t\t\ttheme,\n\t\t\t\tdisabled,\n\t\t\t\tselected,\n\t\t\t\tmode,\n\t\t\t\tcustomIconColor,\n\t\t\t\tcustomContainerColor,\n\t\t\t});\n\n\t\tconst buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n\t\tconst {\n\t\t\tborderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\n\t\t\tborderRadius = buttonSize / 2,\n\t\t} = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n\t\tconst borderStyles = {\n\t\t\tborderWidth,\n\t\t\tborderRadius,\n\t\t\tborderColor,\n\t\t};\n\n\t\treturn (\n\t\t\t<Surface\n\t\t\t\tref={ref}\n\t\t\t\tstyle={\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\t\twidth: buttonSize,\n\t\t\t\t\t\t\theight: buttonSize,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstyles.container,\n\t\t\t\t\t\tborderStyles,\n\t\t\t\t\t\t!isV3 && disabled && styles.disabled,\n\t\t\t\t\t\tstyle,\n\t\t\t\t\t] as StyleProp<ViewStyle>\n\t\t\t\t}\n\t\t\t\t{...(isV3 && { elevation: 0 })}\n\t\t\t>\n\t\t\t\t<TouchableRipple\n\t\t\t\t\tborderless\n\t\t\t\t\tcentered\n\t\t\t\t\tonPress={onPress}\n\t\t\t\t\trippleColor={rippleColor}\n\t\t\t\t\taccessibilityLabel={accessibilityLabel}\n\t\t\t\t\tstyle={[styles.touchable, { borderRadius }]}\n\t\t\t\t\t/* @ts-ignore */\n\t\t\t\t\taccessibilityTraits={\n\t\t\t\t\t\tdisabled ? ['button', 'disabled'] : 'button'\n\t\t\t\t\t}\n\t\t\t\t\taccessibilityComponentType=\"button\"\n\t\t\t\t\taccessibilityRole=\"button\"\n\t\t\t\t\taccessibilityState={{ disabled }}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\thitSlop={\n\t\t\t\t\t\tTouchableRipple.supported\n\t\t\t\t\t\t\t? { top: 10, left: 10, bottom: 10, right: 10 }\n\t\t\t\t\t\t\t: { top: 6, left: 6, bottom: 6, right: 6 }\n\t\t\t\t\t}\n\t\t\t\t\t{...rest}\n\t\t\t\t>\n\t\t\t\t\t<IconComponent\n\t\t\t\t\t\tcolor={iconColor}\n\t\t\t\t\t\tsource={icon}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t/>\n\t\t\t\t</TouchableRipple>\n\t\t\t</Surface>\n\t\t);\n\t}\n);\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\toverflow: 'hidden',\n\t\tmargin: 6,\n\t\televation: 0,\n\t},\n\ttouchable: {\n\t\tflexGrow: 1,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tdisabled: {\n\t\topacity: 0.32,\n\t},\n});\n\nexport default IconButton;\n"],"mappings":";;;;;;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAAiE;AAAA;AAAA;AAAA;AAEjE,MAAMA,OAAO,GAAG,CAAC;AAwDjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,gBAAGC,KAAK,CAACC,UAAU,CAClC,OAeCC,GAAG,KACC;EAAA,IAfJ;IACCC,IAAI;IACJC,SAAS,EAAEC,eAAe;IAC1BC,cAAc,EAAEC,oBAAoB;IACpCC,IAAI,GAAG,EAAE;IACTC,kBAAkB;IAClBC,QAAQ;IACRC,OAAO;IACPC,QAAQ,GAAG,KAAK;IAChBC,QAAQ,GAAG,KAAK;IAChBC,IAAI;IACJC,KAAK;IACL,GAAGC;EACG,CAAC;EAGR,MAAMC,KAAK,GAAG,IAAAC,yBAAgB,GAAE;EAChC,MAAM;IAAEC;EAAK,CAAC,GAAGF,KAAK;EAEtB,MAAMG,aAAa,GAAGP,QAAQ,GAAGQ,sBAAa,GAAGC,aAAI;EAErD,MAAM;IAAElB,SAAS;IAAEmB,WAAW;IAAEC,eAAe;IAAEC;EAAY,CAAC,GAC7D,IAAAC,yBAAkB,EAAC;IAClBT,KAAK;IACLP,QAAQ;IACRE,QAAQ;IACRE,IAAI;IACJT,eAAe;IACfE;EACD,CAAC,CAAC;EAEH,MAAMoB,UAAU,GAAGR,IAAI,GAAGX,IAAI,GAAG,CAAC,GAAGV,OAAO,GAAGU,IAAI,GAAG,GAAG;EAEzD,MAAM;IACLoB,WAAW,GAAGT,IAAI,IAAIL,IAAI,KAAK,UAAU,IAAI,CAACF,QAAQ,GAAG,CAAC,GAAG,CAAC;IAC9DiB,YAAY,GAAGF,UAAU,GAAG;EAC7B,CAAC,GAAIG,uBAAU,CAACC,OAAO,CAAChB,KAAK,CAAC,IAAI,CAAC,CAAe;EAElD,MAAMiB,YAAY,GAAG;IACpBJ,WAAW;IACXC,YAAY;IACZJ;EACD,CAAC;EAED,oBACC,oBAAC,gBAAO;IACP,GAAG,EAAEvB,GAAI;IACT,KAAK,EACJ,CACC;MACCsB,eAAe;MACfS,KAAK,EAAEN,UAAU;MACjBO,MAAM,EAAEP;IACT,CAAC,EACDQ,MAAM,CAACC,SAAS,EAChBJ,YAAY,EACZ,CAACb,IAAI,IAAIT,QAAQ,IAAIyB,MAAM,CAACzB,QAAQ,EACpCK,KAAK;EAEN,GACII,IAAI,IAAI;IAAEkB,SAAS,EAAE;EAAE,CAAC,gBAE7B,oBAAC,wBAAe;IACf,UAAU;IACV,QAAQ;IACR,OAAO,EAAE1B,OAAQ;IACjB,WAAW,EAAEY,WAAY;IACzB,kBAAkB,EAAEd,kBAAmB;IACvC,KAAK,EAAE,CAAC0B,MAAM,CAACG,SAAS,EAAE;MAAET;IAAa,CAAC;IAC1C;IACA,mBAAmB,EAClBnB,QAAQ,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,QACpC;IACD,0BAA0B,EAAC,QAAQ;IACnC,iBAAiB,EAAC,QAAQ;IAC1B,kBAAkB,EAAE;MAAEA;IAAS,CAAE;IACjC,QAAQ,EAAEA,QAAS;IACnB,OAAO,EACN6B,wBAAe,CAACC,SAAS,GACtB;MAAEC,GAAG,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,GAC5C;MAAEH,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE;EAC1C,GACG5B,IAAI,gBAER,oBAAC,aAAa;IACb,KAAK,EAAEZ,SAAU;IACjB,MAAM,EAAED,IAAK;IACb,IAAI,EAAEK;EAAK,EACV,CACe,CACT;AAEZ,CAAC,CACD;AAED,MAAM2B,MAAM,GAAGL,uBAAU,CAACe,MAAM,CAAC;EAChCT,SAAS,EAAE;IACVU,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,CAAC;IACTV,SAAS,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACVU,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACb,CAAC;EACDxC,QAAQ,EAAE;IACTyC,OAAO,EAAE;EACV;AACD,CAAC,CAAC;AAAC,eAEYpD,UAAU;AAAA"}