{"version":3,"names":["CheckboxIOS","status","disabled","onPress","theme","testID","rest","checked","indeterminate","checkedColor","rippleColor","getSelectionControlIOSColor","customColor","color","icon","styles","container","opacity","displayName","StyleSheet","create","borderRadius","padding","withInternalTheme","CheckboxIOSWithTheme"],"sources":["CheckboxIOS.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\r\n\r\nimport { getSelectionControlIOSColor } from './utils';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { $RemoveChildren, InternalTheme } from '../../types';\r\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\n\r\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\r\n\t/**\r\n\t * Status of checkbox.\r\n\t */\r\n\tstatus: 'checked' | 'unchecked' | 'indeterminate';\r\n\t/**\r\n\t * Whether checkbox is disabled.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * Custom color for checkbox.\r\n\t */\r\n\tcolor?: string;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * testID to be used on tests.\r\n\t */\r\n\ttestID?: string;\r\n};\r\n\r\n/**\r\n * Checkboxes allow the selection of multiple options from a set.\r\n * This component follows platform guidelines for iOS, but can be used\r\n * on any platform.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\r\n *     <figcaption>Enabled</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\r\n *     <figcaption>Disabled</figcaption>\r\n *   </figure>\r\n * </div>\r\n */\r\nconst CheckboxIOS = ({\r\n\tstatus,\r\n\tdisabled,\r\n\tonPress,\r\n\ttheme,\r\n\ttestID,\r\n\t...rest\r\n}: Props) => {\r\n\tconst checked = status === 'checked';\r\n\tconst indeterminate = status === 'indeterminate';\r\n\r\n\tconst { checkedColor, rippleColor } = getSelectionControlIOSColor({\r\n\t\ttheme,\r\n\t\tdisabled,\r\n\t\tcustomColor: rest.color,\r\n\t});\r\n\r\n\tconst icon = indeterminate ? 'minus' : 'check';\r\n\r\n\treturn (\r\n\t\t<TouchableRipple\r\n\t\t\t{...rest}\r\n\t\t\tborderless\r\n\t\t\trippleColor={rippleColor}\r\n\t\t\tonPress={onPress}\r\n\t\t\tdisabled={disabled}\r\n\t\t\taccessibilityRole=\"checkbox\"\r\n\t\t\taccessibilityState={{ disabled, checked }}\r\n\t\t\taccessibilityLiveRegion=\"polite\"\r\n\t\t\tstyle={styles.container}\r\n\t\t\ttestID={testID}\r\n\t\t>\r\n\t\t\t<View style={{ opacity: indeterminate || checked ? 1 : 0 }}>\r\n\t\t\t\t<MaterialCommunityIcon\r\n\t\t\t\t\tallowFontScaling={false}\r\n\t\t\t\t\tname={icon}\r\n\t\t\t\t\tsize={24}\r\n\t\t\t\t\tcolor={checkedColor}\r\n\t\t\t\t\tdirection=\"ltr\"\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</TouchableRipple>\r\n\t);\r\n};\r\n\r\nCheckboxIOS.displayName = 'Checkbox.IOS';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tborderRadius: 18,\r\n\t\tpadding: 6,\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(CheckboxIOS);\r\n\r\n// @component-docs ignore-next-line\r\nconst CheckboxIOSWithTheme = withInternalTheme(CheckboxIOS);\r\n// @component-docs ignore-next-line\r\nexport { CheckboxIOSWithTheme as CheckboxIOS };\r\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAiE;AAAA;AAAA;AAAA;AA6BjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,QAOP;EAAA,IAPQ;IACpBC,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,MAAM;IACN,GAAGC;EACG,CAAC;EACP,MAAMC,OAAO,GAAGN,MAAM,KAAK,SAAS;EACpC,MAAMO,aAAa,GAAGP,MAAM,KAAK,eAAe;EAEhD,MAAM;IAAEQ,YAAY;IAAEC;EAAY,CAAC,GAAG,IAAAC,kCAA2B,EAAC;IACjEP,KAAK;IACLF,QAAQ;IACRU,WAAW,EAAEN,IAAI,CAACO;EACnB,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGN,aAAa,GAAG,OAAO,GAAG,OAAO;EAE9C,oBACC,oBAAC,wBAAe,eACXF,IAAI;IACR,UAAU;IACV,WAAW,EAAEI,WAAY;IACzB,OAAO,EAAEP,OAAQ;IACjB,QAAQ,EAAED,QAAS;IACnB,iBAAiB,EAAC,UAAU;IAC5B,kBAAkB,EAAE;MAAEA,QAAQ;MAAEK;IAAQ,CAAE;IAC1C,uBAAuB,EAAC,QAAQ;IAChC,KAAK,EAAEQ,MAAM,CAACC,SAAU;IACxB,MAAM,EAAEX;EAAO,iBAEf,oBAAC,iBAAI;IAAC,KAAK,EAAE;MAAEY,OAAO,EAAET,aAAa,IAAID,OAAO,GAAG,CAAC,GAAG;IAAE;EAAE,gBAC1D,oBAAC,8BAAqB;IACrB,gBAAgB,EAAE,KAAM;IACxB,IAAI,EAAEO,IAAK;IACX,IAAI,EAAE,EAAG;IACT,KAAK,EAAEL,YAAa;IACpB,SAAS,EAAC;EAAK,EACd,CACI,CACU;AAEpB,CAAC;AAEDT,WAAW,CAACkB,WAAW,GAAG,cAAc;AAExC,MAAMH,MAAM,GAAGI,uBAAU,CAACC,MAAM,CAAC;EAChCJ,SAAS,EAAE;IACVK,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACV;AACD,CAAC,CAAC;AAAC,eAEY,IAAAC,0BAAiB,EAACvB,WAAW,CAAC,EAE7C;AAAA;AACA,MAAMwB,oBAAoB,GAAG,IAAAD,0BAAiB,EAACvB,WAAW,CAAC;AAC3D;AAAA"}