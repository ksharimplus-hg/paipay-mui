{"version":3,"names":["CheckboxIOS","status","disabled","onPress","theme","testID","rest","checked","indeterminate","checkedColor","rippleColor","getSelectionControlIOSColor","customColor","color","icon","styles","container","opacity","displayName","StyleSheet","create","borderRadius","padding","withInternalTheme","CheckboxIOSWithTheme"],"sources":["CheckboxIOS.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, StyleSheet, View } from 'react-native';\n\nimport { getSelectionControlIOSColor } from './utils';\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n\t/**\n\t * Status of checkbox.\n\t */\n\tstatus: 'checked' | 'unchecked' | 'indeterminate';\n\t/**\n\t * Whether checkbox is disabled.\n\t */\n\tdisabled?: boolean;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\t/**\n\t * Custom color for checkbox.\n\t */\n\tcolor?: string;\n\t/**\n\t * @optional\n\t */\n\ttheme: InternalTheme;\n\t/**\n\t * testID to be used on tests.\n\t */\n\ttestID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxIOS = ({\n\tstatus,\n\tdisabled,\n\tonPress,\n\ttheme,\n\ttestID,\n\t...rest\n}: Props) => {\n\tconst checked = status === 'checked';\n\tconst indeterminate = status === 'indeterminate';\n\n\tconst { checkedColor, rippleColor } = getSelectionControlIOSColor({\n\t\ttheme,\n\t\tdisabled,\n\t\tcustomColor: rest.color,\n\t});\n\n\tconst icon = indeterminate ? 'minus' : 'check';\n\n\treturn (\n\t\t<TouchableRipple\n\t\t\t{...rest}\n\t\t\tborderless\n\t\t\trippleColor={rippleColor}\n\t\t\tonPress={onPress}\n\t\t\tdisabled={disabled}\n\t\t\taccessibilityRole=\"checkbox\"\n\t\t\taccessibilityState={{ disabled, checked }}\n\t\t\taccessibilityLiveRegion=\"polite\"\n\t\t\tstyle={styles.container}\n\t\t\ttestID={testID}\n\t\t>\n\t\t\t<View style={{ opacity: indeterminate || checked ? 1 : 0 }}>\n\t\t\t\t<MaterialCommunityIcon\n\t\t\t\t\tallowFontScaling={false}\n\t\t\t\t\tname={icon}\n\t\t\t\t\tsize={24}\n\t\t\t\t\tcolor={checkedColor}\n\t\t\t\t\tdirection=\"ltr\"\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</TouchableRipple>\n\t);\n};\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tborderRadius: 18,\n\t\tpadding: 6,\n\t},\n});\n\nexport default withInternalTheme(CheckboxIOS);\n\n// @component-docs ignore-next-line\nconst CheckboxIOSWithTheme = withInternalTheme(CheckboxIOS);\n// @component-docs ignore-next-line\nexport { CheckboxIOSWithTheme as CheckboxIOS };\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAiE;AAAA;AAAA;AAAA;AA6BjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,QAOP;EAAA,IAPQ;IACpBC,MAAM;IACNC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,MAAM;IACN,GAAGC;EACG,CAAC;EACP,MAAMC,OAAO,GAAGN,MAAM,KAAK,SAAS;EACpC,MAAMO,aAAa,GAAGP,MAAM,KAAK,eAAe;EAEhD,MAAM;IAAEQ,YAAY;IAAEC;EAAY,CAAC,GAAG,IAAAC,kCAA2B,EAAC;IACjEP,KAAK;IACLF,QAAQ;IACRU,WAAW,EAAEN,IAAI,CAACO;EACnB,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGN,aAAa,GAAG,OAAO,GAAG,OAAO;EAE9C,oBACC,oBAAC,wBAAe,eACXF,IAAI;IACR,UAAU;IACV,WAAW,EAAEI,WAAY;IACzB,OAAO,EAAEP,OAAQ;IACjB,QAAQ,EAAED,QAAS;IACnB,iBAAiB,EAAC,UAAU;IAC5B,kBAAkB,EAAE;MAAEA,QAAQ;MAAEK;IAAQ,CAAE;IAC1C,uBAAuB,EAAC,QAAQ;IAChC,KAAK,EAAEQ,MAAM,CAACC,SAAU;IACxB,MAAM,EAAEX;EAAO,iBAEf,oBAAC,iBAAI;IAAC,KAAK,EAAE;MAAEY,OAAO,EAAET,aAAa,IAAID,OAAO,GAAG,CAAC,GAAG;IAAE;EAAE,gBAC1D,oBAAC,8BAAqB;IACrB,gBAAgB,EAAE,KAAM;IACxB,IAAI,EAAEO,IAAK;IACX,IAAI,EAAE,EAAG;IACT,KAAK,EAAEL,YAAa;IACpB,SAAS,EAAC;EAAK,EACd,CACI,CACU;AAEpB,CAAC;AAEDT,WAAW,CAACkB,WAAW,GAAG,cAAc;AAExC,MAAMH,MAAM,GAAGI,uBAAU,CAACC,MAAM,CAAC;EAChCJ,SAAS,EAAE;IACVK,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACV;AACD,CAAC,CAAC;AAAC,eAEY,IAAAC,0BAAiB,EAACvB,WAAW,CAAC,EAE7C;AAAA;AACA,MAAMwB,oBAAoB,GAAG,IAAAD,0BAAiB,EAACvB,WAAW,CAAC;AAC3D;AAAA"}