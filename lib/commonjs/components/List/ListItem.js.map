{"version":3,"names":["ListItem","left","right","title","description","onPress","theme","style","titleStyle","titleNumberOfLines","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","alignToTop","setAlignToTop","React","useState","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","renderDescription","descriptionColor","selectable","ellipsizeMode","color","fontSize","styles","renderTitle","titleColor","colors","onSurface","text","alpha","rgb","string","onSurfaceVariant","containerV3","container","rowV3","row","getLeftStyles","itemV3","item","content","getRightStyles","displayName","StyleSheet","create","padding","paddingVertical","paddingRight","flexDirection","marginVertical","paddingLeft","flex","justifyContent","withInternalTheme"],"sources":["ListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n\tFlexAlignType,\n\tGestureResponderEvent,\n\tNativeSyntheticEvent,\n\tStyleProp,\n\tStyleSheet,\n\tTextLayoutEventData,\n\tTextStyle,\n\tView,\n\tViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { getLeftStyles, getRightStyles } from './utils';\nimport { withInternalTheme } from '../../core/theming';\nimport type {\n\t$RemoveChildren,\n\tEllipsizeProp,\n\tInternalTheme,\n} from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype Title =\n\t| React.ReactNode\n\t| ((props: {\n\t\t\tselectable: boolean;\n\t\t\tellipsizeMode: EllipsizeProp | undefined;\n\t\t\tcolor: string;\n\t\t\tfontSize: number;\n\t  }) => React.ReactNode);\n\ntype Description =\n\t| React.ReactNode\n\t| ((props: {\n\t\t\tselectable: boolean;\n\t\t\tellipsizeMode: EllipsizeProp | undefined;\n\t\t\tcolor: string;\n\t\t\tfontSize: number;\n\t  }) => React.ReactNode);\n\ninterface Style {\n\tmarginLeft?: number;\n\tmarginRight?: number;\n\tmarginVertical?: number;\n\talignSelf?: FlexAlignType;\n}\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n\t/**\n\t * Title text for the list item.\n\t */\n\ttitle: Title;\n\t/**\n\t * Description text for the list item or callback which returns a React element to display the description.\n\t */\n\tdescription?: Description;\n\t/**\n\t * Callback which returns a React element to display on the left side.\n\t */\n\tleft?: (props: { color: string; style: Style }) => React.ReactNode;\n\t/**\n\t * Callback which returns a React element to display on the right side.\n\t */\n\tright?: (props: { color: string; style?: Style }) => React.ReactNode;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\t/**\n\t * @optional\n\t */\n\ttheme: InternalTheme;\n\t/**\n\t * Style that is passed to the wrapping TouchableRipple element.\n\t */\n\tstyle?: StyleProp<ViewStyle>;\n\t/**\n\t * Style that is passed to Title element.\n\t */\n\ttitleStyle?: StyleProp<TextStyle>;\n\t/**\n\t * Style that is passed to Description element.\n\t */\n\tdescriptionStyle?: StyleProp<TextStyle>;\n\t/**\n\t * Truncate Title text such that the total number of lines does not\n\t * exceed this number.\n\t */\n\ttitleNumberOfLines?: number;\n\t/**\n\t * Truncate Description text such that the total number of lines does not\n\t * exceed this number.\n\t */\n\tdescriptionNumberOfLines?: number;\n\t/**\n\t * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n\t *\n\t * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n\t */\n\ttitleEllipsizeMode?: EllipsizeProp;\n\t/**\n\t * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n\t *\n\t * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n\t */\n\tdescriptionEllipsizeMode?: EllipsizeProp;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst ListItem = ({\n\tleft,\n\tright,\n\ttitle,\n\tdescription,\n\tonPress,\n\ttheme,\n\tstyle,\n\ttitleStyle,\n\ttitleNumberOfLines = 1,\n\tdescriptionNumberOfLines = 2,\n\ttitleEllipsizeMode,\n\tdescriptionEllipsizeMode,\n\tdescriptionStyle,\n\t...rest\n}: Props) => {\n\tconst [alignToTop, setAlignToTop] = React.useState(false);\n\n\tconst onDescriptionTextLayout = (\n\t\tevent: NativeSyntheticEvent<TextLayoutEventData>\n\t) => {\n\t\tif (!theme.isV3) {\n\t\t\treturn;\n\t\t}\n\t\tconst { nativeEvent } = event;\n\t\tsetAlignToTop(nativeEvent.lines.length >= 2);\n\t};\n\n\tconst renderDescription = (\n\t\tdescriptionColor: string,\n\t\tdescription?: Description | null\n\t) => {\n\t\treturn typeof description === 'function' ? (\n\t\t\tdescription({\n\t\t\t\tselectable: false,\n\t\t\t\tellipsizeMode: descriptionEllipsizeMode,\n\t\t\t\tcolor: descriptionColor,\n\t\t\t\tfontSize: styles.description.fontSize,\n\t\t\t})\n\t\t) : (\n\t\t\t<Text\n\t\t\t\tselectable={false}\n\t\t\t\tnumberOfLines={descriptionNumberOfLines}\n\t\t\t\tellipsizeMode={descriptionEllipsizeMode}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.description,\n\t\t\t\t\t{ color: descriptionColor },\n\t\t\t\t\tdescriptionStyle,\n\t\t\t\t]}\n\t\t\t\tonTextLayout={onDescriptionTextLayout}\n\t\t\t>\n\t\t\t\t{description}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst renderTitle = () => {\n\t\tconst titleColor = theme.isV3\n\t\t\t? theme.colors.onSurface\n\t\t\t: color(theme.colors.text).alpha(0.87).rgb().string();\n\n\t\treturn typeof title === 'function' ? (\n\t\t\ttitle({\n\t\t\t\tselectable: false,\n\t\t\t\tellipsizeMode: titleEllipsizeMode,\n\t\t\t\tcolor: titleColor,\n\t\t\t\tfontSize: styles.title.fontSize,\n\t\t\t})\n\t\t) : (\n\t\t\t<Text\n\t\t\t\tselectable={false}\n\t\t\t\tellipsizeMode={titleEllipsizeMode}\n\t\t\t\tnumberOfLines={titleNumberOfLines}\n\t\t\t\tstyle={[styles.title, { color: titleColor }, titleStyle]}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</Text>\n\t\t);\n\t};\n\n\tconst descriptionColor = theme.isV3\n\t\t? theme.colors.onSurfaceVariant\n\t\t: color(theme.colors.text).alpha(0.54).rgb().string();\n\n\treturn (\n\t\t<TouchableRipple\n\t\t\t{...rest}\n\t\t\tstyle={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n\t\t\tonPress={onPress}\n\t\t>\n\t\t\t<View style={theme.isV3 ? styles.rowV3 : styles.row}>\n\t\t\t\t{left\n\t\t\t\t\t? left({\n\t\t\t\t\t\t\tcolor: descriptionColor,\n\t\t\t\t\t\t\tstyle: getLeftStyles(\n\t\t\t\t\t\t\t\talignToTop,\n\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\ttheme.isV3\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t\t<View\n\t\t\t\t\tstyle={[\n\t\t\t\t\t\ttheme.isV3 ? styles.itemV3 : styles.item,\n\t\t\t\t\t\tstyles.content,\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{renderTitle()}\n\n\t\t\t\t\t{description\n\t\t\t\t\t\t? renderDescription(descriptionColor, description)\n\t\t\t\t\t\t: null}\n\t\t\t\t</View>\n\t\t\t\t{right\n\t\t\t\t\t? right({\n\t\t\t\t\t\t\tcolor: descriptionColor,\n\t\t\t\t\t\t\tstyle: getRightStyles(\n\t\t\t\t\t\t\t\talignToTop,\n\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\ttheme.isV3\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</View>\n\t\t</TouchableRipple>\n\t);\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 8,\n\t},\n\tcontainerV3: {\n\t\tpaddingVertical: 8,\n\t\tpaddingRight: 24,\n\t},\n\trow: {\n\t\tflexDirection: 'row',\n\t},\n\trowV3: {\n\t\tflexDirection: 'row',\n\t\tmarginVertical: 6,\n\t},\n\ttitle: {\n\t\tfontSize: 16,\n\t},\n\tdescription: {\n\t\tfontSize: 14,\n\t},\n\titem: {\n\t\tmarginVertical: 6,\n\t\tpaddingLeft: 8,\n\t},\n\titemV3: {\n\t\tpaddingLeft: 16,\n\t},\n\tcontent: {\n\t\tflex: 1,\n\t\tjustifyContent: 'center',\n\t},\n});\n\nexport default withInternalTheme(ListItem);\n"],"mappings":"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"}