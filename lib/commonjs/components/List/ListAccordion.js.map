{"version":3,"names":["ListAccordion","left","right","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","delayLongPress","expanded","expandedProp","accessibilityLabel","pointerEvents","setExpanded","React","useState","handlePressAction","e","undefined","expandedInternal","groupContext","useContext","ListAccordionGroupContext","Error","isExpanded","expandedId","titleColor","descriptionColor","titleTextColor","rippleColor","getAccordionColors","handlePress","onAccordionPress","backgroundColor","colors","background","styles","container","row","color","primary","item","content","multiline","isV3","I18nManager","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","StyleSheet","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex","withInternalTheme"],"sources":["ListAccordion.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tGestureResponderEvent,\r\n\tI18nManager,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tTextStyle,\r\n\tView,\r\n\tViewProps,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\r\nimport { getAccordionColors } from './utils';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { InternalTheme } from '../../types';\r\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = {\r\n\t/**\r\n\t * Title text for the list accordion.\r\n\t */\r\n\ttitle: React.ReactNode;\r\n\t/**\r\n\t * Description text for the list accordion.\r\n\t */\r\n\tdescription?: React.ReactNode;\r\n\t/**\r\n\t * Callback which returns a React element to display on the left side.\r\n\t */\r\n\tleft?: (props: { color: string }) => React.ReactNode;\r\n\t/**\r\n\t * Callback which returns a React element to display on the right side.\r\n\t */\r\n\tright?: (props: { isExpanded: boolean }) => React.ReactNode;\r\n\t/**\r\n\t * Whether the accordion is expanded\r\n\t * If this prop is provided, the accordion will behave as a \"controlled component\".\r\n\t * You'll need to update this prop when you want to toggle the component or on `onPress`.\r\n\t */\r\n\texpanded?: boolean;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * Function to execute on long press.\r\n\t */\r\n\tonLongPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * The number of milliseconds a user must touch the element before executing `onLongPress`.\r\n\t */\r\n\tdelayLongPress?: number;\r\n\t/**\r\n\t * Content of the section.\r\n\t */\r\n\tchildren: React.ReactNode;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * Style that is passed to the wrapping TouchableRipple element.\r\n\t */\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * Style that is passed to Title element.\r\n\t */\r\n\ttitleStyle?: StyleProp<TextStyle>;\r\n\t/**\r\n\t * Style that is passed to Description element.\r\n\t */\r\n\tdescriptionStyle?: StyleProp<TextStyle>;\r\n\t/**\r\n\t * Truncate Title text such that the total number of lines does not\r\n\t * exceed this number.\r\n\t */\r\n\ttitleNumberOfLines?: number;\r\n\t/**\r\n\t * Truncate Description text such that the total number of lines does not\r\n\t * exceed this number.\r\n\t */\r\n\tdescriptionNumberOfLines?: number;\r\n\t/**\r\n\t * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\r\n\t */\r\n\tid?: string | number;\r\n\t/**\r\n\t * TestID used for testing purposes\r\n\t */\r\n\ttestID?: string;\r\n\t/**\r\n\t * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\r\n\t */\r\n\taccessibilityLabel?: string;\r\n\t/**\r\n\t * `pointerEvents` passed to the `View` container\r\n\t */\r\n\tpointerEvents?: ViewProps['pointerEvents'];\r\n};\r\n\r\n/**\r\n * A component used to display an expandable list item.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [expanded, setExpanded] = React.useState(true);\r\n *\r\n *   const handlePress = () => setExpanded(!expanded);\r\n *\r\n *   return (\r\n *     <List.Section title=\"Accordions\">\r\n *       <List.Accordion\r\n *         title=\"Uncontrolled Accordion\"\r\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\r\n *         <List.Item title=\"First item\" />\r\n *         <List.Item title=\"Second item\" />\r\n *       </List.Accordion>\r\n *\r\n *       <List.Accordion\r\n *         title=\"Controlled Accordion\"\r\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\r\n *         expanded={expanded}\r\n *         onPress={handlePress}>\r\n *         <List.Item title=\"First item\" />\r\n *         <List.Item title=\"Second item\" />\r\n *       </List.Accordion>\r\n *     </List.Section>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst ListAccordion = ({\r\n\tleft,\r\n\tright,\r\n\ttitle,\r\n\tdescription,\r\n\tchildren,\r\n\ttheme,\r\n\ttitleStyle,\r\n\tdescriptionStyle,\r\n\ttitleNumberOfLines = 1,\r\n\tdescriptionNumberOfLines = 2,\r\n\tstyle,\r\n\tid,\r\n\ttestID,\r\n\tonPress,\r\n\tonLongPress,\r\n\tdelayLongPress,\r\n\texpanded: expandedProp,\r\n\taccessibilityLabel,\r\n\tpointerEvents = 'none',\r\n}: Props) => {\r\n\tconst [expanded, setExpanded] = React.useState<boolean>(\r\n\t\texpandedProp || false\r\n\t);\r\n\r\n\tconst handlePressAction = (e: GestureResponderEvent) => {\r\n\t\tonPress?.(e);\r\n\r\n\t\tif (expandedProp === undefined) {\r\n\t\t\t// Only update state of the `expanded` prop was not passed\r\n\t\t\t// If it was passed, the component will act as a controlled component\r\n\t\t\tsetExpanded((expanded) => !expanded);\r\n\t\t}\r\n\t};\r\n\r\n\tconst expandedInternal =\r\n\t\texpandedProp !== undefined ? expandedProp : expanded;\r\n\r\n\tconst groupContext = React.useContext(ListAccordionGroupContext);\r\n\tif (groupContext !== null && !id) {\r\n\t\tthrow new Error(\r\n\t\t\t'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\r\n\t\t);\r\n\t}\r\n\tconst isExpanded = groupContext\r\n\t\t? groupContext.expandedId === id\r\n\t\t: expandedInternal;\r\n\r\n\tconst { titleColor, descriptionColor, titleTextColor, rippleColor } =\r\n\t\tgetAccordionColors({\r\n\t\t\ttheme,\r\n\t\t\tisExpanded,\r\n\t\t});\r\n\r\n\tconst handlePress =\r\n\t\tgroupContext && id !== undefined\r\n\t\t\t? () => groupContext.onAccordionPress(id)\r\n\t\t\t: handlePressAction;\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={{ backgroundColor: theme?.colors?.background }}>\r\n\t\t\t\t<TouchableRipple\r\n\t\t\t\t\tstyle={[styles.container, style]}\r\n\t\t\t\t\tonPress={handlePress}\r\n\t\t\t\t\tonLongPress={onLongPress}\r\n\t\t\t\t\tdelayLongPress={delayLongPress}\r\n\t\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\t\taccessibilityRole=\"button\"\r\n\t\t\t\t\taccessibilityState={{ expanded: isExpanded }}\r\n\t\t\t\t\taccessibilityLabel={accessibilityLabel}\r\n\t\t\t\t\ttestID={testID}\r\n\t\t\t\t\tborderless\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={styles.row} pointerEvents={pointerEvents}>\r\n\t\t\t\t\t\t{left\r\n\t\t\t\t\t\t\t? left({\r\n\t\t\t\t\t\t\t\t\tcolor: isExpanded\r\n\t\t\t\t\t\t\t\t\t\t? theme.colors?.primary\r\n\t\t\t\t\t\t\t\t\t\t: descriptionColor,\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t<View style={[styles.item, styles.content]}>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\tselectable={false}\r\n\t\t\t\t\t\t\t\tnumberOfLines={titleNumberOfLines}\r\n\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\tstyles.title,\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcolor: titleTextColor,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttitleStyle,\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t{description ? (\r\n\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\tselectable={false}\r\n\t\t\t\t\t\t\t\t\tnumberOfLines={descriptionNumberOfLines}\r\n\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\tstyles.description,\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: descriptionColor,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tdescriptionStyle,\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{description}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\tstyles.item,\r\n\t\t\t\t\t\t\t\tdescription ? styles.multiline : undefined,\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{right ? (\r\n\t\t\t\t\t\t\t\tright({\r\n\t\t\t\t\t\t\t\t\tisExpanded: isExpanded,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<MaterialCommunityIcon\r\n\t\t\t\t\t\t\t\t\tname={\r\n\t\t\t\t\t\t\t\t\t\tisExpanded\r\n\t\t\t\t\t\t\t\t\t\t\t? 'chevron-up'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'chevron-down'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcolor={\r\n\t\t\t\t\t\t\t\t\t\ttheme.isV3\r\n\t\t\t\t\t\t\t\t\t\t\t? descriptionColor\r\n\t\t\t\t\t\t\t\t\t\t\t: titleColor\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsize={24}\r\n\t\t\t\t\t\t\t\t\tdirection={\r\n\t\t\t\t\t\t\t\t\t\tI18nManager.getConstants().isRTL\r\n\t\t\t\t\t\t\t\t\t\t\t? 'rtl'\r\n\t\t\t\t\t\t\t\t\t\t\t: 'ltr'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableRipple>\r\n\t\t\t</View>\r\n\r\n\t\t\t{isExpanded\r\n\t\t\t\t? React.Children.map(children, (child) => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tleft &&\r\n\t\t\t\t\t\t\tReact.isValidElement(child) &&\r\n\t\t\t\t\t\t\t!child.props.left &&\r\n\t\t\t\t\t\t\t!child.props.right\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn React.cloneElement(\r\n\t\t\t\t\t\t\t\tchild as React.ReactElement<any>,\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstyle: [styles.child, child.props.style],\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn child;\r\n\t\t\t\t  })\r\n\t\t\t\t: null}\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nListAccordion.displayName = 'List.Accordion';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpadding: 8,\r\n\t},\r\n\trow: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tmultiline: {\r\n\t\theight: 40,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 16,\r\n\t},\r\n\tdescription: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\titem: {\r\n\t\tmargin: 8,\r\n\t},\r\n\tchild: {\r\n\t\tpaddingLeft: 64,\r\n\t},\r\n\tcontent: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(ListAccordion);\r\n"],"mappings":"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"}