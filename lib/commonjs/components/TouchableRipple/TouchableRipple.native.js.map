{"version":3,"names":["ANDROID_VERSION_LOLLIPOP","ANDROID_VERSION_PIE","TouchableRipple","style","background","borderless","disabled","disabledProp","rippleColor","underlayColor","children","theme","rest","showUnderlay","setShowUnderlay","React","useState","onPress","calculatedRippleColor","calculatedUnderlayColor","getTouchableRippleColors","useForeground","Platform","OS","Version","handlePressIn","e","onPressIn","handlePressOut","onPressOut","supported","styles","overflowHidden","color","foreground","Children","only","backgroundColor","StyleSheet","create","overflow","withInternalTheme"],"sources":["TouchableRipple.native.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tPressableAndroidRippleConfig,\r\n\tStyleProp,\r\n\tPlatform,\r\n\tViewStyle,\r\n\tStyleSheet,\r\n\tPressable,\r\n\tGestureResponderEvent,\r\n} from 'react-native';\r\n\r\nimport { getTouchableRippleColors } from './utils';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { InternalTheme } from '../../types';\r\n\r\nconst ANDROID_VERSION_LOLLIPOP = 21;\r\nconst ANDROID_VERSION_PIE = 28;\r\n\r\ntype Props = React.ComponentProps<typeof Pressable> & {\r\n\tborderless?: boolean;\r\n\tbackground?: PressableAndroidRippleConfig;\r\n\tdisabled?: boolean;\r\n\tonPress?: (e: GestureResponderEvent) => void | null;\r\n\trippleColor?: string;\r\n\tunderlayColor?: string;\r\n\tchildren: React.ReactNode;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\ttheme: InternalTheme;\r\n};\r\n\r\nconst TouchableRipple = ({\r\n\tstyle,\r\n\tbackground,\r\n\tborderless = false,\r\n\tdisabled: disabledProp,\r\n\trippleColor,\r\n\tunderlayColor,\r\n\tchildren,\r\n\ttheme,\r\n\t...rest\r\n}: Props) => {\r\n\tconst [showUnderlay, setShowUnderlay] = React.useState<boolean>(false);\r\n\r\n\tconst disabled = disabledProp || !rest.onPress;\r\n\tconst { calculatedRippleColor, calculatedUnderlayColor } =\r\n\t\tgetTouchableRippleColors({\r\n\t\t\ttheme,\r\n\t\t\trippleColor,\r\n\t\t\tunderlayColor,\r\n\t\t});\r\n\r\n\t// A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\r\n\t// https://github.com/facebook/react-native/issues/6480\r\n\tconst useForeground =\r\n\t\tPlatform.OS === 'android' &&\r\n\t\tPlatform.Version >= ANDROID_VERSION_PIE &&\r\n\t\tborderless;\r\n\r\n\tconst handlePressIn = (e: GestureResponderEvent) => {\r\n\t\tsetShowUnderlay(true);\r\n\t\trest.onPressIn?.(e);\r\n\t};\r\n\r\n\tconst handlePressOut = (e: GestureResponderEvent) => {\r\n\t\tsetShowUnderlay(false);\r\n\t\trest.onPressOut?.(e);\r\n\t};\r\n\r\n\tif (TouchableRipple.supported) {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\t{...rest}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tstyle={[borderless && styles.overflowHidden, style]}\r\n\t\t\t\tandroid_ripple={\r\n\t\t\t\t\tbackground != null\r\n\t\t\t\t\t\t? background\r\n\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\tcolor: calculatedRippleColor,\r\n\t\t\t\t\t\t\t\tborderless,\r\n\t\t\t\t\t\t\t\tforeground: useForeground,\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{React.Children.only(children)}\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\t{...rest}\r\n\t\t\tdisabled={disabled}\r\n\t\t\tstyle={[\r\n\t\t\t\tborderless && styles.overflowHidden,\r\n\t\t\t\tshowUnderlay && { backgroundColor: calculatedUnderlayColor },\r\n\t\t\t\tstyle,\r\n\t\t\t]}\r\n\t\t\tonPressIn={handlePressIn}\r\n\t\t\tonPressOut={handlePressOut}\r\n\t\t>\r\n\t\t\t{React.Children.only(children)}\r\n\t\t</Pressable>\r\n\t);\r\n};\r\n\r\nTouchableRipple.supported =\r\n\tPlatform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\r\n\r\nconst styles = StyleSheet.create({\r\n\toverflowHidden: {\r\n\t\toverflow: 'hidden',\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(TouchableRipple);\r\n"],"mappings":";;;;;;AAAA;AACA;AAUA;AACA;AAAuD;AAAA;AAAA;AAGvD,MAAMA,wBAAwB,GAAG,EAAE;AACnC,MAAMC,mBAAmB,GAAG,EAAE;AAc9B,MAAMC,eAAe,GAAG,QAUX;EAAA,IAVY;IACxBC,KAAK;IACLC,UAAU;IACVC,UAAU,GAAG,KAAK;IAClBC,QAAQ,EAAEC,YAAY;IACtBC,WAAW;IACXC,aAAa;IACbC,QAAQ;IACRC,KAAK;IACL,GAAGC;EACG,CAAC;EACP,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAU,KAAK,CAAC;EAEtE,MAAMV,QAAQ,GAAGC,YAAY,IAAI,CAACK,IAAI,CAACK,OAAO;EAC9C,MAAM;IAAEC,qBAAqB;IAAEC;EAAwB,CAAC,GACvD,IAAAC,+BAAwB,EAAC;IACxBT,KAAK;IACLH,WAAW;IACXC;EACD,CAAC,CAAC;;EAEH;EACA;EACA,MAAMY,aAAa,GAClBC,qBAAQ,CAACC,EAAE,KAAK,SAAS,IACzBD,qBAAQ,CAACE,OAAO,IAAIvB,mBAAmB,IACvCI,UAAU;EAEX,MAAMoB,aAAa,GAAIC,CAAwB,IAAK;IAAA;IACnDZ,eAAe,CAAC,IAAI,CAAC;IACrB,mBAAAF,IAAI,CAACe,SAAS,oDAAd,qBAAAf,IAAI,EAAac,CAAC,CAAC;EACpB,CAAC;EAED,MAAME,cAAc,GAAIF,CAAwB,IAAK;IAAA;IACpDZ,eAAe,CAAC,KAAK,CAAC;IACtB,oBAAAF,IAAI,CAACiB,UAAU,qDAAf,sBAAAjB,IAAI,EAAcc,CAAC,CAAC;EACrB,CAAC;EAED,IAAIxB,eAAe,CAAC4B,SAAS,EAAE;IAC9B,oBACC,oBAAC,sBAAS,eACLlB,IAAI;MACR,QAAQ,EAAEN,QAAS;MACnB,KAAK,EAAE,CAACD,UAAU,IAAI0B,MAAM,CAACC,cAAc,EAAE7B,KAAK,CAAE;MACpD,cAAc,EACbC,UAAU,IAAI,IAAI,GACfA,UAAU,GACV;QACA6B,KAAK,EAAEf,qBAAqB;QAC5Bb,UAAU;QACV6B,UAAU,EAAEb;MACZ;IACH,IAEAN,KAAK,CAACoB,QAAQ,CAACC,IAAI,CAAC1B,QAAQ,CAAC,CACnB;EAEd;EAEA,oBACC,oBAAC,sBAAS,eACLE,IAAI;IACR,QAAQ,EAAEN,QAAS;IACnB,KAAK,EAAE,CACND,UAAU,IAAI0B,MAAM,CAACC,cAAc,EACnCnB,YAAY,IAAI;MAAEwB,eAAe,EAAElB;IAAwB,CAAC,EAC5DhB,KAAK,CACJ;IACF,SAAS,EAAEsB,aAAc;IACzB,UAAU,EAAEG;EAAe,IAE1Bb,KAAK,CAACoB,QAAQ,CAACC,IAAI,CAAC1B,QAAQ,CAAC,CACnB;AAEd,CAAC;AAEDR,eAAe,CAAC4B,SAAS,GACxBR,qBAAQ,CAACC,EAAE,KAAK,SAAS,IAAID,qBAAQ,CAACE,OAAO,IAAIxB,wBAAwB;AAE1E,MAAM+B,MAAM,GAAGO,uBAAU,CAACC,MAAM,CAAC;EAChCP,cAAc,EAAE;IACfQ,QAAQ,EAAE;EACX;AACD,CAAC,CAAC;AAAC,eAEY,IAAAC,0BAAiB,EAACvC,eAAe,CAAC;AAAA"}