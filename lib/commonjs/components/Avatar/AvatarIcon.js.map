{"version":3,"names":["defaultSize","Avatar","icon","size","style","theme","rest","backgroundColor","colors","primary","restStyle","StyleSheet","flatten","textColor","color","getContrastingColor","white","width","height","borderRadius","styles","container","displayName","create","justifyContent","alignItems","withInternalTheme"],"sources":["AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\r\n\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport { white } from '../../styles/themes/v2/colors';\r\nimport type { InternalTheme } from '../../types';\r\nimport getContrastingColor from '../../utils/getContrastingColor';\r\nimport Icon, { IconSource } from '../Icon';\r\n\r\nconst defaultSize = 64;\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n\t/**\r\n\t * Icon to display for the `Avatar`.\r\n\t */\r\n\ticon: IconSource;\r\n\t/**\r\n\t * Size of the avatar.\r\n\t */\r\n\tsize?: number;\r\n\t/**\r\n\t * Custom color for the icon.\r\n\t */\r\n\tcolor?: string;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n};\r\n\r\n/**\r\n * Avatars can be used to represent people in a graphical way.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Avatar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <Avatar.Icon size={24} icon=\"folder\" />\r\n * );\r\n * ```\r\n */\r\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\r\n\tconst { backgroundColor = theme.colors?.primary, ...restStyle } =\r\n\t\tStyleSheet.flatten(style) || {};\r\n\tconst textColor =\r\n\t\trest.color ??\r\n\t\tgetContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\r\n\r\n\treturn (\r\n\t\t<View\r\n\t\t\tstyle={[\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: size,\r\n\t\t\t\t\theight: size,\r\n\t\t\t\t\tborderRadius: size / 2,\r\n\t\t\t\t\tbackgroundColor,\r\n\t\t\t\t},\r\n\t\t\t\tstyles.container,\r\n\t\t\t\trestStyle,\r\n\t\t\t]}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t<Icon source={icon} color={textColor} size={size * 0.6} />\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nAvatar.displayName = 'Avatar.Icon';\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(Avatar);\r\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAA2C;AAAA;AAAA;AAAA;AAE3C,MAAMA,WAAW,GAAG,EAAE;AAsBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,QAAgE;EAAA;EAAA,IAA/D;IAAEC,IAAI;IAAEC,IAAI,GAAGH,WAAW;IAAEI,KAAK;IAAEC,KAAK;IAAE,GAAGC;EAAY,CAAC;EACzE,MAAM;IAAEC,eAAe,oBAAGF,KAAK,CAACG,MAAM,kDAAZ,cAAcC,OAAO;IAAE,GAAGC;EAAU,CAAC,GAC9DC,uBAAU,CAACC,OAAO,CAACR,KAAK,CAAC,IAAI,CAAC,CAAC;EAChC,MAAMS,SAAS,kBACdP,IAAI,CAACQ,KAAK,qDACV,IAAAC,4BAAmB,EAACR,eAAe,EAAES,aAAK,EAAE,oBAAoB,CAAC;EAElE,oBACC,oBAAC,iBAAI;IACJ,KAAK,EAAE,CACN;MACCC,KAAK,EAAEd,IAAI;MACXe,MAAM,EAAEf,IAAI;MACZgB,YAAY,EAAEhB,IAAI,GAAG,CAAC;MACtBI;IACD,CAAC,EACDa,MAAM,CAACC,SAAS,EAChBX,SAAS;EACR,GACEJ,IAAI,gBAER,oBAAC,aAAI;IAAC,MAAM,EAAEJ,IAAK;IAAC,KAAK,EAAEW,SAAU;IAAC,IAAI,EAAEV,IAAI,GAAG;EAAI,EAAG,CACpD;AAET,CAAC;AAEDF,MAAM,CAACqB,WAAW,GAAG,aAAa;AAElC,MAAMF,MAAM,GAAGT,uBAAU,CAACY,MAAM,CAAC;EAChCF,SAAS,EAAE;IACVG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACb;AACD,CAAC,CAAC;AAAC,eAEY,IAAAC,0BAAiB,EAACzB,MAAM,CAAC;AAAA"}