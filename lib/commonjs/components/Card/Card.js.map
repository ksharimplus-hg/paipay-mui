{"version":3,"names":["Card","elevation","cardElevation","onLongPress","delayLongPress","onPress","mode","cardMode","children","style","theme","testID","accessible","rest","isMode","React","useCallback","modeToCompare","current","useRef","Animated","Value","elevationDarkAdaptive","animation","dark","roundness","isV3","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","computedElevation","backgroundColor","borderColor","themedBorderColor","getCardColors","borderRadius","StyleSheet","flatten","styles","resetElevation","outline","undefined","innerContainer","index","cloneElement","Content","CardContent","Actions","CardActions","Cover","CardCover","Title","CardTitle","create","flexShrink","borderWidth","position","width","height","zIndex","withInternalTheme"],"sources":["Card.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tAnimated,\r\n\tGestureResponderEvent,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tTouchableWithoutFeedback,\r\n\tView,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport CardActions from './CardActions';\r\nimport CardContent from './CardContent';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport CardCover from './CardCover';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport CardTitle from './CardTitle';\r\nimport { getCardColors } from './utils';\r\nimport { withInternalTheme } from '../../core/theming';\r\nimport type { InternalTheme } from '../../types';\r\nimport Surface from '../Surface';\r\n\r\ntype OutlinedCardProps = {\r\n\tmode: 'outlined';\r\n\televation?: never;\r\n};\r\n\r\ntype ElevatedCardProps = {\r\n\tmode?: 'elevated';\r\n\televation?: number;\r\n};\r\n\r\ntype ContainedCardProps = {\r\n\tmode?: 'contained';\r\n\televation?: never;\r\n};\r\n\r\ntype HandlePressType = 'in' | 'out';\r\n\r\ntype Mode = 'elevated' | 'outlined' | 'contained';\r\n\r\nexport type Props = React.ComponentProps<typeof Surface> & {\r\n\t/**\r\n\t * Mode of the Card.\r\n\t * - `elevated` - Card with elevation.\r\n\t * - `contained` - Card without outline and elevation @supported Available in v5.x with theme version 3\r\n\t * - `outlined` - Card with an outline.\r\n\t */\r\n\tmode?: Mode;\r\n\t/**\r\n\t * Content of the `Card`.\r\n\t */\r\n\tchildren: React.ReactNode;\r\n\t/**\r\n\t * Function to execute on long press.\r\n\t */\r\n\tonLongPress?: () => void;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (e: GestureResponderEvent) => void;\r\n\t/**\r\n\t * The number of milliseconds a user must touch the element before executing `onLongPress`.\r\n\t */\r\n\tdelayLongPress?: number;\r\n\t/**\r\n\t * Changes Card shadow and background on iOS and Android.\r\n\t */\r\n\televation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * @optional\r\n\t */\r\n\ttheme: InternalTheme;\r\n\t/**\r\n\t * Pass down testID from card props to touchable\r\n\t */\r\n\ttestID?: string;\r\n\t/**\r\n\t * Pass down accessible from card props to touchable\r\n\t */\r\n\taccessible?: boolean;\r\n};\r\n\r\n/**\r\n * A card is a sheet of material that serves as an entry point to more detailed information.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/card-1.png\" />\r\n *     <figcaption>Elevated card</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/card-2.png\" />\r\n *     <figcaption>Outlined card</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/card-3.png\" />\r\n *     <figcaption>Contained card</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Avatar, Button, Card, Text } from 'react-native-paper';\r\n *\r\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\n *\r\n * const MyComponent = () => (\r\n *   <Card>\r\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\r\n *     <Card.Content>\r\n *       <Text variant=\"titleLarge\">Card title</Text>\r\n *       <Text variant=\"bodyMedium\">Card content</Text>\r\n *     </Card.Content>\r\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\r\n *     <Card.Actions>\r\n *       <Button>Cancel</Button>\r\n *       <Button>Ok</Button>\r\n *     </Card.Actions>\r\n *   </Card>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst Card = ({\r\n\televation: cardElevation = 1,\r\n\tonLongPress,\r\n\tdelayLongPress,\r\n\tonPress,\r\n\tmode: cardMode = 'elevated',\r\n\tchildren,\r\n\tstyle,\r\n\ttheme,\r\n\ttestID = 'card',\r\n\taccessible,\r\n\t...rest\r\n}: (OutlinedCardProps | ElevatedCardProps | ContainedCardProps) & Props) => {\r\n\tconst isMode = React.useCallback(\r\n\t\t(modeToCompare: Mode) => {\r\n\t\t\treturn cardMode === modeToCompare;\r\n\t\t},\r\n\t\t[cardMode]\r\n\t);\r\n\r\n\t// Default animated value\r\n\tconst { current: elevation } = React.useRef<Animated.Value>(\r\n\t\tnew Animated.Value(cardElevation)\r\n\t);\r\n\t// Dark adaptive animated value, used in case of toggling the theme,\r\n\t// it prevents animating the background with native drivers inside Surface\r\n\tconst { current: elevationDarkAdaptive } = React.useRef<Animated.Value>(\r\n\t\tnew Animated.Value(cardElevation)\r\n\t);\r\n\tconst { animation, dark, mode, roundness, isV3 } = theme;\r\n\r\n\tconst prevDarkRef = React.useRef<boolean>(dark);\r\n\tReact.useEffect(() => {\r\n\t\tprevDarkRef.current = dark;\r\n\t});\r\n\r\n\tconst prevDark = prevDarkRef.current;\r\n\tconst isAdaptiveMode = mode === 'adaptive';\r\n\tconst animationDuration = 150 * animation.scale;\r\n\r\n\tReact.useEffect(() => {\r\n\t\t/**\r\n\t\t * Resets animations values if updating to dark adaptive mode,\r\n\t\t * otherwise, any card that is in the middle of animation while\r\n\t\t * toggling the theme will stay at that animated value until\r\n\t\t * the next press-in\r\n\t\t */\r\n\t\tif (dark && isAdaptiveMode && !prevDark) {\r\n\t\t\televation.setValue(cardElevation);\r\n\t\t\televationDarkAdaptive.setValue(cardElevation);\r\n\t\t}\r\n\t}, [\r\n\t\tprevDark,\r\n\t\tdark,\r\n\t\tisAdaptiveMode,\r\n\t\tcardElevation,\r\n\t\televation,\r\n\t\televationDarkAdaptive,\r\n\t]);\r\n\r\n\tconst runElevationAnimation = (pressType: HandlePressType) => {\r\n\t\tconst isPressTypeIn = pressType === 'in';\r\n\t\tif (dark && isAdaptiveMode) {\r\n\t\t\tAnimated.timing(elevationDarkAdaptive, {\r\n\t\t\t\ttoValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\r\n\t\t\t\tduration: animationDuration,\r\n\t\t\t\tuseNativeDriver: false,\r\n\t\t\t}).start();\r\n\t\t} else {\r\n\t\t\tAnimated.timing(elevation, {\r\n\t\t\t\ttoValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\r\n\t\t\t\tduration: animationDuration,\r\n\t\t\t\tuseNativeDriver: false,\r\n\t\t\t}).start();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePressIn = () => {\r\n\t\trunElevationAnimation('in');\r\n\t};\r\n\r\n\tconst handlePressOut = () => {\r\n\t\trunElevationAnimation('out');\r\n\t};\r\n\r\n\tconst total = React.Children.count(children);\r\n\tconst siblings = React.Children.map(children, (child) =>\r\n\t\tReact.isValidElement(child) && child.type\r\n\t\t\t? (child.type as any).displayName\r\n\t\t\t: null\r\n\t);\r\n\tconst computedElevation =\r\n\t\tdark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\r\n\r\n\tconst { backgroundColor, borderColor: themedBorderColor } = getCardColors({\r\n\t\ttheme,\r\n\t\tmode: cardMode,\r\n\t});\r\n\r\n\tconst {\r\n\t\tborderRadius = (isV3 ? 3 : 1) * roundness,\r\n\t\tborderColor = themedBorderColor,\r\n\t} = (StyleSheet.flatten(style) || {}) as ViewStyle;\r\n\r\n\treturn (\r\n\t\t<Surface\r\n\t\t\tstyle={[\r\n\t\t\t\t{\r\n\t\t\t\t\tborderRadius,\r\n\t\t\t\t},\r\n\t\t\t\tisV3 && !isMode('elevated') && { backgroundColor },\r\n\t\t\t\t!isV3 && isMode('outlined')\r\n\t\t\t\t\t? styles.resetElevation\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\televation: computedElevation as unknown as number,\r\n\t\t\t\t\t  },\r\n\t\t\t\tstyle,\r\n\t\t\t]}\r\n\t\t\ttheme={theme}\r\n\t\t\t{...(isV3 && {\r\n\t\t\t\televation: isMode('elevated') ? computedElevation : 0,\r\n\t\t\t})}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{isMode('outlined') && (\r\n\t\t\t\t<View\r\n\t\t\t\t\tpointerEvents=\"none\"\r\n\t\t\t\t\ttestID={`${testID}-outline`}\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tborderRadius,\r\n\t\t\t\t\t\t\tborderColor,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyles.outline,\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<TouchableWithoutFeedback\r\n\t\t\t\tdelayPressIn={0}\r\n\t\t\t\tdisabled={!(onPress || onLongPress)}\r\n\t\t\t\tdelayLongPress={delayLongPress}\r\n\t\t\t\tonLongPress={onLongPress}\r\n\t\t\t\tonPress={onPress}\r\n\t\t\t\tonPressIn={onPress || onLongPress ? handlePressIn : undefined}\r\n\t\t\t\tonPressOut={onPress || onLongPress ? handlePressOut : undefined}\r\n\t\t\t\ttestID={testID}\r\n\t\t\t\taccessible={accessible}\r\n\t\t\t>\r\n\t\t\t\t<View style={styles.innerContainer}>\r\n\t\t\t\t\t{React.Children.map(children, (child, index) =>\r\n\t\t\t\t\t\tReact.isValidElement(child)\r\n\t\t\t\t\t\t\t? React.cloneElement(\r\n\t\t\t\t\t\t\t\t\tchild as React.ReactElement<any>,\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\ttotal,\r\n\t\t\t\t\t\t\t\t\t\tsiblings,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t: child\r\n\t\t\t\t\t)}\r\n\t\t\t\t</View>\r\n\t\t\t</TouchableWithoutFeedback>\r\n\t\t</Surface>\r\n\t);\r\n};\r\n\r\n// @component ./CardContent.tsx\r\nCard.Content = CardContent;\r\n// @component ./CardActions.tsx\r\nCard.Actions = CardActions;\r\n// @component ./CardCover.tsx\r\nCard.Cover = CardCover;\r\n// @component ./CardTitle.tsx\r\nCard.Title = CardTitle;\r\n\r\nconst styles = StyleSheet.create({\r\n\tinnerContainer: {\r\n\t\tflexShrink: 1,\r\n\t},\r\n\toutline: {\r\n\t\tborderWidth: 1,\r\n\t\tposition: 'absolute',\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tzIndex: 2,\r\n\t},\r\n\tresetElevation: {\r\n\t\televation: 0,\r\n\t},\r\n});\r\n\r\nexport default withInternalTheme(Card);\r\n"],"mappings":"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"}