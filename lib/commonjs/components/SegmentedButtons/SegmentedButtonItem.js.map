{"version":3,"names":["SegmentedButtonItem","checked","accessibilityLabel","disabled","style","showSelectedCheck","icon","testID","label","onPress","segment","density","theme","useInternalTheme","checkScale","React","useRef","Animated","Value","current","useEffect","spring","toValue","useNativeDriver","start","roundness","isV3","borderColor","textColor","borderWidth","backgroundColor","getSegmentedButtonColors","borderRadius","segmentBorderRadius","getSegmentedButtonBorderRadius","rippleColor","color","alpha","rgb","string","showIcon","showCheckedIcon","iconSize","iconStyle","marginRight","transform","scale","interpolate","inputRange","outputRange","buttonStyle","paddingVertical","getSegmentedButtonDensityPadding","rippleStyle","labelTextStyle","textTransform","fontWeight","fonts","labelLarge","styles","button","content","undefined","StyleSheet","create","flex","minWidth","borderStyle","textAlign","flexDirection","alignItems","justifyContent","paddingHorizontal","SegmentedButtonWithTheme"],"sources":["SegmentedButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n\tAnimated,\r\n\tGestureResponderEvent,\r\n\tStyleProp,\r\n\tStyleSheet,\r\n\tTextStyle,\r\n\tView,\r\n\tViewStyle,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport {\r\n\tgetSegmentedButtonBorderRadius,\r\n\tgetSegmentedButtonColors,\r\n\tgetSegmentedButtonDensityPadding,\r\n} from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { IconSource } from '../Icon';\r\nimport Icon from '../Icon';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = {\r\n\t/**\r\n\t * Whether the segmented button is checked\r\n\t */\r\n\tchecked: boolean;\r\n\t/**\r\n\t * Icon to display for the `SegmentedButtonItem`.\r\n\t */\r\n\ticon?: IconSource;\r\n\t/**\r\n\t * Whether the button is disabled.\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Accessibility label for the `SegmentedButtonItem`. This is read by the screen reader when the user taps the button.\r\n\t */\r\n\taccessibilityLabel?: string;\r\n\t/**\r\n\t * Function to execute on press.\r\n\t */\r\n\tonPress?: (event: GestureResponderEvent) => void;\r\n\t/**\r\n\t * Value of button.\r\n\t */\r\n\tvalue: string;\r\n\t/**\r\n\t * Label text of the button.\r\n\t */\r\n\tlabel?: string;\r\n\t/**\r\n\t * Button segment.\r\n\t */\r\n\tsegment?: 'first' | 'last';\r\n\t/**\r\n\t * Show optional check icon to indicate selected state\r\n\t */\r\n\tshowSelectedCheck?: boolean;\r\n\t/**\r\n\t * Density is applied to the height, to allow usage in denser UIs.\r\n\t */\r\n\tdensity?: 'regular' | 'small' | 'medium' | 'high';\r\n\tstyle?: StyleProp<ViewStyle>;\r\n\t/**\r\n\t * testID to be used on tests.\r\n\t */\r\n\ttestID?: string;\r\n};\r\n\r\nconst SegmentedButtonItem = ({\r\n\tchecked,\r\n\taccessibilityLabel,\r\n\tdisabled,\r\n\tstyle,\r\n\tshowSelectedCheck,\r\n\ticon,\r\n\ttestID,\r\n\tlabel,\r\n\tonPress,\r\n\tsegment,\r\n\tdensity = 'regular',\r\n}: Props) => {\r\n\tconst theme = useInternalTheme();\r\n\r\n\tconst checkScale = React.useRef(new Animated.Value(0)).current;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (!showSelectedCheck) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (checked) {\r\n\t\t\tAnimated.spring(checkScale, {\r\n\t\t\t\ttoValue: 1,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t}).start();\r\n\t\t} else {\r\n\t\t\tAnimated.spring(checkScale, {\r\n\t\t\t\ttoValue: 0,\r\n\t\t\t\tuseNativeDriver: true,\r\n\t\t\t}).start();\r\n\t\t}\r\n\t}, [checked, checkScale, showSelectedCheck]);\r\n\r\n\tconst { roundness, isV3 } = theme;\r\n\tconst { borderColor, textColor, borderWidth, backgroundColor } =\r\n\t\tgetSegmentedButtonColors({\r\n\t\t\tchecked,\r\n\t\t\ttheme,\r\n\t\t\tdisabled,\r\n\t\t});\r\n\r\n\tconst borderRadius = (isV3 ? 5 : 1) * roundness;\r\n\tconst segmentBorderRadius = getSegmentedButtonBorderRadius({\r\n\t\ttheme,\r\n\t\tsegment,\r\n\t});\r\n\tconst rippleColor = color(textColor).alpha(0.12).rgb().string();\r\n\r\n\tconst showIcon = !icon\r\n\t\t? false\r\n\t\t: label && checked\r\n\t\t? !showSelectedCheck\r\n\t\t: true;\r\n\tconst showCheckedIcon = checked && showSelectedCheck;\r\n\r\n\tconst iconSize = isV3 ? 18 : 16;\r\n\tconst iconStyle = {\r\n\t\tmarginRight: label ? 5 : showCheckedIcon ? 3 : 0,\r\n\t\t...(label && {\r\n\t\t\ttransform: [\r\n\t\t\t\t{\r\n\t\t\t\t\tscale: checkScale.interpolate({\r\n\t\t\t\t\t\tinputRange: [0, 1],\r\n\t\t\t\t\t\toutputRange: [1, 0],\r\n\t\t\t\t\t}),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t}),\r\n\t};\r\n\r\n\tconst buttonStyle: ViewStyle = {\r\n\t\tbackgroundColor,\r\n\t\tborderColor,\r\n\t\tborderWidth,\r\n\t\tborderRadius,\r\n\t\t...segmentBorderRadius,\r\n\t};\r\n\tconst paddingVertical = getSegmentedButtonDensityPadding({ density });\r\n\tconst rippleStyle: ViewStyle = {\r\n\t\tborderRadius,\r\n\t\t...segmentBorderRadius,\r\n\t};\r\n\tconst labelTextStyle: TextStyle = {\r\n\t\t...(!isV3\r\n\t\t\t? {\r\n\t\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\t\tfontWeight: '500',\r\n\t\t\t  }\r\n\t\t\t: theme.fonts.labelLarge),\r\n\t\tcolor: textColor,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={[buttonStyle, styles.button, style]}>\r\n\t\t\t<TouchableRipple\r\n\t\t\t\tborderless\r\n\t\t\t\tonPress={onPress}\r\n\t\t\t\taccessibilityLabel={accessibilityLabel}\r\n\t\t\t\taccessibilityState={{ disabled, checked }}\r\n\t\t\t\taccessibilityRole=\"button\"\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\trippleColor={rippleColor}\r\n\t\t\t\ttestID={testID}\r\n\t\t\t\tstyle={rippleStyle}\r\n\t\t\t>\r\n\t\t\t\t<View style={[styles.content, { paddingVertical }]}>\r\n\t\t\t\t\t{showCheckedIcon ? (\r\n\t\t\t\t\t\t<Animated.View\r\n\t\t\t\t\t\t\ttestID={`${testID}-check-icon`}\r\n\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\ticonStyle,\r\n\t\t\t\t\t\t\t\t{ transform: [{ scale: checkScale }] },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon source={'check'} size={iconSize} />\r\n\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{showIcon ? (\r\n\t\t\t\t\t\t<Animated.View\r\n\t\t\t\t\t\t\ttestID={`${testID}-icon`}\r\n\t\t\t\t\t\t\tstyle={iconStyle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\tsource={icon}\r\n\t\t\t\t\t\t\t\tsize={iconSize}\r\n\t\t\t\t\t\t\t\tcolor={disabled ? textColor : undefined}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tvariant=\"labelLarge\"\r\n\t\t\t\t\t\tstyle={[styles.label, labelTextStyle]}\r\n\t\t\t\t\t\tselectable={false}\r\n\t\t\t\t\t\tnumberOfLines={1}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{label}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</TouchableRipple>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tbutton: {\r\n\t\tflex: 1,\r\n\t\tminWidth: 76,\r\n\t\tborderStyle: 'solid',\r\n\t},\r\n\tlabel: {\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tcontent: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tpaddingVertical: 9,\r\n\t\tpaddingHorizontal: 16,\r\n\t},\r\n});\r\n\r\nexport default SegmentedButtonItem;\r\n\r\nconst SegmentedButtonWithTheme = SegmentedButtonItem;\r\nexport { SegmentedButtonWithTheme as SegmentedButton };\r\n"],"mappings":";;;;;;AAAA;AACA;AAUA;AAEA;AAKA;AAEA;AACA;AACA;AAAsC;AAAA;AAAA;AAkDtC,MAAMA,mBAAmB,GAAG,QAYf;EAAA,IAZgB;IAC5BC,OAAO;IACPC,kBAAkB;IAClBC,QAAQ;IACRC,KAAK;IACLC,iBAAiB;IACjBC,IAAI;IACJC,MAAM;IACNC,KAAK;IACLC,OAAO;IACPC,OAAO;IACPC,OAAO,GAAG;EACJ,CAAC;EACP,MAAMC,KAAK,GAAG,IAAAC,yBAAgB,GAAE;EAEhC,MAAMC,UAAU,GAAGC,KAAK,CAACC,MAAM,CAAC,IAAIC,qBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE9DJ,KAAK,CAACK,SAAS,CAAC,MAAM;IACrB,IAAI,CAACf,iBAAiB,EAAE;MACvB;IACD;IACA,IAAIJ,OAAO,EAAE;MACZgB,qBAAQ,CAACI,MAAM,CAACP,UAAU,EAAE;QAC3BQ,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX,CAAC,MAAM;MACNP,qBAAQ,CAACI,MAAM,CAACP,UAAU,EAAE;QAC3BQ,OAAO,EAAE,CAAC;QACVC,eAAe,EAAE;MAClB,CAAC,CAAC,CAACC,KAAK,EAAE;IACX;EACD,CAAC,EAAE,CAACvB,OAAO,EAAEa,UAAU,EAAET,iBAAiB,CAAC,CAAC;EAE5C,MAAM;IAAEoB,SAAS;IAAEC;EAAK,CAAC,GAAGd,KAAK;EACjC,MAAM;IAAEe,WAAW;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAgB,CAAC,GAC7D,IAAAC,+BAAwB,EAAC;IACxB9B,OAAO;IACPW,KAAK;IACLT;EACD,CAAC,CAAC;EAEH,MAAM6B,YAAY,GAAG,CAACN,IAAI,GAAG,CAAC,GAAG,CAAC,IAAID,SAAS;EAC/C,MAAMQ,mBAAmB,GAAG,IAAAC,qCAA8B,EAAC;IAC1DtB,KAAK;IACLF;EACD,CAAC,CAAC;EACF,MAAMyB,WAAW,GAAG,IAAAC,cAAK,EAACR,SAAS,CAAC,CAACS,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EAE/D,MAAMC,QAAQ,GAAG,CAAClC,IAAI,GACnB,KAAK,GACLE,KAAK,IAAIP,OAAO,GAChB,CAACI,iBAAiB,GAClB,IAAI;EACP,MAAMoC,eAAe,GAAGxC,OAAO,IAAII,iBAAiB;EAEpD,MAAMqC,QAAQ,GAAGhB,IAAI,GAAG,EAAE,GAAG,EAAE;EAC/B,MAAMiB,SAAS,GAAG;IACjBC,WAAW,EAAEpC,KAAK,GAAG,CAAC,GAAGiC,eAAe,GAAG,CAAC,GAAG,CAAC;IAChD,IAAIjC,KAAK,IAAI;MACZqC,SAAS,EAAE,CACV;QACCC,KAAK,EAAEhC,UAAU,CAACiC,WAAW,CAAC;UAC7BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;QACnB,CAAC;MACF,CAAC;IAEH,CAAC;EACF,CAAC;EAED,MAAMC,WAAsB,GAAG;IAC9BpB,eAAe;IACfH,WAAW;IACXE,WAAW;IACXG,YAAY;IACZ,GAAGC;EACJ,CAAC;EACD,MAAMkB,eAAe,GAAG,IAAAC,uCAAgC,EAAC;IAAEzC;EAAQ,CAAC,CAAC;EACrE,MAAM0C,WAAsB,GAAG;IAC9BrB,YAAY;IACZ,GAAGC;EACJ,CAAC;EACD,MAAMqB,cAAyB,GAAG;IACjC,IAAI,CAAC5B,IAAI,GACN;MACA6B,aAAa,EAAE,WAAW;MAC1BC,UAAU,EAAE;IACZ,CAAC,GACD5C,KAAK,CAAC6C,KAAK,CAACC,UAAU,CAAC;IAC1BtB,KAAK,EAAER;EACR,CAAC;EAED,oBACC,oBAAC,iBAAI;IAAC,KAAK,EAAE,CAACsB,WAAW,EAAES,MAAM,CAACC,MAAM,EAAExD,KAAK;EAAE,gBAChD,oBAAC,wBAAe;IACf,UAAU;IACV,OAAO,EAAEK,OAAQ;IACjB,kBAAkB,EAAEP,kBAAmB;IACvC,kBAAkB,EAAE;MAAEC,QAAQ;MAAEF;IAAQ,CAAE;IAC1C,iBAAiB,EAAC,QAAQ;IAC1B,QAAQ,EAAEE,QAAS;IACnB,WAAW,EAAEgC,WAAY;IACzB,MAAM,EAAE5B,MAAO;IACf,KAAK,EAAE8C;EAAY,gBAEnB,oBAAC,iBAAI;IAAC,KAAK,EAAE,CAACM,MAAM,CAACE,OAAO,EAAE;MAAEV;IAAgB,CAAC;EAAE,GACjDV,eAAe,gBACf,oBAAC,qBAAQ,CAAC,IAAI;IACb,MAAM,EAAG,GAAElC,MAAO,aAAa;IAC/B,KAAK,EAAE,CACNoC,SAAS,EACT;MAAEE,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAEhC;MAAW,CAAC;IAAE,CAAC;EACrC,gBAEF,oBAAC,aAAI;IAAC,MAAM,EAAE,OAAQ;IAAC,IAAI,EAAE4B;EAAS,EAAG,CAC1B,GACb,IAAI,EACPF,QAAQ,gBACR,oBAAC,qBAAQ,CAAC,IAAI;IACb,MAAM,EAAG,GAAEjC,MAAO,OAAO;IACzB,KAAK,EAAEoC;EAAU,gBAEjB,oBAAC,aAAI;IACJ,MAAM,EAAErC,IAAK;IACb,IAAI,EAAEoC,QAAS;IACf,KAAK,EAAEvC,QAAQ,GAAGyB,SAAS,GAAGkC;EAAU,EACvC,CACa,GACb,IAAI,eACR,oBAAC,aAAI;IACJ,OAAO,EAAC,YAAY;IACpB,KAAK,EAAE,CAACH,MAAM,CAACnD,KAAK,EAAE8C,cAAc,CAAE;IACtC,UAAU,EAAE,KAAM;IAClB,aAAa,EAAE;EAAE,GAEhB9C,KAAK,CACA,CACD,CACU,CACZ;AAET,CAAC;AAED,MAAMmD,MAAM,GAAGI,uBAAU,CAACC,MAAM,CAAC;EAChCJ,MAAM,EAAE;IACPK,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACd,CAAC;EACD3D,KAAK,EAAE;IACN4D,SAAS,EAAE;EACZ,CAAC;EACDP,OAAO,EAAE;IACRQ,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBpB,eAAe,EAAE,CAAC;IAClBqB,iBAAiB,EAAE;EACpB;AACD,CAAC,CAAC;AAAC,eAEYxE,mBAAmB;AAAA;AAElC,MAAMyE,wBAAwB,GAAGzE,mBAAmB;AAAC"}