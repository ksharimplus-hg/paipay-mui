{"version":3,"names":["DEFAULT_PADDING","getSegmentedButtonDensityPadding","density","padding","getDisabledSegmentedButtonStyle","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","disabled","isNextDisabled","borderRightWidth","getSegmentedButtonBorderRadius","segment","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","checked","colors","secondaryContainer","color","primary","alpha","rgb","string","getSegmentedButtonBorderColor","surfaceDisabled","outline","dark","white","black","StyleSheet","hairlineWidth","getSegmentedButtonTextColor","onSurfaceDisabled","onSurface","getSegmentedButtonColors","backgroundColor","borderColor","textColor","borderWidth"],"sources":["utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport { black, white } from '../../styles/themes/v2/colors';\r\nimport type { InternalTheme } from '../../types';\r\n\r\ntype BaseProps = {\r\n\ttheme: InternalTheme;\r\n\tdisabled?: boolean;\r\n\tchecked: boolean;\r\n};\r\n\r\nconst DEFAULT_PADDING = 9;\r\n\r\nexport const getSegmentedButtonDensityPadding = ({\r\n\tdensity,\r\n}: {\r\n\tdensity?: 'regular' | 'small' | 'medium' | 'high';\r\n}) => {\r\n\tlet padding = DEFAULT_PADDING;\r\n\r\n\tswitch (density) {\r\n\t\tcase 'small':\r\n\t\t\treturn padding - 2;\r\n\t\tcase 'medium':\r\n\t\t\treturn padding - 4;\r\n\t\tcase 'high':\r\n\t\t\treturn padding - 8;\r\n\t\tdefault:\r\n\t\t\treturn padding;\r\n\t}\r\n};\r\n\r\nexport const getDisabledSegmentedButtonStyle = ({\r\n\ttheme,\r\n\tindex,\r\n\tbuttons,\r\n}: {\r\n\ttheme: InternalTheme;\r\n\tbuttons: { disabled?: boolean }[];\r\n\tindex: number;\r\n}): ViewStyle => {\r\n\tconst width = getSegmentedButtonBorderWidth({ theme });\r\n\tconst isDisabled = buttons[index]?.disabled;\r\n\tconst isNextDisabled = buttons[index + 1]?.disabled;\r\n\r\n\tif (!isDisabled && isNextDisabled) {\r\n\t\treturn {\r\n\t\t\tborderRightWidth: width,\r\n\t\t};\r\n\t}\r\n\treturn {};\r\n};\r\n\r\nexport const getSegmentedButtonBorderRadius = ({\r\n\tsegment,\r\n\ttheme,\r\n}: {\r\n\ttheme: InternalTheme;\r\n\tsegment?: 'first' | 'last';\r\n}): ViewStyle => {\r\n\tif (segment === 'first') {\r\n\t\treturn {\r\n\t\t\tborderTopRightRadius: 0,\r\n\t\t\tborderBottomRightRadius: 0,\r\n\t\t\t...(theme.isV3 && { borderRightWidth: 0 }),\r\n\t\t};\r\n\t} else if (segment === 'last') {\r\n\t\treturn {\r\n\t\t\tborderTopLeftRadius: 0,\r\n\t\t\tborderBottomLeftRadius: 0,\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tborderRadius: 0,\r\n\t\t\t...(theme.isV3 && { borderRightWidth: 0 }),\r\n\t\t};\r\n\t}\r\n};\r\n\r\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\r\n\tif (checked) {\r\n\t\tif (theme.isV3) {\r\n\t\t\treturn theme.colors.secondaryContainer;\r\n\t\t} else {\r\n\t\t\treturn color(theme.colors.primary).alpha(0.12).rgb().string();\r\n\t\t}\r\n\t}\r\n\treturn 'transparent';\r\n};\r\n\r\nconst getSegmentedButtonBorderColor = ({\r\n\ttheme,\r\n\tdisabled,\r\n\tchecked,\r\n}: BaseProps) => {\r\n\tif (theme.isV3) {\r\n\t\tif (disabled) {\r\n\t\t\treturn theme.colors.surfaceDisabled;\r\n\t\t}\r\n\t\treturn theme.colors.outline;\r\n\t}\r\n\tif (checked) {\r\n\t\treturn theme.colors.primary;\r\n\t}\r\n\r\n\treturn color(theme.dark ? white : black)\r\n\t\t.alpha(0.29)\r\n\t\t.rgb()\r\n\t\t.string();\r\n};\r\n\r\nconst getSegmentedButtonBorderWidth = ({\r\n\ttheme,\r\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\r\n\tif (theme.isV3) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn StyleSheet.hairlineWidth;\r\n};\r\n\r\nconst getSegmentedButtonTextColor = ({\r\n\ttheme,\r\n\tdisabled,\r\n}: Omit<BaseProps, 'checked'>) => {\r\n\tif (theme.isV3) {\r\n\t\tif (disabled) {\r\n\t\t\treturn theme.colors.onSurfaceDisabled;\r\n\t\t}\r\n\t\treturn theme.colors.onSurface;\r\n\t} else {\r\n\t\tif (disabled) {\r\n\t\t\treturn theme.colors.disabled;\r\n\t\t}\r\n\t\treturn theme.colors.primary;\r\n\t}\r\n};\r\n\r\nexport const getSegmentedButtonColors = ({\r\n\ttheme,\r\n\tdisabled,\r\n\tchecked,\r\n}: BaseProps) => {\r\n\tconst backgroundColor = getSegmentedButtonBackgroundColor({\r\n\t\ttheme,\r\n\t\tchecked,\r\n\t});\r\n\tconst borderColor = getSegmentedButtonBorderColor({\r\n\t\ttheme,\r\n\t\tdisabled,\r\n\t\tchecked,\r\n\t});\r\n\tconst textColor = getSegmentedButtonTextColor({ theme, disabled });\r\n\tconst borderWidth = getSegmentedButtonBorderWidth({ theme });\r\n\r\n\treturn { backgroundColor, borderColor, textColor, borderWidth };\r\n};\r\n"],"mappings":"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"}