{"version":3,"names":["DialogActions","props","isV3","useInternalTheme","actionsLength","React","Children","toArray","children","length","styles","v3Container","container","style","map","child","i","isValidElement","cloneElement","compact","uppercase","paddingRight","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","flexGrow","paddingBottom","paddingHorizontal"],"sources":["DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n\t/**\n\t * Content of the `DialogActions`.\n\t */\n\tchildren: React.ReactNode;\n\tstyle?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => {\n\tconst { isV3 } = useInternalTheme();\n\tconst actionsLength = React.Children.toArray(props.children).length;\n\n\treturn (\n\t\t<View\n\t\t\t{...props}\n\t\t\tstyle={[isV3 ? styles.v3Container : styles.container, props.style]}\n\t\t>\n\t\t\t{React.Children.map(props.children, (child, i) =>\n\t\t\t\tReact.isValidElement(child)\n\t\t\t\t\t? React.cloneElement(child as React.ReactElement<any>, {\n\t\t\t\t\t\t\tcompact: true,\n\t\t\t\t\t\t\tuppercase: !isV3,\n\t\t\t\t\t\t\tstyle: isV3 && {\n\t\t\t\t\t\t\t\tpaddingRight: i + 1 === actionsLength ? 0 : 8,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  })\n\t\t\t\t\t: child\n\t\t\t)}\n\t\t</View>\n\t);\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: 8,\n\t},\n\tv3Container: {\n\t\tflexDirection: 'row',\n\t\tflexGrow: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpaddingBottom: 24,\n\t\tpaddingHorizontal: 24,\n\t},\n});\n\nexport default DialogActions;\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AAAsD;AAAA;AAAA;AAUtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAIC,KAAY,IAAK;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAG,IAAAC,yBAAgB,GAAE;EACnC,MAAMC,aAAa,GAAGC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACN,KAAK,CAACO,QAAQ,CAAC,CAACC,MAAM;EAEnE,oBACC,oBAAC,iBAAI,eACAR,KAAK;IACT,KAAK,EAAE,CAACC,IAAI,GAAGQ,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACE,SAAS,EAAEX,KAAK,CAACY,KAAK;EAAE,IAElER,KAAK,CAACC,QAAQ,CAACQ,GAAG,CAACb,KAAK,CAACO,QAAQ,EAAE,CAACO,KAAK,EAAEC,CAAC,KAC5C,aAAAX,KAAK,CAACY,cAAc,CAACF,KAAK,CAAC,gBACxBV,KAAK,CAACa,YAAY,CAACH,KAAK,EAA6B;IACrDI,OAAO,EAAE,IAAI;IACbC,SAAS,EAAE,CAAClB,IAAI;IAChBW,KAAK,EAAEX,IAAI,IAAI;MACdmB,YAAY,EAAEL,CAAC,GAAG,CAAC,KAAKZ,aAAa,GAAG,CAAC,GAAG;IAC7C;EACA,CAAC,CAAC,GACFW,KAAK,CACR,CACK;AAET,CAAC;AAEDf,aAAa,CAACsB,WAAW,GAAG,gBAAgB;AAE5C,MAAMZ,MAAM,GAAGa,uBAAU,CAACC,MAAM,CAAC;EAChCZ,SAAS,EAAE;IACVa,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,UAAU;IAC1BC,OAAO,EAAE;EACV,CAAC;EACDjB,WAAW,EAAE;IACZc,aAAa,EAAE,KAAK;IACpBI,QAAQ,EAAE,CAAC;IACXH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,UAAU;IAC1BG,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE;EACpB;AACD,CAAC,CAAC;AAAC,eAEY/B,aAAa;AAAA"}