{"version":3,"names":["DialogScrollArea","props","theme","useInternalTheme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","StyleSheet","hairlineWidth","borderBottomWidth","styles","container","v3Container","style","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n\t/**\n\t * Content of the `DialogScrollArea`.\n\t */\n\tchildren: React.ReactNode;\n\tstyle?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => {\n\tconst theme = useInternalTheme();\n\tconst borderStyles = {\n\t\tborderColor: theme.isV3\n\t\t\t? theme.colors.surfaceVariant\n\t\t\t: 'rgba(0, 0, 0, .12)',\n\t\tborderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n\t\tborderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n\t};\n\treturn (\n\t\t<View\n\t\t\t{...props}\n\t\t\tstyle={[\n\t\t\t\tstyles.container,\n\t\t\t\tborderStyles,\n\t\t\t\ttheme.isV3 && styles.v3Container,\n\t\t\t\tprops.style,\n\t\t\t]}\n\t\t>\n\t\t\t{props.children}\n\t\t</View>\n\t);\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpaddingHorizontal: 24,\n\t\tflexGrow: 1,\n\t\tflexShrink: 1,\n\t},\n\tv3Container: {\n\t\tmarginBottom: 24,\n\t},\n});\n\nexport default DialogScrollArea;\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AAAsD;AAAA;AAAA;AAUtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAIC,KAAY,IAAK;EAC1C,MAAMC,KAAK,GAAG,IAAAC,yBAAgB,GAAE;EAChC,MAAMC,YAAY,GAAG;IACpBC,WAAW,EAAEH,KAAK,CAACI,IAAI,GACpBJ,KAAK,CAACK,MAAM,CAACC,cAAc,GAC3B,oBAAoB;IACvBC,cAAc,EAAEP,KAAK,CAACI,IAAI,GAAG,CAAC,GAAGI,uBAAU,CAACC,aAAa;IACzDC,iBAAiB,EAAEV,KAAK,CAACI,IAAI,GAAG,CAAC,GAAGI,uBAAU,CAACC;EAChD,CAAC;EACD,oBACC,oBAAC,iBAAI,eACAV,KAAK;IACT,KAAK,EAAE,CACNY,MAAM,CAACC,SAAS,EAChBV,YAAY,EACZF,KAAK,CAACI,IAAI,IAAIO,MAAM,CAACE,WAAW,EAChCd,KAAK,CAACe,KAAK;EACV,IAEDf,KAAK,CAACgB,QAAQ,CACT;AAET,CAAC;AAEDjB,gBAAgB,CAACkB,WAAW,GAAG,mBAAmB;AAElD,MAAML,MAAM,GAAGH,uBAAU,CAACS,MAAM,CAAC;EAChCL,SAAS,EAAE;IACVM,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE;EACb,CAAC;EACDP,WAAW,EAAE;IACZQ,YAAY,EAAE;EACf;AACD,CAAC,CAAC;AAAC,eAEYvB,gBAAgB;AAAA"}