{"version":3,"names":["Portal","React","Component","render","children","theme","props","settings","manager","PortalHost","withInternalTheme"],"sources":["Portal.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { InternalTheme } from 'src/types';\n\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport {\n\tConsumer as SettingsConsumer,\n\tProvider as SettingsProvider,\n} from '../../core/settings';\nimport { ThemeProvider, withInternalTheme } from '../../core/theming';\n\nexport type Props = {\n\t/**\n\t * Content of the `Portal`.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * @optional\n\t */\n\ttheme: InternalTheme;\n};\n\n/**\n * Portal allows rendering a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n * Note that if you're using the `Provider` component, this already includes a `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n\t// @component ./PortalHost.tsx\n\tstatic Host = PortalHost;\n\n\trender() {\n\t\tconst { children, theme } = this.props;\n\n\t\treturn (\n\t\t\t<SettingsConsumer>\n\t\t\t\t{(settings) => (\n\t\t\t\t\t<PortalContext.Consumer>\n\t\t\t\t\t\t{(manager) => (\n\t\t\t\t\t\t\t<PortalConsumer manager={manager as PortalMethods}>\n\t\t\t\t\t\t\t\t<SettingsProvider value={settings}>\n\t\t\t\t\t\t\t\t\t{/* @ts-ignore */}\n\t\t\t\t\t\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t\t\t\t</SettingsProvider>\n\t\t\t\t\t\t\t</PortalConsumer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</PortalContext.Consumer>\n\t\t\t\t)}\n\t\t\t</SettingsConsumer>\n\t\t);\n\t}\n}\n\nexport default withInternalTheme(Portal);\n"],"mappings":";;;;;;AAAA;AAIA;AACA;AACA;AAIA;AAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAatE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,MAAM,SAASC,KAAK,CAACC,SAAS,CAAQ;EAC3C;;EAGAC,MAAM,GAAG;IACR,MAAM;MAAEC,QAAQ;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAEtC,oBACC,oBAAC,kBAAgB,QACdC,QAAQ,iBACT,oBAAC,yBAAa,CAAC,QAAQ,QACpBC,OAAO,iBACR,oBAAC,uBAAc;MAAC,OAAO,EAAEA;IAAyB,gBACjD,oBAAC,kBAAgB;MAAC,KAAK,EAAED;IAAS,gBAEjC,oBAAC,sBAAa;MAAC,KAAK,EAAEF;IAAM,GAC1BD,QAAQ,CACM,CACE,CAEpB,CAEF,CACiB;EAErB;AACD;AAAC,gBA1BKJ,MAAM,UAEGS,mBAAU;AAAA,eA0BV,IAAAC,0BAAiB,EAACV,MAAM,CAAC;AAAA"}