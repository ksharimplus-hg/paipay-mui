{"version":3,"names":["getAdornmentConfig","left","right","adornmentConfig","side","AdornmentSide","Left","adornment","Right","forEach","React","isValidElement","type","TextInputAffix","AdornmentType","Affix","TextInputIcon","Icon","push","getAdornmentStyleAdjustmentForNativeInput","leftAffixWidth","rightAffixWidth","paddingHorizontal","inputOffset","mode","isV3","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","getConstants","length","adornmentStyleAdjustmentForNativeInput","map","isLeftSide","inputModeAdornemntOffset","InputMode","Outlined","paddingKey","captalize","affixWidth","padding","offset","isAffix","marginKey","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","text","charAt","toUpperCase","slice","TextInputAdornment","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","inputAdornmentComponent","commonProps","testID"],"sources":["TextInputAdornment.tsx"],"sourcesContent":["import React from 'react';\r\nimport type {\r\n\tLayoutChangeEvent,\r\n\tTextStyle,\r\n\tStyleProp,\r\n\tAnimated,\r\n} from 'react-native';\r\n\r\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\r\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\r\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\r\nimport type {\r\n\tAdornmentConfig,\r\n\tAdornmentStyleAdjustmentForNativeInput,\r\n} from './types';\r\nimport { getConstants } from '../helpers';\r\n\r\nexport function getAdornmentConfig({\r\n\tleft,\r\n\tright,\r\n}: {\r\n\tleft?: React.ReactNode;\r\n\tright?: React.ReactNode;\r\n}): Array<AdornmentConfig> {\r\n\tlet adornmentConfig: any[] = [];\r\n\tif (left || right) {\r\n\t\t[\r\n\t\t\t{ side: AdornmentSide.Left, adornment: left },\r\n\t\t\t{ side: AdornmentSide.Right, adornment: right },\r\n\t\t].forEach(({ side, adornment }) => {\r\n\t\t\tif (adornment && React.isValidElement(adornment)) {\r\n\t\t\t\tlet type;\r\n\t\t\t\tif (adornment.type === TextInputAffix) {\r\n\t\t\t\t\ttype = AdornmentType.Affix;\r\n\t\t\t\t} else if (adornment.type === TextInputIcon) {\r\n\t\t\t\t\ttype = AdornmentType.Icon;\r\n\t\t\t\t}\r\n\t\t\t\tadornmentConfig.push({\r\n\t\t\t\t\tside,\r\n\t\t\t\t\ttype,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn adornmentConfig;\r\n}\r\n\r\nexport function getAdornmentStyleAdjustmentForNativeInput({\r\n\tadornmentConfig,\r\n\tleftAffixWidth,\r\n\trightAffixWidth,\r\n\tpaddingHorizontal,\r\n\tinputOffset = 0,\r\n\tmode,\r\n\tisV3,\r\n}: {\r\n\tinputOffset?: number;\r\n\tadornmentConfig: AdornmentConfig[];\r\n\tleftAffixWidth: number;\r\n\trightAffixWidth: number;\r\n\tmode?: 'outlined' | 'flat';\r\n\tpaddingHorizontal?: number | string;\r\n\tisV3?: boolean;\r\n}): AdornmentStyleAdjustmentForNativeInput | {} {\r\n\tconst { OUTLINED_INPUT_OFFSET, ADORNMENT_OFFSET } = getConstants(isV3);\r\n\r\n\tif (adornmentConfig.length) {\r\n\t\tconst adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\r\n\t\t\t({ type, side }: AdornmentConfig) => {\r\n\t\t\t\tconst isLeftSide = side === AdornmentSide.Left;\r\n\t\t\t\tconst inputModeAdornemntOffset =\r\n\t\t\t\t\tmode === InputMode.Outlined\r\n\t\t\t\t\t\t? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\r\n\t\t\t\t\t\t: ADORNMENT_OFFSET;\r\n\t\t\t\tconst paddingKey = `padding${captalize(side)}`;\r\n\t\t\t\tconst affixWidth = isLeftSide\r\n\t\t\t\t\t? leftAffixWidth\r\n\t\t\t\t\t: rightAffixWidth;\r\n\t\t\t\tconst padding =\r\n\t\t\t\t\ttypeof paddingHorizontal === 'number'\r\n\t\t\t\t\t\t? paddingHorizontal\r\n\t\t\t\t\t\t: inputModeAdornemntOffset;\r\n\t\t\t\tconst offset = affixWidth + padding;\r\n\r\n\t\t\t\tconst isAffix = type === AdornmentType.Affix;\r\n\t\t\t\tconst marginKey = `margin${captalize(side)}`;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t[marginKey]: isAffix ? 0 : offset,\r\n\t\t\t\t\t[paddingKey]: isAffix ? offset : inputOffset,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst allStyleAdjustmentsMerged =\r\n\t\t\tadornmentStyleAdjustmentForNativeInput.reduce(\r\n\t\t\t\t(mergedStyles, currentStyle) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...mergedStyles,\r\n\t\t\t\t\t\t...currentStyle,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t);\r\n\t\treturn allStyleAdjustmentsMerged;\r\n\t} else {\r\n\t\treturn [{}];\r\n\t}\r\n}\r\n\r\nconst captalize = (text: string) =>\r\n\ttext.charAt(0).toUpperCase() + text.slice(1);\r\n\r\nexport interface TextInputAdornmentProps {\r\n\tforceFocus: () => void;\r\n\tadornmentConfig: AdornmentConfig[];\r\n\ttopPosition: {\r\n\t\t[AdornmentType.Affix]: {\r\n\t\t\t[AdornmentSide.Left]: number | null;\r\n\t\t\t[AdornmentSide.Right]: number | null;\r\n\t\t};\r\n\t\t[AdornmentType.Icon]: number;\r\n\t};\r\n\tonAffixChange: {\r\n\t\t[AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\r\n\t\t[AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\r\n\t};\r\n\tleft?: React.ReactNode;\r\n\tright?: React.ReactNode;\r\n\ttextStyle?: StyleProp<TextStyle>;\r\n\tvisible?: Animated.Value;\r\n\tisTextInputFocused: boolean;\r\n\tpaddingHorizontal?: number | string;\r\n\tmaxFontSizeMultiplier?: number | undefined | null;\r\n}\r\n\r\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\r\n\tadornmentConfig,\r\n\tleft,\r\n\tright,\r\n\tonAffixChange,\r\n\ttextStyle,\r\n\tvisible,\r\n\ttopPosition,\r\n\tisTextInputFocused,\r\n\tforceFocus,\r\n\tpaddingHorizontal,\r\n\tmaxFontSizeMultiplier,\r\n}) => {\r\n\tif (adornmentConfig.length) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{adornmentConfig.map(({ type, side }: AdornmentConfig) => {\r\n\t\t\t\t\tlet inputAdornmentComponent;\r\n\t\t\t\t\tif (side === AdornmentSide.Left) {\r\n\t\t\t\t\t\tinputAdornmentComponent = left;\r\n\t\t\t\t\t} else if (side === AdornmentSide.Right) {\r\n\t\t\t\t\t\tinputAdornmentComponent = right;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst commonProps = {\r\n\t\t\t\t\t\tside: side,\r\n\t\t\t\t\t\ttestID: `${side}-${type}-adornment`,\r\n\t\t\t\t\t\tisTextInputFocused,\r\n\t\t\t\t\t\tpaddingHorizontal,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (type === AdornmentType.Icon) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<IconAdornment\r\n\t\t\t\t\t\t\t\t{...commonProps}\r\n\t\t\t\t\t\t\t\tkey={side}\r\n\t\t\t\t\t\t\t\ticon={inputAdornmentComponent}\r\n\t\t\t\t\t\t\t\ttopPosition={topPosition[AdornmentType.Icon]}\r\n\t\t\t\t\t\t\t\tforceFocus={forceFocus}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (type === AdornmentType.Affix) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<AffixAdornment\r\n\t\t\t\t\t\t\t\t{...commonProps}\r\n\t\t\t\t\t\t\t\tkey={side}\r\n\t\t\t\t\t\t\t\ttopPosition={\r\n\t\t\t\t\t\t\t\t\ttopPosition[AdornmentType.Affix][side]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\taffix={inputAdornmentComponent}\r\n\t\t\t\t\t\t\t\ttextStyle={textStyle}\r\n\t\t\t\t\t\t\t\tonLayout={onAffixChange[side]}\r\n\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\tmaxFontSizeMultiplier={maxFontSizeMultiplier}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport default TextInputAdornment;\r\n"],"mappings":"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"}