{"version":3,"names":["StyleContext","React","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","icon","topPosition","side","isV3","useInternalTheme","ICON_OFFSET","getConstants","top","contextState","TextInputIcon","onPress","forceTextInputFocus","color","rest","useContext","onPressWithFocusControl","useCallback","e","theme","iconColor","disabled","colors","onSurface","onSurfaceVariant","text","styles","container","iconButton","ICON_SIZE","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"sources":["TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n\tGestureResponderEvent,\n\tStyleProp,\n\tStyleSheet,\n\tView,\n\tViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n\tReact.ComponentProps<typeof IconButton>,\n\t'icon' | 'theme' | 'color'\n> & {\n\t/**\n\t * @renamed Renamed from 'name' to 'icon` in v5.x\n\t * Icon to show.\n\t */\n\ticon: IconSource;\n\t/**\n\t * Function to execute on press.\n\t */\n\tonPress?: (e: GestureResponderEvent) => void;\n\t/**\n\t * Whether the TextInput will focus after onPress.\n\t */\n\tforceTextInputFocus?: boolean;\n\t/**\n\t * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n\t */\n\tcolor?: ((isTextInputFocused: boolean) => string | undefined) | string;\n\tstyle?: StyleProp<ViewStyle>;\n\t/**\n\t * @optional\n\t */\n\ttheme?: ThemeProp;\n};\n\ntype StyleContextType = {\n\tstyle: StyleProp<ViewStyle>;\n\tisTextInputFocused: boolean;\n\tforceFocus: () => void;\n\ttestID: string;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n\tstyle: {},\n\tisTextInputFocused: false,\n\tforceFocus: () => {},\n\ttestID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n\t{\n\t\ttestID: string;\n\t\ticon: React.ReactNode;\n\t\ttopPosition: number;\n\t\tside: 'left' | 'right';\n\t} & Omit<StyleContextType, 'style'>\n> = ({ icon, topPosition, side, isTextInputFocused, forceFocus, testID }) => {\n\tconst { isV3 } = useInternalTheme();\n\tconst { ICON_OFFSET } = getConstants(isV3);\n\n\tconst style = {\n\t\ttop: topPosition,\n\t\t[side]: ICON_OFFSET,\n\t};\n\tconst contextState = { style, isTextInputFocused, forceFocus, testID };\n\n\treturn (\n\t\t<StyleContext.Provider value={contextState}>\n\t\t\t{icon}\n\t\t</StyleContext.Provider>\n\t);\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n\ticon,\n\tonPress,\n\tforceTextInputFocus,\n\tcolor,\n\t...rest\n}: Props) => {\n\tconst { style, isTextInputFocused, forceFocus, testID } =\n\t\tReact.useContext(StyleContext);\n\n\tconst onPressWithFocusControl = React.useCallback(\n\t\t(e: GestureResponderEvent) => {\n\t\t\tif (forceTextInputFocus && !isTextInputFocused) {\n\t\t\t\tforceFocus();\n\t\t\t}\n\n\t\t\tonPress?.(e);\n\t\t},\n\t\t[forceTextInputFocus, forceFocus, isTextInputFocused, onPress]\n\t);\n\n\tconst theme = useInternalTheme();\n\n\tlet iconColor = color;\n\n\tif (theme.isV3) {\n\t\tif (rest.disabled) {\n\t\t\ticonColor = theme.colors.onSurface;\n\t\t}\n\t\ticonColor = theme.colors.onSurfaceVariant;\n\t} else {\n\t\ticonColor = theme.colors.text;\n\t}\n\n\treturn (\n\t\t<View style={[styles.container, style]}>\n\t\t\t<IconButton\n\t\t\t\ticon={icon}\n\t\t\t\tstyle={styles.iconButton}\n\t\t\t\tsize={ICON_SIZE}\n\t\t\t\tonPress={onPressWithFocusControl}\n\t\t\t\ticonColor={\n\t\t\t\t\ttypeof color === 'function'\n\t\t\t\t\t\t? color(isTextInputFocused)\n\t\t\t\t\t\t: iconColor\n\t\t\t\t}\n\t\t\t\ttestID={testID}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t</View>\n\t);\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n\tforceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tposition: 'absolute',\n\t\twidth: ICON_SIZE,\n\t\theight: ICON_SIZE,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t},\n\ticonButton: {\n\t\tmargin: 0,\n\t},\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":";;;;;;AAAA;AACA;AAQA;AAGA;AACA;AACA;AAA0C;AAAA;AAqC1C,MAAMA,YAAY,gBAAGC,cAAK,CAACC,aAAa,CAAmB;EAC1DC,KAAK,EAAE,CAAC,CAAC;EACTC,kBAAkB,EAAE,KAAK;EACzBC,UAAU,EAAE,MAAM,CAAC,CAAC;EACpBC,MAAM,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,aAOL,GAAG,QAAyE;EAAA,IAAxE;IAAEC,IAAI;IAAEC,WAAW;IAAEC,IAAI;IAAEN,kBAAkB;IAAEC,UAAU;IAAEC;EAAO,CAAC;EACvE,MAAM;IAAEK;EAAK,CAAC,GAAG,IAAAC,yBAAgB,GAAE;EACnC,MAAM;IAAEC;EAAY,CAAC,GAAG,IAAAC,qBAAY,EAACH,IAAI,CAAC;EAE1C,MAAMR,KAAK,GAAG;IACbY,GAAG,EAAEN,WAAW;IAChB,CAACC,IAAI,GAAGG;EACT,CAAC;EACD,MAAMG,YAAY,GAAG;IAAEb,KAAK;IAAEC,kBAAkB;IAAEC,UAAU;IAAEC;EAAO,CAAC;EAEtE,oBACC,6BAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAEU;EAAa,GACzCR,IAAI,CACkB;AAE1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA8BA,MAAMS,aAAa,GAAG,SAMT;EAAA,IANU;IACtBT,IAAI;IACJU,OAAO;IACPC,mBAAmB;IACnBC,KAAK;IACL,GAAGC;EACG,CAAC;EACP,MAAM;IAAElB,KAAK;IAAEC,kBAAkB;IAAEC,UAAU;IAAEC;EAAO,CAAC,GACtDL,cAAK,CAACqB,UAAU,CAACtB,YAAY,CAAC;EAE/B,MAAMuB,uBAAuB,GAAGtB,cAAK,CAACuB,WAAW,CAC/CC,CAAwB,IAAK;IAC7B,IAAIN,mBAAmB,IAAI,CAACf,kBAAkB,EAAE;MAC/CC,UAAU,EAAE;IACb;IAEAa,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGO,CAAC,CAAC;EACb,CAAC,EACD,CAACN,mBAAmB,EAAEd,UAAU,EAAED,kBAAkB,EAAEc,OAAO,CAAC,CAC9D;EAED,MAAMQ,KAAK,GAAG,IAAAd,yBAAgB,GAAE;EAEhC,IAAIe,SAAS,GAAGP,KAAK;EAErB,IAAIM,KAAK,CAACf,IAAI,EAAE;IACf,IAAIU,IAAI,CAACO,QAAQ,EAAE;MAClBD,SAAS,GAAGD,KAAK,CAACG,MAAM,CAACC,SAAS;IACnC;IACAH,SAAS,GAAGD,KAAK,CAACG,MAAM,CAACE,gBAAgB;EAC1C,CAAC,MAAM;IACNJ,SAAS,GAAGD,KAAK,CAACG,MAAM,CAACG,IAAI;EAC9B;EAEA,oBACC,6BAAC,iBAAI;IAAC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE/B,KAAK;EAAE,gBACtC,6BAAC,mBAAU;IACV,IAAI,EAAEK,IAAK;IACX,KAAK,EAAEyB,MAAM,CAACE,UAAW;IACzB,IAAI,EAAEC,oBAAU;IAChB,OAAO,EAAEb,uBAAwB;IACjC,SAAS,EACR,OAAOH,KAAK,KAAK,UAAU,GACxBA,KAAK,CAAChB,kBAAkB,CAAC,GACzBuB,SACH;IACD,MAAM,EAAErB;EAAO,GACXe,IAAI,EACP,CACI;AAET,CAAC;AACDJ,aAAa,CAACoB,WAAW,GAAG,gBAAgB;AAE5CpB,aAAa,CAACqB,YAAY,GAAG;EAC5BnB,mBAAmB,EAAE;AACtB,CAAC;AAED,MAAMc,MAAM,GAAGM,uBAAU,CAACC,MAAM,CAAC;EAChCN,SAAS,EAAE;IACVO,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAEN,oBAAS;IAChBO,MAAM,EAAEP,oBAAS;IACjBQ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACb,CAAC;EACDV,UAAU,EAAE;IACXW,MAAM,EAAE;EACT;AACD,CAAC,CAAC;AAAC,eAEY7B,aAAa,EAE5B;AAAA"}