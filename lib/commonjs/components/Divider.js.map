{"version":3,"names":["Divider","leftInset","horizontalInset","style","theme","bold","rest","dark","isDarkTheme","isV3","dividerColor","colors","outlineVariant","color","white","black","alpha","rgb","string","height","StyleSheet","hairlineWidth","backgroundColor","styles","v3LeftInset","create","marginLeft","marginRight","withInternalTheme"],"sources":["Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { $RemoveChildren, InternalTheme } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n\t/**\n\t * @renamed Renamed from 'inset' to 'leftInset` in v5.x\n\t * Whether divider has a left inset.\n\t */\n\tleftInset?: boolean;\n\t/**\n\t * @supported Available in v5.x with theme version 3\n\t *  Whether divider has a horizontal inset on both sides.\n\t */\n\thorizontalInset?: boolean;\n\t/**\n\t * @supported Available in v5.x with theme version 3\n\t *  Whether divider should be bolded.\n\t */\n\tbold?: boolean;\n\tstyle?: StyleProp<ViewStyle>;\n\t/**\n\t * @optional\n\t */\n\ttheme: InternalTheme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n\tleftInset,\n\thorizontalInset = false,\n\tstyle,\n\ttheme,\n\tbold = false,\n\t...rest\n}: Props) => {\n\tconst { dark: isDarkTheme, isV3 } = theme;\n\n\tconst dividerColor = isV3\n\t\t? theme.colors.outlineVariant\n\t\t: color(isDarkTheme ? white : black)\n\t\t\t\t.alpha(0.12)\n\t\t\t\t.rgb()\n\t\t\t\t.string();\n\n\treturn (\n\t\t<View\n\t\t\t{...rest}\n\t\t\tstyle={[\n\t\t\t\t{\n\t\t\t\t\theight: StyleSheet.hairlineWidth,\n\t\t\t\t\tbackgroundColor: dividerColor,\n\t\t\t\t},\n\t\t\t\tleftInset && (isV3 ? styles.v3LeftInset : styles.leftInset),\n\t\t\t\tisV3 && horizontalInset && styles.horizontalInset,\n\t\t\t\tisV3 && bold && styles.bold,\n\t\t\t\tstyle,\n\t\t\t]}\n\t\t/>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tleftInset: {\n\t\tmarginLeft: 72,\n\t},\n\tv3LeftInset: {\n\t\tmarginLeft: 16,\n\t},\n\thorizontalInset: {\n\t\tmarginLeft: 16,\n\t\tmarginRight: 16,\n\t},\n\tbold: {\n\t\theight: 1,\n\t},\n});\n\nexport default withInternalTheme(Divider);\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAA0D;AAAA;AAAA;AAAA;AA0B1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,QAOH;EAAA,IAPI;IAChBC,SAAS;IACTC,eAAe,GAAG,KAAK;IACvBC,KAAK;IACLC,KAAK;IACLC,IAAI,GAAG,KAAK;IACZ,GAAGC;EACG,CAAC;EACP,MAAM;IAAEC,IAAI,EAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGL,KAAK;EAEzC,MAAMM,YAAY,GAAGD,IAAI,GACtBL,KAAK,CAACO,MAAM,CAACC,cAAc,GAC3B,IAAAC,cAAK,EAACL,WAAW,GAAGM,aAAK,GAAGC,aAAK,CAAC,CACjCC,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE;EAEZ,oBACC,oBAAC,iBAAI,eACAZ,IAAI;IACR,KAAK,EAAE,CACN;MACCa,MAAM,EAAEC,uBAAU,CAACC,aAAa;MAChCC,eAAe,EAAEZ;IAClB,CAAC,EACDT,SAAS,KAAKQ,IAAI,GAAGc,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACtB,SAAS,CAAC,EAC3DQ,IAAI,IAAIP,eAAe,IAAIqB,MAAM,CAACrB,eAAe,EACjDO,IAAI,IAAIJ,IAAI,IAAIkB,MAAM,CAAClB,IAAI,EAC3BF,KAAK;EACJ,GACD;AAEJ,CAAC;AAED,MAAMoB,MAAM,GAAGH,uBAAU,CAACK,MAAM,CAAC;EAChCxB,SAAS,EAAE;IACVyB,UAAU,EAAE;EACb,CAAC;EACDF,WAAW,EAAE;IACZE,UAAU,EAAE;EACb,CAAC;EACDxB,eAAe,EAAE;IAChBwB,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACd,CAAC;EACDtB,IAAI,EAAE;IACLc,MAAM,EAAE;EACT;AACD,CAAC,CAAC;AAAC,eAEY,IAAAS,0BAAiB,EAAC5B,OAAO,CAAC;AAAA"}