{"version":3,"names":["useLayout","layout","setLayout","React","useState","height","width","measured","onLayout","useCallback","e","nativeEvent"],"sources":["useLayout.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport type { LayoutChangeEvent } from 'react-native';\r\n\r\nexport default function useLayout() {\r\n\tconst [layout, setLayout] = React.useState<{\r\n\t\theight: number;\r\n\t\twidth: number;\r\n\t\tmeasured: boolean;\r\n\t}>({ height: 0, width: 0, measured: false });\r\n\r\n\tconst onLayout = React.useCallback(\r\n\t\t(e: LayoutChangeEvent) => {\r\n\t\t\tconst { height, width } = e.nativeEvent.layout;\r\n\r\n\t\t\tif (height === layout.height && width === layout.width) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetLayout({\r\n\t\t\t\theight,\r\n\t\t\t\twidth,\r\n\t\t\t\tmeasured: true,\r\n\t\t\t});\r\n\t\t},\r\n\t\t[layout.height, layout.width]\r\n\t);\r\n\r\n\treturn [layout, onLayout] as const;\r\n}\r\n"],"mappings":";;;;;;AAAA;AAA+B;AAAA;AAGhB,SAASA,SAAS,GAAG;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAIvC;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAM,CAAC,CAAC;EAE5C,MAAMC,QAAQ,GAAGL,KAAK,CAACM,WAAW,CAChCC,CAAoB,IAAK;IACzB,MAAM;MAAEL,MAAM;MAAEC;IAAM,CAAC,GAAGI,CAAC,CAACC,WAAW,CAACV,MAAM;IAE9C,IAAII,MAAM,KAAKJ,MAAM,CAACI,MAAM,IAAIC,KAAK,KAAKL,MAAM,CAACK,KAAK,EAAE;MACvD;IACD;IAEAJ,SAAS,CAAC;MACTG,MAAM;MACNC,KAAK;MACLC,QAAQ,EAAE;IACX,CAAC,CAAC;EACH,CAAC,EACD,CAACN,MAAM,CAACI,MAAM,EAAEJ,MAAM,CAACK,KAAK,CAAC,CAC7B;EAED,OAAO,CAACL,MAAM,EAAEO,QAAQ,CAAC;AAC1B"}